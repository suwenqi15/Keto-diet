{"version":3,"sources":["./src/app/Home/home.page.html","./src/app/Home/home-routing.module.ts","./src/app/Home/home.module.ts","./src/app/Home/home.page.scss","./src/app/Home/home.page.ts","./src/app/services/dailyfood.service.ts"],"names":[],"mappings":"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","file":"Home-home-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>\\n      Diet Tracking\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"ion-padding\\\">\\n  <ion-item lines=\\\"none\\\">\\n    <ion-datetime  [(ngModel)]=\\\"myDate\\\" class=time displayFormat=\\\"DD-MM-YYYY\\\" placeholderdate=\\\"Today\\\"></ion-datetime>\\n\\n</ion-item>\\n  <ion-segment color=\\\"primary\\\" [(ngModel)]=\\\"type\\\" (ionChange)=\\\"segmentChanged($event)\\\" scrollable>\\n    <ion-segment-button value=\\\"breakfast\\\" checked>\\n        <ion-label>Breakfast</ion-label>\\n      \\n      </ion-segment-button>\\n      <ion-segment-button value=\\\"lunch\\\">\\n        <ion-label>Lunch</ion-label>\\n      \\n      </ion-segment-button>\\n      <ion-segment-button value=\\\"eveningmeal\\\">\\n        <ion-label>Evening Meal</ion-label>\\n   \\n      </ion-segment-button>\\n      <ion-segment-button value=\\\"snack1\\\">\\n        <ion-label>Snack 1</ion-label>\\n      \\n      </ion-segment-button>\\n      <ion-segment-button value=\\\"snack2\\\">\\n        <ion-label>Snack 2</ion-label>\\n     \\n      </ion-segment-button>\\n      <ion-segment-button value=\\\"snack3\\\">\\n        <ion-label>Snack 3</ion-label>\\n\\n      </ion-segment-button>\\n      <ion-segment-button value=\\\"others\\\">\\n        <ion-label>Others</ion-label>\\n\\n      </ion-segment-button>\\n      \\n    </ion-segment>\\n\\n\\n\\n\\n    \\n  <!-- section of Breakfast start -->\\n <div [hidden]=\\\"type !='breakfast'\\\">\\n\\n\\n\\n<!-- <app-card> </app-card> -->\\n\\n\\n  <ion-list>\\n    \\n\\n    <!-- loop and print out what has already in the list -->\\n    <ion-card *ngFor=\\\"let att of anArrayBreakfast; let i=index\\\" >  \\n      <ion-item-sliding >\\n        <ion-item-options  side=\\\"end\\\">\\n        <ion-button color = \\\"danger\\\" (click)=\\\"removeItemBreakfast(i)\\\"><ion-icon name=\\\"trash\\\"></ion-icon> Delete</ion-button>\\n      </ion-item-options>\\n        <ion-item  lines=\\\"none\\\">\\n        <ion-label class=\\\"label\\\"> Food Name</ion-label>\\n        <ion-input  formControlName = \\\"food_name\\\" type=\\\"text\\\" required class = \\\"right\\\" placeholder={{att.food_name}} ></ion-input> \\n\\n      </ion-item>\\n    \\n      <ion-item lines=\\\"none\\\">\\n        <ion-label class=\\\"label\\\">Unit</ion-label>\\n        <!-- <ion-select value=\\\"gram\\\" okText=\\\"Okay\\\" cancelText=\\\"Dismiss\\\">\\n          <ion-select-option formControlName = \\\"unit\\\" type=\\\"text\\\" required class = \\\"left1\\\" >Gram</ion-select-option>\\n          <ion-select-option formControlName = \\\"unit\\\" type=\\\"text\\\" required class = \\\"left1\\\">Tbsl</ion-select-option>\\n        </ion-select> -->\\n        <ion-input  formControlName = \\\"unit\\\" type=\\\"text\\\" required class = \\\"left1\\\" placeholder=\\\"{{att.unit}}\\\" ></ion-input>\\n        <ion-label class=\\\"unique\\\">Qty</ion-label>\\n        <ion-input  formControlName = \\\"qty\\\"  type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\"{{att.qty}}\\\"></ion-input>\\n       \\n      </ion-item>\\n      <ion-item lines=\\\"none\\\" >\\n        \\n        <ion-label class=\\\"label\\\">CHO</ion-label>\\n        <ion-input formControlName = \\\"cho\\\"  type=\\\"text\\\" required class = \\\"left2\\\" placeholder=\\\"{{att.cho}}\\\"></ion-input>\\n        <ion-label class=\\\"label\\\">Fat</ion-label>\\n        <ion-input formControlName = \\\"fat\\\" type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\"{{att.fat}}\\\"></ion-input>\\n      </ion-item>\\n    </ion-item-sliding>\\n  \\n    </ion-card>\\n</ion-list>\\n\\n  \\n<!-- take in what user eat -->\\n<ion-list>\\n  <form [formGroup]=\\\"foodCardForm\\\" (ngSubmit)=\\\"onSaveBreakfast()\\\">\\n  <ion-card >  \\n    <ion-item-sliding >\\n      <ion-item-options  side=\\\"end\\\">\\n    </ion-item-options>\\n\\n\\n    \\n    \\n \\n        <ion-searchbar (ionInput) = \\\"filterJsonData($event)\\\"></ion-searchbar> \\n\\n\\n        <!-- <ion-item>\\n          <ion-label>Users</ion-label>\\n          <ion-select [compareWith]=\\\"compareWith\\\">\\n            <ion-select-option *ngFor=\\\"let user of jsonData\\\">{{user.first + ' ' + user.last}}</ion-select-option>\\n          </ion-select>\\n        </ion-item> -->\\n\\n\\n      \\n      \\n        <!-- <ion-select [(ngModel)]=\\\"food\\\" >\\n          <ion-select-option *ngFor=\\\"let food of jsonData\\\" [value]=\\\"food\\\"></ion-select-option>\\n        </ion-select> -->\\n\\n      \\n       \\n         <ion-list >\\n      <ion-item (click) = \\\"selectVal(object.name)\\\" *ngFor = \\\"let object of jsonData\\\"> \\n        {{object.name}}\\n      </ion-item>\\n    </ion-list>  \\n\\n    <ion-item lines=\\\"none\\\">\\n      <ion-label class=\\\"label\\\"> Food Name</ion-label>\\n \\n      <ion-input  formControlName = \\\"food_name\\\" type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\" Enter\\\" ></ion-input>\\n    </ion-item>\\n    <ion-item lines=\\\"none\\\">\\n      <ion-label class=\\\"label\\\">Unit</ion-label>\\n      <ion-input  formControlName = \\\"unit\\\" type=\\\"text\\\" required class = \\\"left1\\\" placeholder=\\\"Enter\\\" ></ion-input>\\n\\n      <ion-label class=\\\"unique\\\">Qty</ion-label>\\n      <ion-input  formControlName = \\\"qty\\\"  type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\"Enter\\\" ></ion-input>\\n    </ion-item>\\n\\n\\n    <ion-item lines=\\\"none\\\" >\\n      \\n      <ion-label class=\\\"label\\\">CHO</ion-label>\\n      <ion-input #choiput value = \\\"custom\\\" formControlName = \\\"cho\\\"  type=\\\"text\\\" required class = \\\"left2\\\" placeholder=\\\"Enter\\\"></ion-input>\\n      <ion-label class=\\\"label\\\">Fat</ion-label>\\n      <ion-input id = \\\"fatinput\\\" formControlName = \\\"fat\\\" type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\"Enter\\\"></ion-input>\\n    </ion-item>\\n\\n  </ion-item-sliding>\\n\\n  </ion-card>\\n  \\n  \\n</form >\\n\\n</ion-list>\\n\\n\\n<ion-button  (click)=\\\"AddBreakfast()\\\" size = \\\"small\\\" class = \\\"center\\\" color=\\\"primary\\\">Add Food</ion-button>\\n<ion-button  (click)=\\\"storeToDatabase()\\\" size = \\\"small\\\" class = \\\"center\\\" color=\\\"primary\\\">Store to Database</ion-button>\\n\\n\\n<ion-list>\\n  <ion-item>\\n    <ion-label class = \\\"label\\\">Breakfast CHO Sum</ion-label>\\n    <ion-input  class = \\\"right\\\" placeholder={{curChoBreakfast}} ></ion-input>\\n  </ion-item>\\n</ion-list>\\n  <ion-list>\\n    <ion-item>\\n      <ion-label class = \\\"label\\\">Breakfast Fat Sum</ion-label>\\n      <ion-input   class = \\\"right\\\" placeholder={{curFatBreakfast}}></ion-input>\\n    </ion-item>\\n    </ion-list>  \\n<ion-list>\\n  <ion-item>\\n    <ion-label class = \\\"label\\\">Daily CHO Sum</ion-label>\\n    <ion-input  class = \\\"right\\\" placeholder={{curChoTotal}} ></ion-input>\\n  </ion-item>\\n  </ion-list>\\n  <ion-list>\\n    <ion-item>\\n      <ion-label class = \\\"label\\\">Daily Fat Sum</ion-label>\\n      <ion-input  class = \\\"right\\\" placeholder={{curFatTotal}} ></ion-input>\\n    </ion-item>\\n    </ion-list>\\n  </div>\\n\\n\\n\\n<!-- \\n  <ion-card>\\n    <ion-item lines=\\\"inset\\\" *ngFor=\\\"let data of Data\\\">\\n      <ion-label>\\n        <h5 >Date:{{myDate}}</h5>\\n        <h5>CHO:{{data.cho}}</h5>\\n        <h5>Fat:{{data.fat}}</h5>\\n      </ion-label>\\n      <div class=\\\"item-note\\\" item-end>     \\n        <ion-icon name=\\\"trash\\\" style=\\\"zoom:2.0\\\" (click)=\\\"deleteFood(data.id)\\\"></ion-icon>\\n      </div>\\n    </ion-item>\\n  </ion-card>   -->\\n\\n\\n\\n  <!-- section of Breakfast end -->\\n\\n\\n\\n\\n\\n\\n  \\n  <!-- section of lunch start -->\\n  <div [hidden]=\\\"type !='lunch'\\\">\\n\\n\\n    <!-- <app-card> </app-card> -->\\n    \\n    \\n      <ion-list>\\n       \\n        <ion-card *ngFor=\\\"let att of anArrayLunch; let i=index\\\" >  \\n          <ion-item-sliding >\\n            <ion-item-options  side=\\\"end\\\">\\n            <ion-button color = \\\"danger\\\" (click)=\\\"removeItemLunch(i)\\\"><ion-icon name=\\\"trash\\\"></ion-icon> Delete</ion-button>\\n          </ion-item-options>\\n          \\n            <ion-item  lines=\\\"none\\\">\\n            <ion-label class=\\\"label\\\"> Food Name</ion-label>\\n            <ion-input  formControlName = \\\"food_name\\\" type=\\\"text\\\" required class = \\\"right\\\" placeholder={{att.food_name}} ></ion-input> \\n    \\n          </ion-item>\\n        \\n          <ion-item lines=\\\"none\\\">\\n            <ion-label class=\\\"label\\\">Unit</ion-label>\\n            <ion-input  formControlName = \\\"unit\\\" type=\\\"text\\\" required class = \\\"left1\\\" placeholder=\\\"{{att.unit}}\\\" ></ion-input>\\n            \\n            <ion-label class=\\\"unique\\\">Qty</ion-label>\\n            <ion-input  formControlName = \\\"qty\\\"  type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\"{{att.qty}}\\\"></ion-input>\\n           \\n          </ion-item>\\n          <ion-item lines=\\\"none\\\" >\\n            \\n            <ion-label class=\\\"label\\\">CHO</ion-label>\\n            <ion-input formControlName = \\\"cho\\\"  type=\\\"text\\\" required class = \\\"left2\\\" placeholder=\\\"{{att.cho}}\\\"></ion-input>\\n            <ion-label class=\\\"label\\\">Fat</ion-label>\\n            <ion-input formControlName = \\\"fat\\\" type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\"{{att.fat}}\\\"></ion-input>\\n          </ion-item>\\n        </ion-item-sliding>\\n      \\n        </ion-card>\\n  \\n    </ion-list>\\n    \\n      \\n    <ion-list>\\n      <form [formGroup]=\\\"foodCardForm\\\" (ngSubmit)=\\\"onSaveLunch()\\\">\\n        <ion-card >  \\n          <ion-item-sliding >\\n            <ion-item-options  side=\\\"end\\\">\\n          </ion-item-options>\\n            <ion-item  lines=\\\"none\\\">\\n            <ion-label class=\\\"label\\\"> Food Name</ion-label>\\n       \\n            <ion-input  formControlName = \\\"food_name\\\" type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\" Enter\\\" ></ion-input>\\n          </ion-item>\\n          <ion-item lines=\\\"none\\\">\\n            <ion-label class=\\\"label\\\">Unit</ion-label>\\n            <ion-input  formControlName = \\\"unit\\\" type=\\\"text\\\" required class = \\\"left1\\\" placeholder=\\\"Enter\\\" ></ion-input>\\n      \\n            <ion-label class=\\\"unique\\\">Qty</ion-label>\\n            <ion-input  formControlName = \\\"qty\\\"  type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\"Enter\\\" ></ion-input>\\n          </ion-item>\\n      \\n      \\n          <ion-item lines=\\\"none\\\" >\\n            \\n            <ion-label class=\\\"label\\\">CHO</ion-label>\\n            <ion-input formControlName = \\\"cho\\\"  type=\\\"text\\\" required class = \\\"left2\\\" placeholder=\\\"Enter\\\"></ion-input>\\n            <ion-label class=\\\"label\\\">Fat</ion-label>\\n            <ion-input formControlName = \\\"fat\\\" type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\"Enter\\\"></ion-input>\\n          </ion-item>\\n      \\n        </ion-item-sliding>\\n      \\n        </ion-card>\\n    </form >\\n    \\n    </ion-list>\\n    \\n    \\n    <ion-button  (click)=\\\"AddLunch()\\\" size = \\\"small\\\" class = \\\"center\\\" color=\\\"primary\\\">Add Food</ion-button>\\n    <ion-button  (click)=\\\"storeToDatabase()\\\" type=\\\"submit\\\" size = \\\"small\\\" class = \\\"center\\\" color=\\\"primary\\\">Store to Database</ion-button>\\n    \\n    \\n\\n    <ion-list>\\n      <ion-item>\\n        <ion-label class = \\\"label\\\">Lunch CHO Sum</ion-label>\\n        <ion-input  class = \\\"right\\\" placeholder={{curChoLunch}} ></ion-input>\\n      </ion-item>\\n    </ion-list>\\n      <ion-list>\\n        <ion-item>\\n          <ion-label class = \\\"label\\\">Lunch Fat Sum</ion-label>\\n          <ion-input   class = \\\"right\\\" placeholder={{curFatLunch}}></ion-input>\\n        </ion-item>\\n        </ion-list>  \\n    <ion-list>\\n      <ion-item>\\n        <ion-label class = \\\"label\\\">Daily CHO Sum</ion-label>\\n        <ion-input  class = \\\"right\\\" placeholder={{curChoTotal}} ></ion-input>\\n      </ion-item>\\n      </ion-list>\\n      <ion-list>\\n        <ion-item>\\n          <ion-label class = \\\"label\\\">Daily Fat Sum</ion-label>\\n          <ion-input  class = \\\"right\\\" placeholder={{curFatTotal}} ></ion-input>\\n        </ion-item>\\n        </ion-list>\\n      </div>\\n    \\n  \\n    \\n    \\n      <!-- section of lunch end -->\\n    \\n\\n\\n <!-- section of dinner start -->\\n <div [hidden]=\\\"type !='eveningmeal'\\\">\\n\\n\\n  <!-- <app-card> </app-card> -->\\n  \\n  \\n    <ion-list>\\n\\n      <ion-card *ngFor=\\\"let att of anArrayDinner; let i=index\\\" >  \\n        <ion-item-sliding >\\n          <ion-item-options  side=\\\"end\\\">\\n          <ion-button color = \\\"danger\\\" (click)=\\\"removeItemDinner(i)\\\"><ion-icon name=\\\"trash\\\"></ion-icon> Delete</ion-button>\\n        </ion-item-options>\\n    \\n          <ion-item  lines=\\\"none\\\">\\n          <ion-label class=\\\"label\\\"> Food Name</ion-label>\\n          <ion-input  formControlName = \\\"food_name\\\" type=\\\"text\\\" required class = \\\"right\\\" placeholder={{att.food_name}} ></ion-input> \\n  \\n        </ion-item>\\n      \\n        <ion-item lines=\\\"none\\\">\\n          <ion-label class=\\\"label\\\">Unit</ion-label>\\n          <ion-input  formControlName = \\\"unit\\\" type=\\\"text\\\" required class = \\\"left1\\\" placeholder=\\\"{{att.unit}}\\\" ></ion-input>\\n          \\n          <ion-label class=\\\"unique\\\">Qty</ion-label>\\n          <ion-input  formControlName = \\\"qty\\\"  type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\"{{att.qty}}\\\"></ion-input>\\n         \\n        </ion-item>\\n        <ion-item lines=\\\"none\\\" >\\n          \\n          <ion-label class=\\\"label\\\">CHO</ion-label>\\n          <ion-input formControlName = \\\"cho\\\"  type=\\\"text\\\" required class = \\\"left2\\\" placeholder=\\\"{{att.cho}}\\\"></ion-input>\\n          <ion-label class=\\\"label\\\">Fat</ion-label>\\n          <ion-input formControlName = \\\"fat\\\" type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\"{{att.fat}}\\\"></ion-input>\\n        </ion-item>\\n      </ion-item-sliding>\\n    \\n      </ion-card>\\n  \\n  </ion-list>\\n  \\n    \\n  <ion-list>\\n    <form [formGroup]=\\\"foodCardForm\\\" (ngSubmit)=\\\"onSaveDinner()\\\">\\n      <ion-card >  \\n        <ion-item-sliding >\\n          <ion-item-options  side=\\\"end\\\">\\n        </ion-item-options>\\n          <ion-item  lines=\\\"none\\\">\\n          <ion-label class=\\\"label\\\"> Food Name</ion-label>\\n     \\n          <ion-input  formControlName = \\\"food_name\\\" type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\" Enter\\\" ></ion-input>\\n        </ion-item>\\n        <ion-item lines=\\\"none\\\">\\n          <ion-label class=\\\"label\\\">Unit</ion-label>\\n          <ion-input  formControlName = \\\"unit\\\" type=\\\"text\\\" required class = \\\"left1\\\" placeholder=\\\"Enter\\\" ></ion-input>\\n    \\n          <ion-label class=\\\"unique\\\">Qty</ion-label>\\n          <ion-input  formControlName = \\\"qty\\\"  type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\"Enter\\\" ></ion-input>\\n        </ion-item>\\n    \\n    \\n        <ion-item lines=\\\"none\\\" >\\n          \\n          <ion-label class=\\\"label\\\">CHO</ion-label>\\n          <ion-input formControlName = \\\"cho\\\"  type=\\\"text\\\" required class = \\\"left2\\\" placeholder=\\\"Enter\\\"></ion-input>\\n          <ion-label class=\\\"label\\\">Fat</ion-label>\\n          <ion-input formControlName = \\\"fat\\\" type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\"Enter\\\"></ion-input>\\n        </ion-item>\\n    \\n      </ion-item-sliding>\\n    \\n      </ion-card>\\n    \\n    \\n  </form >\\n  \\n  </ion-list>\\n  \\n  \\n  <ion-button  (click)=\\\"AddDinner()\\\" size = \\\"small\\\" class = \\\"center\\\" color=\\\"primary\\\">Add Food</ion-button>\\n  <ion-button  (click)=\\\"storeToDatabase()\\\" size = \\\"small\\\" class = \\\"center\\\" color=\\\"primary\\\">Store to Database</ion-button>\\n  \\n  \\n  <ion-list>\\n    <ion-item>\\n      <ion-label class = \\\"label\\\">Dinner CHO Sum</ion-label>\\n      <ion-input  class = \\\"right\\\" placeholder={{curChoDinner}} ></ion-input>\\n    </ion-item>\\n  </ion-list>\\n    <ion-list>\\n      <ion-item>\\n        <ion-label class = \\\"label\\\">Dinner Fat Sum</ion-label>\\n        <ion-input   class = \\\"right\\\" placeholder={{curFatDinner}}></ion-input>\\n      </ion-item>\\n      </ion-list>  \\n  <ion-list>\\n    <ion-item>\\n      <ion-label class = \\\"label\\\">Daily CHO Sum</ion-label>\\n      <ion-input  class = \\\"right\\\" placeholder={{curChoTotal}} ></ion-input>\\n    </ion-item>\\n    </ion-list>\\n    <ion-list>\\n      <ion-item>\\n        <ion-label class = \\\"label\\\">Daily Fat Sum</ion-label>\\n        <ion-input  class = \\\"right\\\" placeholder={{curFatTotal}} ></ion-input>\\n      </ion-item>\\n      </ion-list>\\n    </div>\\n  \\n  \\n    <!-- <ion-card>\\n      <ion-item lines=\\\"inset\\\" *ngFor=\\\"let data of Data\\\">\\n        <ion-label>\\n          <h5 >Date:{{myDate}}</h5>\\n          <h5>CHO:{{data.cho}}</h5>\\n          <h5>Fat:{{data.fat}}</h5>\\n        </ion-label>\\n        <div class=\\\"item-note\\\" item-end>     \\n          <ion-icon name=\\\"trash\\\" style=\\\"zoom:2.0\\\" (click)=\\\"deleteFood(data.id)\\\"></ion-icon>\\n        </div>\\n      </ion-item>\\n    </ion-card>   -->\\n  \\n  \\n    <!-- section of dinner end -->\\n  \\n  \\n\\n    \\n  <!-- section of Snack1 start -->\\n  <div [hidden]=\\\"type !='snack1'\\\">\\n\\n\\n    <!-- <app-card> </app-card> -->\\n    \\n    \\n      <ion-list>\\n       \\n        <ion-card *ngFor=\\\"let att of anArraySnack1; let i=index\\\" >  \\n          <ion-item-sliding >\\n            <ion-item-options  side=\\\"end\\\">\\n            <ion-button color = \\\"danger\\\" (click)=\\\"removeItemSnack1(i)\\\"><ion-icon name=\\\"trash\\\"></ion-icon> Delete</ion-button>\\n          </ion-item-options>\\n            \\n            <ion-item  lines=\\\"none\\\">\\n            <ion-label class=\\\"label\\\"> Food Name</ion-label>\\n            <ion-input  formControlName = \\\"food_name\\\" type=\\\"text\\\" required class = \\\"right\\\" placeholder={{att.food_name}} ></ion-input> \\n    \\n          </ion-item>\\n        \\n          <ion-item lines=\\\"none\\\">\\n            <ion-label class=\\\"label\\\">Unit</ion-label>\\n            <ion-input  formControlName = \\\"unit\\\" type=\\\"text\\\" required class = \\\"left1\\\" placeholder=\\\"{{att.unit}}\\\" ></ion-input>\\n            \\n            <ion-label class=\\\"unique\\\">Qty</ion-label>\\n            <ion-input  formControlName = \\\"qty\\\"  type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\"{{att.qty}}\\\"></ion-input>\\n           \\n          </ion-item>\\n          <ion-item lines=\\\"none\\\" >\\n            \\n            <ion-label class=\\\"label\\\">CHO</ion-label>\\n            <ion-input formControlName = \\\"cho\\\"  type=\\\"text\\\" required class = \\\"left2\\\" placeholder=\\\"{{att.cho}}\\\"></ion-input>\\n            <ion-label class=\\\"label\\\">Fat</ion-label>\\n            <ion-input formControlName = \\\"fat\\\" type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\"{{att.fat}}\\\"></ion-input>\\n          </ion-item>\\n        </ion-item-sliding>\\n      \\n        </ion-card>\\n   \\n    </ion-list>\\n    \\n      \\n    <ion-list>\\n      <form [formGroup]=\\\"foodCardForm\\\" (ngSubmit)=\\\"onSaveSnack1()\\\">\\n        <ion-card >  \\n          <ion-item-sliding >\\n            <ion-item-options  side=\\\"end\\\">\\n          </ion-item-options>\\n            <ion-item  lines=\\\"none\\\">\\n            <ion-label class=\\\"label\\\"> Food Name</ion-label>\\n       \\n            <ion-input  formControlName = \\\"food_name\\\" type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\" Enter\\\" ></ion-input>\\n          </ion-item>\\n          <ion-item lines=\\\"none\\\">\\n            <ion-label class=\\\"label\\\">Unit</ion-label>\\n            <ion-input  formControlName = \\\"unit\\\" type=\\\"text\\\" required class = \\\"left1\\\" placeholder=\\\"Enter\\\" ></ion-input>\\n      \\n            <ion-label class=\\\"unique\\\">Qty</ion-label>\\n            <ion-input  formControlName = \\\"qty\\\"  type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\"Enter\\\" ></ion-input>\\n          </ion-item>\\n      \\n      \\n          <ion-item lines=\\\"none\\\" >\\n            \\n            <ion-label class=\\\"label\\\">CHO</ion-label>\\n            <ion-input formControlName = \\\"cho\\\"  type=\\\"text\\\" required class = \\\"left2\\\" placeholder=\\\"Enter\\\"></ion-input>\\n            <ion-label class=\\\"label\\\">Fat</ion-label>\\n            <ion-input formControlName = \\\"fat\\\" type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\"Enter\\\"></ion-input>\\n          </ion-item>\\n      \\n        </ion-item-sliding>\\n      \\n        </ion-card>\\n      \\n      \\n    </form >\\n    \\n    </ion-list>\\n    \\n    \\n    <ion-button  (click)=\\\"AddSnack1()\\\" size = \\\"small\\\" class = \\\"center\\\" color=\\\"primary\\\">Add Food </ion-button>\\n    <ion-button  (click)=\\\"storeToDatabase()\\\" size = \\\"small\\\" class = \\\"center\\\" color=\\\"primary\\\">Store to Database</ion-button>\\n    \\n    \\n    <ion-list>\\n      <ion-item>\\n        <ion-label class = \\\"label\\\">Snack 1 CHO Sum</ion-label>\\n        <ion-input  class = \\\"right\\\" placeholder={{curChoSnack1}} ></ion-input>\\n      </ion-item>\\n    </ion-list>\\n      <ion-list>\\n        <ion-item>\\n          <ion-label class = \\\"label\\\">Snack 1 Fat Sum</ion-label>\\n          <ion-input   class = \\\"right\\\" placeholder={{curFatSnack1}}></ion-input>\\n        </ion-item>\\n        </ion-list>  \\n    <ion-list>\\n      <ion-item>\\n        <ion-label class = \\\"label\\\">Daily CHO Sum</ion-label>\\n        <ion-input  class = \\\"right\\\" placeholder={{curChoTotal}} ></ion-input>\\n      </ion-item>\\n      </ion-list>\\n      <ion-list>\\n        <ion-item>\\n          <ion-label class = \\\"label\\\">Daily Fat Sum</ion-label>\\n          <ion-input  class = \\\"right\\\" placeholder={{curFatTotal}} ></ion-input>\\n        </ion-item>\\n        </ion-list>\\n      </div>\\n\\n\\n\\n\\n <!-- section of Snack2 start -->\\n <div [hidden]=\\\"type !='snack2'\\\">\\n\\n\\n  <!-- <app-card> </app-card> -->\\n  \\n  \\n    <ion-list>\\n      \\n      <ion-card *ngFor=\\\"let att of anArraySnack2; let i=index\\\" >  \\n        <ion-item-sliding >\\n          <ion-item-options  side=\\\"end\\\">\\n          <ion-button color = \\\"danger\\\" (click)=\\\"removeItemSnack2(i)\\\"><ion-icon name=\\\"trash\\\"></ion-icon> Delete</ion-button>\\n        </ion-item-options>\\n          <!-- <ion-button class = \\\"savebutton\\\" type=\\\"submit\\\" color=\\\"tertiary\\\"  shape=\\\"block\\\" expand=\\\"block\\\">Save</ion-button> -->\\n          <ion-item  lines=\\\"none\\\">\\n          <ion-label class=\\\"label\\\"> Food Name</ion-label>\\n          <ion-input  formControlName = \\\"food_name\\\" type=\\\"text\\\" required class = \\\"right\\\" placeholder={{att.food_name}} ></ion-input> \\n  \\n        </ion-item>\\n      \\n        <ion-item lines=\\\"none\\\">\\n          <ion-label class=\\\"label\\\">Unit</ion-label>\\n          <ion-input  formControlName = \\\"unit\\\" type=\\\"text\\\" required class = \\\"left1\\\" placeholder=\\\"{{att.unit}}\\\" ></ion-input>\\n          \\n          <ion-label class=\\\"unique\\\">Qty</ion-label>\\n          <ion-input  formControlName = \\\"qty\\\"  type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\"{{att.qty}}\\\"></ion-input>\\n         \\n        </ion-item>\\n        <ion-item lines=\\\"none\\\" >\\n          \\n          <ion-label class=\\\"label\\\">CHO</ion-label>\\n          <ion-input formControlName = \\\"cho\\\"  type=\\\"text\\\" required class = \\\"left2\\\" placeholder=\\\"{{att.cho}}\\\"></ion-input>\\n          <ion-label class=\\\"label\\\">Fat</ion-label>\\n          <ion-input formControlName = \\\"fat\\\" type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\"{{att.fat}}\\\"></ion-input>\\n        </ion-item>\\n      </ion-item-sliding>\\n    \\n      </ion-card>\\n \\n  </ion-list>\\n  \\n    \\n  <ion-list>\\n    <form [formGroup]=\\\"foodCardForm\\\" (ngSubmit)=\\\"onSaveSnack2()\\\">\\n      <ion-card >  \\n        <ion-item-sliding >\\n          <ion-item-options  side=\\\"end\\\">\\n        </ion-item-options>\\n          <ion-item  lines=\\\"none\\\">\\n          <ion-label class=\\\"label\\\"> Food Name</ion-label>\\n     \\n          <ion-input  formControlName = \\\"food_name\\\" type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\" Enter\\\" ></ion-input>\\n        </ion-item>\\n        <ion-item lines=\\\"none\\\">\\n          <ion-label class=\\\"label\\\">Unit</ion-label>\\n          <ion-input  formControlName = \\\"unit\\\" type=\\\"text\\\" required class = \\\"left1\\\" placeholder=\\\"Enter\\\" ></ion-input>\\n    \\n          <ion-label class=\\\"unique\\\">Qty</ion-label>\\n          <ion-input  formControlName = \\\"qty\\\"  type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\"Enter\\\" ></ion-input>\\n        </ion-item>\\n    \\n    \\n        <ion-item lines=\\\"none\\\" >\\n          \\n          <ion-label class=\\\"label\\\">CHO</ion-label>\\n          <ion-input formControlName = \\\"cho\\\"  type=\\\"text\\\" required class = \\\"left2\\\" placeholder=\\\"Enter\\\"></ion-input>\\n          <ion-label class=\\\"label\\\">Fat</ion-label>\\n          <ion-input formControlName = \\\"fat\\\" type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\"Enter\\\"></ion-input>\\n        </ion-item>\\n    \\n      </ion-item-sliding>\\n    \\n      </ion-card>\\n      \\n    \\n    \\n  </form >\\n  \\n  </ion-list>\\n  \\n  \\n  <ion-button  (click)=\\\"AddSnack2()\\\" size = \\\"small\\\" class = \\\"center\\\" color=\\\"primary\\\">Add Food </ion-button>\\n  <ion-button  (click)=\\\"storeToDatabase()\\\" size = \\\"small\\\" class = \\\"center\\\" color=\\\"primary\\\">Store to Database</ion-button>\\n  \\n  \\n  <ion-list>\\n    <ion-item>\\n      <ion-label class = \\\"label\\\">Snack 2 CHO Sum</ion-label>\\n      <ion-input  class = \\\"right\\\" placeholder={{curChoSnack2}} ></ion-input>\\n    </ion-item>\\n  </ion-list>\\n    <ion-list>\\n      <ion-item>\\n        <ion-label class = \\\"label\\\">Snack 2 Fat Sum</ion-label>\\n        <ion-input   class = \\\"right\\\" placeholder={{curFatSnack2}}></ion-input>\\n      </ion-item>\\n      </ion-list>  \\n  <ion-list>\\n    <ion-item>\\n      <ion-label class = \\\"label\\\">Daily CHO Sum</ion-label>\\n      <ion-input  class = \\\"right\\\" placeholder={{curChoTotal}} ></ion-input>\\n    </ion-item>\\n    </ion-list>\\n    <ion-list>\\n      <ion-item>\\n        <ion-label class = \\\"label\\\">Daily Fat Sum</ion-label>\\n        <ion-input  class = \\\"right\\\" placeholder={{curFatTotal}} ></ion-input>\\n      </ion-item>\\n      </ion-list>\\n    </div>\\n\\n <!-- section of Snack3 start -->\\n <div [hidden]=\\\"type !='snack3'\\\">\\n\\n\\n  <!-- <app-card> </app-card> -->\\n  \\n  \\n    <ion-list>\\n     \\n      <ion-card *ngFor=\\\"let att of anArraySnack3; let i=index\\\" >  \\n        <ion-item-sliding >\\n          <ion-item-options  side=\\\"end\\\">\\n          <ion-button color = \\\"danger\\\" (click)=\\\"removeItemSnack3(i)\\\"><ion-icon name=\\\"trash\\\"></ion-icon> Delete</ion-button>\\n        </ion-item-options>\\n          <!-- <ion-button class = \\\"savebutton\\\" type=\\\"submit\\\" color=\\\"tertiary\\\"  shape=\\\"block\\\" expand=\\\"block\\\">Save</ion-button> -->\\n          <ion-item  lines=\\\"none\\\">\\n          <ion-label class=\\\"label\\\"> Food Name</ion-label>\\n          <ion-input  formControlName = \\\"food_name\\\" type=\\\"text\\\" required class = \\\"right\\\" placeholder={{att.food_name}} ></ion-input> \\n  \\n        </ion-item>\\n      \\n        <ion-item lines=\\\"none\\\">\\n          <ion-label class=\\\"label\\\">Unit</ion-label>\\n          <ion-input  formControlName = \\\"unit\\\" type=\\\"text\\\" required class = \\\"left1\\\" placeholder=\\\"{{att.unit}}\\\" ></ion-input>\\n          \\n          <ion-label class=\\\"unique\\\">Qty</ion-label>\\n          <ion-input  formControlName = \\\"qty\\\"  type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\"{{att.qty}}\\\"></ion-input>\\n         \\n        </ion-item>\\n        <ion-item lines=\\\"none\\\" >\\n          \\n          <ion-label class=\\\"label\\\">CHO</ion-label>\\n          <ion-input formControlName = \\\"cho\\\"  type=\\\"text\\\" required class = \\\"left2\\\" placeholder=\\\"{{att.cho}}\\\"></ion-input>\\n          <ion-label class=\\\"label\\\">Fat</ion-label>\\n          <ion-input formControlName = \\\"fat\\\" type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\"{{att.fat}}\\\"></ion-input>\\n        </ion-item>\\n      </ion-item-sliding>\\n    \\n      </ion-card>\\n\\n  </ion-list>\\n  \\n    \\n  <ion-list>\\n    <form [formGroup]=\\\"foodCardForm\\\" (ngSubmit)=\\\"onSaveSnack3()\\\">\\n      <ion-card >  \\n        <ion-item-sliding >\\n          <ion-item-options  side=\\\"end\\\">\\n        </ion-item-options>\\n          <ion-item  lines=\\\"none\\\">\\n          <ion-label class=\\\"label\\\"> Food Name</ion-label>\\n     \\n          <ion-input  formControlName = \\\"food_name\\\" type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\" Enter\\\" ></ion-input>\\n        </ion-item>\\n        <ion-item lines=\\\"none\\\">\\n          <ion-label class=\\\"label\\\">Unit</ion-label>\\n          <ion-input  formControlName = \\\"unit\\\" type=\\\"text\\\" required class = \\\"left1\\\" placeholder=\\\"Enter\\\" ></ion-input>\\n    \\n          <ion-label class=\\\"unique\\\">Qty</ion-label>\\n          <ion-input  formControlName = \\\"qty\\\"  type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\"Enter\\\" ></ion-input>\\n        </ion-item>\\n    \\n    \\n        <ion-item lines=\\\"none\\\" >\\n          \\n          <ion-label class=\\\"label\\\">CHO</ion-label>\\n          <ion-input formControlName = \\\"cho\\\"  type=\\\"text\\\" required class = \\\"left2\\\" placeholder=\\\"Enter\\\"></ion-input>\\n          <ion-label class=\\\"label\\\">Fat</ion-label>\\n          <ion-input formControlName = \\\"fat\\\" type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\"Enter\\\"></ion-input>\\n        </ion-item>\\n    \\n      </ion-item-sliding>\\n    \\n      </ion-card>\\n      \\n    \\n    \\n  </form >\\n  \\n  </ion-list>\\n  \\n  \\n  <ion-button  (click)=\\\"AddSnack3()\\\" size = \\\"small\\\" class = \\\"center\\\" color=\\\"primary\\\">Add Food</ion-button>\\n  <ion-button  (click)=\\\"storeToDatabase()\\\" size = \\\"small\\\" class = \\\"center\\\" color=\\\"primary\\\">Store to Database</ion-button>\\n  \\n  \\n  <ion-list>\\n    <ion-item>\\n      <ion-label class = \\\"label\\\">Snack 3 CHO Sum</ion-label>\\n      <ion-input  class = \\\"right\\\" placeholder={{curChoSnack3}} ></ion-input>\\n    </ion-item>\\n  </ion-list>\\n    <ion-list>\\n      <ion-item>\\n        <ion-label class = \\\"label\\\">Snack 3 Fat Sum</ion-label>\\n        <ion-input   class = \\\"right\\\" placeholder={{curFatSnack3}}></ion-input>\\n      </ion-item>\\n      </ion-list>  \\n  <ion-list>\\n    <ion-item>\\n      <ion-label class = \\\"label\\\">Daily CHO Sum</ion-label>\\n      <ion-input  class = \\\"right\\\" placeholder={{curChoTotal}} ></ion-input>\\n    </ion-item>\\n    </ion-list>\\n    <ion-list>\\n      <ion-item>\\n        <ion-label class = \\\"label\\\">Daily Fat Sum</ion-label>\\n        <ion-input  class = \\\"right\\\" placeholder={{curFatTotal}} ></ion-input>\\n      </ion-item>\\n      </ion-list>\\n    </div>\\n\\n\\n     <!-- section of Others start -->\\n <div [hidden]=\\\"type !='others'\\\">\\n\\n\\n  <!-- <app-card> </app-card> -->\\n  \\n  \\n    <ion-list>\\n     \\n      <ion-card *ngFor=\\\"let att of anArrayOthers; let i=index\\\" >  \\n        <ion-item-sliding >\\n          <ion-item-options  side=\\\"end\\\">\\n          <ion-button color = \\\"danger\\\" (click)=\\\"removeItemOthers(i)\\\"><ion-icon name=\\\"trash\\\"></ion-icon> Delete</ion-button>\\n        </ion-item-options>\\n          <!-- <ion-button class = \\\"savebutton\\\" type=\\\"submit\\\" color=\\\"tertiary\\\"  shape=\\\"block\\\" expand=\\\"block\\\">Save</ion-button> -->\\n          <ion-item  lines=\\\"none\\\">\\n          <ion-label class=\\\"label\\\"> Food Name</ion-label>\\n          <ion-input  formControlName = \\\"food_name\\\" type=\\\"text\\\" required class = \\\"right\\\" placeholder={{att.food_name}} ></ion-input> \\n  \\n        </ion-item>\\n      \\n        <ion-item lines=\\\"none\\\">\\n          <ion-label class=\\\"label\\\">Unit</ion-label>\\n          <ion-input  formControlName = \\\"unit\\\" type=\\\"text\\\" required class = \\\"left1\\\" placeholder=\\\"{{att.unit}}\\\" ></ion-input>\\n          \\n          <ion-label class=\\\"unique\\\">Qty</ion-label>\\n          <ion-input  formControlName = \\\"qty\\\"  type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\"{{att.qty}}\\\"></ion-input>\\n         \\n        </ion-item>\\n        <ion-item lines=\\\"none\\\" >\\n          \\n          <ion-label class=\\\"label\\\">CHO</ion-label>\\n          <ion-input formControlName = \\\"cho\\\"  type=\\\"text\\\" required class = \\\"left2\\\" placeholder=\\\"{{att.cho}}\\\"></ion-input>\\n          <ion-label class=\\\"label\\\">Fat</ion-label>\\n          <ion-input formControlName = \\\"fat\\\" type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\"{{att.fat}}\\\"></ion-input>\\n        </ion-item>\\n      </ion-item-sliding>\\n    \\n      </ion-card>\\n\\n  </ion-list>\\n  \\n    \\n  <ion-list>\\n    <form [formGroup]=\\\"foodCardForm\\\" (ngSubmit)=\\\"onSaveOthers()\\\">\\n      <ion-card >  \\n        <ion-item-sliding >\\n          <ion-item-options  side=\\\"end\\\">\\n        </ion-item-options>\\n          <ion-item  lines=\\\"none\\\">\\n          <ion-label class=\\\"label\\\"> Food Name</ion-label>\\n     \\n          <ion-input  formControlName = \\\"food_name\\\" type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\" Enter\\\" ></ion-input>\\n        </ion-item>\\n        <ion-item lines=\\\"none\\\">\\n          <ion-label class=\\\"label\\\">Unit</ion-label>\\n          <ion-input  formControlName = \\\"unit\\\" type=\\\"text\\\" required class = \\\"left1\\\" placeholder=\\\"Enter\\\" ></ion-input>\\n    \\n          <ion-label class=\\\"unique\\\">Qty</ion-label>\\n          <ion-input  formControlName = \\\"qty\\\"  type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\"Enter\\\" ></ion-input>\\n        </ion-item>\\n    \\n    \\n        <ion-item lines=\\\"none\\\" >\\n          \\n          <ion-label class=\\\"label\\\">CHO</ion-label>\\n          <ion-input formControlName = \\\"cho\\\"  type=\\\"text\\\" required class = \\\"left2\\\" placeholder=\\\"Enter\\\"></ion-input>\\n          <ion-label class=\\\"label\\\">Fat</ion-label>\\n          <ion-input formControlName = \\\"fat\\\" type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\"Enter\\\"></ion-input>\\n        </ion-item>\\n    \\n      </ion-item-sliding>\\n    \\n      </ion-card>\\n      \\n    \\n    \\n  </form >\\n  \\n  </ion-list>\\n  \\n  \\n  <ion-button  (click)=\\\"AddOthers()\\\" size = \\\"small\\\" class = \\\"center\\\" color=\\\"primary\\\">Add Food</ion-button>\\n  <ion-button  (click)=\\\"storeToDatabase()\\\" size = \\\"small\\\" class = \\\"center\\\" color=\\\"primary\\\">Store to database</ion-button>\\n  \\n  \\n  <ion-list>\\n    <ion-item>\\n      <ion-label class = \\\"label\\\">Others CHO Sum</ion-label>\\n      <ion-input  class = \\\"right\\\" placeholder={{curChoOthers}} ></ion-input>\\n    </ion-item>\\n  </ion-list>\\n    <ion-list>\\n      <ion-item>\\n        <ion-label class = \\\"label\\\">Others Fat Sum</ion-label>\\n        <ion-input   class = \\\"right\\\" placeholder={{curFatOthers}}></ion-input>\\n      </ion-item>\\n      </ion-list>  \\n  <ion-list>\\n    <ion-item>\\n      <ion-label class = \\\"label\\\">Daily CHO Sum</ion-label>\\n      <ion-input  class = \\\"right\\\" placeholder={{curChoTotal}} ></ion-input>\\n    </ion-item>\\n    </ion-list>\\n    <ion-list>\\n      <ion-item>\\n        <ion-label class = \\\"label\\\">Daily Fat Sum</ion-label>\\n        <ion-input  class = \\\"right\\\" placeholder={{curFatTotal}} ></ion-input>\\n      </ion-item>\\n      </ion-list>\\n    </div>\\n\\n\\n  </ion-content>\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n    \\n    \\n      <!-- <ion-card>\\n        <ion-item lines=\\\"inset\\\" *ngFor=\\\"let data of Data\\\">\\n          <ion-label>\\n            <h5 >Date:{{myDate}}</h5>\\n            <h5>CHO:{{data.cho}}</h5>\\n            <h5>Fat:{{data.fat}}</h5>\\n          </ion-label>\\n          <div class=\\\"item-note\\\" item-end>     \\n            <ion-icon name=\\\"trash\\\" style=\\\"zoom:2.0\\\" (click)=\\\"deleteFood(data.id)\\\"></ion-icon>\\n          </div>\\n        </ion-item>\\n      </ion-card>   -->\\n    \\n    \\n      <!-- section of snack end -->\\n\\n   \\n\\n\\n\\n\\n\\n\\n\\n    \\n    \\n<!--       \\n\\n\\n        <ion-list>\\n          <form [formGroup]=\\\"mainForm\\\" (ngSubmit)=\\\"storeData()\\\">\\n          <ion-card *ngFor=\\\"let att of anArray; let i=index\\\" >  \\n            <ion-item-sliding >\\n              <ion-item-options  side=\\\"end\\\">\\n              <ion-button color = \\\"danger\\\" (click)=\\\"removeItem(i)\\\"><ion-icon name=\\\"trash\\\"></ion-icon> Delete</ion-button>\\n            </ion-item-options>\\n              <ion-button class = \\\"savebutton\\\" type=\\\"submit\\\" color=\\\"tertiary\\\"  shape=\\\"block\\\" expand=\\\"block\\\">Save</ion-button>\\n              <ion-item  lines=\\\"none\\\">\\n              <ion-label class=\\\"label\\\"> Food Name</ion-label>\\n              <ion-input  formControlName = \\\"food_name\\\" type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\"Enter\\\" ></ion-input>\\n            </ion-item>\\n          \\n            <ion-item lines=\\\"none\\\">\\n              <ion-label class=\\\"label\\\">Unit</ion-label>\\n              <ion-input  formControlName = \\\"unit\\\" type=\\\"text\\\" required class = \\\"left1\\\" placeholder=\\\"Enter\\\" ></ion-input>\\n              \\n              <ion-label class=\\\"unique\\\">Qty</ion-label>\\n              <ion-input  formControlName = \\\"qty\\\"  type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\"Enter\\\"></ion-input>\\n             \\n            </ion-item>\\n            <ion-item lines=\\\"none\\\" >\\n              \\n              <ion-label class=\\\"label\\\">CHO</ion-label>\\n              <ion-input formControlName = \\\"cho\\\"  type=\\\"text\\\" required class = \\\"left2\\\" placeholder=\\\"Enter\\\"></ion-input>\\n              <ion-label class=\\\"label\\\">Fat</ion-label>\\n              <ion-input formControlName = \\\"fat\\\" type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\"Enter\\\"></ion-input>\\n            </ion-item>\\n          </ion-item-sliding>\\n        \\n          </ion-card>\\n          \\n          \\n        </form >\\n        \\n        </ion-list>\\n        <ion-button  (click)=\\\"Add()\\\" size = \\\"small\\\" class = \\\"center\\\" color=\\\"primary\\\">Add Card </ion-button>\\n        \\n        <ion-list>\\n          <ion-item>\\n            <ion-label class = \\\"label\\\">Evening Meal CHO Sum</ion-label>\\n            <ion-input  class = \\\"right\\\" placeholder={{sum5}} ></ion-input>\\n          </ion-item>\\n          </ion-list>\\n\\n          <ion-list>\\n            <ion-item>\\n              <ion-label class = \\\"label\\\">Evening Meal Fat Sum</ion-label>\\n              <ion-input  class = \\\"right\\\" placeholder={{sum6}} ></ion-input>\\n            </ion-item>\\n            </ion-list>\\n\\n              \\n        <ion-list>\\n          <ion-item>\\n            <ion-label class = \\\"label\\\">Daily CHO Sum</ion-label>\\n            <ion-input  class = \\\"right\\\" placeholder=\\\"Enter\\\" ></ion-input>\\n          </ion-item>\\n          </ion-list>\\n\\n          <ion-list>\\n            <ion-item>\\n              <ion-label class = \\\"label\\\">Daily Fat Sum</ion-label>\\n              <ion-input  class = \\\"right\\\" placeholder=\\\"Enter\\\" ></ion-input>\\n            </ion-item>\\n            </ion-list>\\n            \\n    \\n        \\n          </div> -->\\n        \\n          <!-- <div [hidden]=\\\"type !='snack1'\\\">\\n\\n\\n            <ion-list>\\n              <form [formGroup]=\\\"mainForm\\\" (ngSubmit)=\\\"storeData()\\\">\\n              <ion-card *ngFor=\\\"let att of anArray; let i=index\\\" >  \\n                <ion-item-sliding >\\n                  <ion-item-options  side=\\\"end\\\">\\n                  <ion-button color = \\\"danger\\\" (click)=\\\"removeItem(i)\\\"><ion-icon name=\\\"trash\\\"></ion-icon> Delete</ion-button>\\n                </ion-item-options>\\n                  <ion-button class = \\\"savebutton\\\" type=\\\"submit\\\" color=\\\"tertiary\\\"  shape=\\\"block\\\" expand=\\\"block\\\">Save</ion-button>\\n                  <ion-item  lines=\\\"none\\\">\\n                  <ion-label class=\\\"label\\\"> Food Name</ion-label>\\n                  <ion-input  formControlName = \\\"food_name\\\" type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\"Enter\\\" ></ion-input>\\n                </ion-item>\\n              \\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label class=\\\"label\\\">Unit</ion-label>\\n                  <ion-input  formControlName = \\\"unit\\\" type=\\\"text\\\" required class = \\\"left1\\\" placeholder=\\\"Enter\\\" ></ion-input>\\n                  \\n                  <ion-label class=\\\"unique\\\">Qty</ion-label>\\n                  <ion-input  formControlName = \\\"qty\\\"  type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\"Enter\\\"></ion-input>\\n                 \\n                </ion-item>\\n                <ion-item lines=\\\"none\\\" >\\n                  \\n                  <ion-label class=\\\"label\\\">CHO</ion-label>\\n                  <ion-input formControlName = \\\"cho\\\"  type=\\\"text\\\" required class = \\\"left2\\\" placeholder=\\\"Enter\\\"></ion-input>\\n                  <ion-label class=\\\"label\\\">Fat</ion-label>\\n                  <ion-input formControlName = \\\"fat\\\" type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\"Enter\\\"></ion-input>\\n                </ion-item>\\n              </ion-item-sliding>\\n            \\n              </ion-card>\\n              \\n              \\n            </form >\\n            \\n            </ion-list>\\n            <ion-button  (click)=\\\"Add()\\\" size = \\\"small\\\" class = \\\"center\\\" color=\\\"primary\\\">Add Card </ion-button>\\n            \\n            <ion-list>\\n       \\n                <ion-item>\\n                  <ion-label class = \\\"label\\\">Snack 1 CHO Sum</ion-label>\\n                  <ion-input  class = \\\"right\\\" placeholder={{sum7}} ></ion-input>\\n                </ion-item>\\n                </ion-list>\\n      \\n         \\n    \\n              <ion-list>\\n                <ion-item>\\n                  <ion-label class = \\\"label\\\">Snack 1 Fat Sum</ion-label>\\n                  <ion-input  class = \\\"right\\\" placeholder={{sum8}} ></ion-input>\\n                </ion-item>\\n                </ion-list>\\n    \\n                  \\n            <ion-list>\\n              <ion-item>\\n                <ion-label class = \\\"label\\\">Daily CHO Sum</ion-label>\\n                <ion-input  class = \\\"right\\\" placeholder=\\\"Enter\\\" ></ion-input>\\n              </ion-item>\\n              </ion-list>\\n    \\n              <ion-list>\\n                <ion-item>\\n                  <ion-label class = \\\"label\\\">Daily Fat Sum</ion-label>\\n                  <ion-input  class = \\\"right\\\" placeholder=\\\"Enter\\\" ></ion-input>\\n                </ion-item>\\n              </ion-list>\\n              \\n              </div> -->\\n            \\n<!--             \\n              <div [hidden]=\\\"type !='snack2'\\\">\\n\\n\\n                <ion-list>\\n                  <form [formGroup]=\\\"mainForm\\\" (ngSubmit)=\\\"storeData()\\\">\\n                  <ion-card *ngFor=\\\"let att of anArray; let i=index\\\" >  \\n                    <ion-item-sliding >\\n                      <ion-item-options  side=\\\"end\\\">\\n                      <ion-button color = \\\"danger\\\" (click)=\\\"removeItem(i)\\\"><ion-icon name=\\\"trash\\\"></ion-icon> Delete</ion-button>\\n                    </ion-item-options>\\n                      <ion-button class = \\\"savebutton\\\" type=\\\"submit\\\" color=\\\"tertiary\\\"  shape=\\\"block\\\" expand=\\\"block\\\">Save</ion-button>\\n                      <ion-item  lines=\\\"none\\\">\\n                      <ion-label class=\\\"label\\\"> Food Name</ion-label>\\n                      <ion-input  formControlName = \\\"food_name\\\" type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\"Enter\\\" ></ion-input>\\n                    </ion-item>\\n                  \\n                    <ion-item lines=\\\"none\\\">\\n                      <ion-label class=\\\"label\\\">Unit</ion-label>\\n                      <ion-input  formControlName = \\\"unit\\\" type=\\\"text\\\" required class = \\\"left1\\\" placeholder=\\\"Enter\\\" ></ion-input>\\n                      \\n                      <ion-label class=\\\"unique\\\">Qty</ion-label>\\n                      <ion-input  formControlName = \\\"qty\\\"  type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\"Enter\\\"></ion-input>\\n                     \\n                    </ion-item>\\n                    <ion-item lines=\\\"none\\\" >\\n                      \\n                      <ion-label class=\\\"label\\\">CHO</ion-label>\\n                      <ion-input formControlName = \\\"cho\\\"  type=\\\"text\\\" required class = \\\"left2\\\" placeholder=\\\"Enter\\\"></ion-input>\\n                      <ion-label class=\\\"label\\\">Fat</ion-label>\\n                      <ion-input formControlName = \\\"fat\\\" type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\"Enter\\\"></ion-input>\\n                    </ion-item>\\n                  </ion-item-sliding>\\n                \\n                  </ion-card>\\n                  \\n                  \\n                </form >\\n                \\n                </ion-list>\\n                <ion-button  (click)=\\\"Add()\\\" size = \\\"small\\\" class = \\\"center\\\" color=\\\"primary\\\">Add Card </ion-button>\\n                \\n                <ion-list>\\n                  <ion-item>\\n                    <ion-label class = \\\"label\\\">Snack 2 CHO Sum</ion-label>\\n                    <ion-input  class = \\\"right\\\" placeholder={{sum9}} ></ion-input>\\n                  </ion-item>\\n                  </ion-list>\\n        \\n           \\n      \\n                <ion-list>\\n                  <ion-item>\\n                    <ion-label class = \\\"label\\\">Snack 2 Fat Sum</ion-label>\\n                    <ion-input  class = \\\"right\\\" placeholder={{sum10}} ></ion-input>\\n                  </ion-item>\\n                  </ion-list>\\n      \\n                    \\n              <ion-list>\\n                <ion-item>\\n                  <ion-label class = \\\"label\\\">Daily CHO Sum</ion-label>\\n                  <ion-input  class = \\\"right\\\" placeholder=\\\"Enter\\\" ></ion-input>\\n                </ion-item>\\n                </ion-list>\\n      \\n                <ion-list>\\n                  <ion-item>\\n                    <ion-label class = \\\"label\\\">Daily Fat Sum</ion-label>\\n                    <ion-input  class = \\\"right\\\" placeholder=\\\"Enter\\\" ></ion-input>\\n                  </ion-item>\\n                </ion-list>\\n        \\n                  </div> -->\\n                \\n                  <!-- <div [hidden]=\\\"type !='snack3'\\\">\\n\\n\\n                    <ion-list>\\n                      <form [formGroup]=\\\"mainForm\\\" (ngSubmit)=\\\"storeData()\\\">\\n                      <ion-card *ngFor=\\\"let att of anArray; let i=index\\\" >  \\n                        <ion-item-sliding >\\n                          <ion-item-options  side=\\\"end\\\">\\n                          <ion-button color = \\\"danger\\\" (click)=\\\"removeItem(i)\\\"><ion-icon name=\\\"trash\\\"></ion-icon> Delete</ion-button>\\n                        </ion-item-options>\\n                          <ion-button class = \\\"savebutton\\\" type=\\\"submit\\\" color=\\\"tertiary\\\"  shape=\\\"block\\\" expand=\\\"block\\\">Save</ion-button>\\n                          <ion-item  lines=\\\"none\\\">\\n                          <ion-label class=\\\"label\\\"> Food Name</ion-label>\\n                          <ion-input  formControlName = \\\"food_name\\\" type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\"Enter\\\" ></ion-input>\\n                        </ion-item>\\n                      \\n                        <ion-item lines=\\\"none\\\">\\n                          <ion-label class=\\\"label\\\">Unit</ion-label>\\n                          <ion-input  formControlName = \\\"unit\\\" type=\\\"text\\\" required class = \\\"left1\\\" placeholder=\\\"Enter\\\" ></ion-input>\\n                          \\n                          <ion-label class=\\\"unique\\\">Qty</ion-label>\\n                          <ion-input  formControlName = \\\"qty\\\"  type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\"Enter\\\"></ion-input>\\n                         \\n                        </ion-item>\\n                        <ion-item lines=\\\"none\\\" >\\n                          \\n                          <ion-label class=\\\"label\\\">CHO</ion-label>\\n                          <ion-input formControlName = \\\"cho\\\"  type=\\\"text\\\" required class = \\\"left2\\\" placeholder=\\\"Enter\\\"></ion-input>\\n                          <ion-label class=\\\"label\\\">Fat</ion-label>\\n                          <ion-input formControlName = \\\"fat\\\" type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\"Enter\\\"></ion-input>\\n                        </ion-item>\\n                      </ion-item-sliding>\\n                    \\n                      </ion-card>\\n                      \\n                      \\n                    </form >\\n                    \\n                    </ion-list>\\n                    <ion-button  (click)=\\\"Add()\\\" size = \\\"small\\\" class = \\\"center\\\" color=\\\"primary\\\">Add Card </ion-button>\\n                    \\n                    <ion-list>\\n                      <ion-item>\\n                        <ion-label class = \\\"label\\\">Snack 3 CHO Sum</ion-label>\\n                        <ion-input  class = \\\"right\\\" placeholder={{sum11}} ></ion-input>\\n                      </ion-item>\\n                      </ion-list>\\n            \\n               \\n          \\n                    <ion-list>\\n                      <ion-item>\\n                        <ion-label class = \\\"label\\\">Snack 3 Fat Sum</ion-label>\\n                        <ion-input  class = \\\"right\\\" placeholder={{sum12}} ></ion-input>\\n                      </ion-item>\\n                      </ion-list>\\n          \\n                        \\n                  <ion-list>\\n                    <ion-item>\\n                      <ion-label class = \\\"label\\\">Daily CHO Sum</ion-label>\\n                      <ion-input  class = \\\"right\\\" placeholder=\\\"Enter\\\" ></ion-input>\\n                    </ion-item>\\n                    </ion-list>\\n          \\n                    <ion-list>\\n                      <ion-item>\\n                        <ion-label class = \\\"label\\\">Daily Fat Sum</ion-label>\\n                        <ion-input  class = \\\"right\\\" placeholder=\\\"Enter\\\" ></ion-input>\\n                      </ion-item>\\n                    </ion-list>\\n              \\n            \\n                    \\n                      </div> -->\\n                    \\n\\n                      <!-- <div [hidden]=\\\"type !='others'\\\">\\n\\n\\n                        <ion-list>\\n                          <form [formGroup]=\\\"mainForm\\\" (ngSubmit)=\\\"storeData()\\\">\\n                          <ion-card *ngFor=\\\"let att of anArray; let i=index\\\" >  \\n                            <ion-item-sliding >\\n                              <ion-item-options  side=\\\"end\\\">\\n                              <ion-button color = \\\"danger\\\" (click)=\\\"removeItem(i)\\\"><ion-icon name=\\\"trash\\\"></ion-icon> Delete</ion-button>\\n                            </ion-item-options>\\n                              <ion-button class = \\\"savebutton\\\" type=\\\"submit\\\" color=\\\"tertiary\\\"  shape=\\\"block\\\" expand=\\\"block\\\">Save</ion-button>\\n                              <ion-item  lines=\\\"none\\\">\\n                              <ion-label class=\\\"label\\\"> Food Name</ion-label>\\n                              <ion-input  formControlName = \\\"food_name\\\" type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\"Enter\\\" ></ion-input>\\n                            </ion-item>\\n                          \\n                            <ion-item lines=\\\"none\\\">\\n                              <ion-label class=\\\"label\\\">Unit</ion-label>\\n                              <ion-input  formControlName = \\\"unit\\\" type=\\\"text\\\" required class = \\\"left1\\\" placeholder=\\\"Enter\\\" ></ion-input>\\n                              \\n                              <ion-label class=\\\"unique\\\">Qty</ion-label>\\n                              <ion-input  formControlName = \\\"qty\\\"  type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\"Enter\\\"></ion-input>\\n                             \\n                            </ion-item>\\n                            <ion-item lines=\\\"none\\\" >\\n                              \\n                              <ion-label class=\\\"label\\\">CHO</ion-label>\\n                              <ion-input formControlName = \\\"cho\\\"  type=\\\"text\\\" required class = \\\"left2\\\" placeholder=\\\"Enter\\\"></ion-input>\\n                              <ion-label class=\\\"label\\\">Fat</ion-label>\\n                              <ion-input formControlName = \\\"fat\\\" type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\"Enter\\\"></ion-input>\\n                            </ion-item>\\n                          </ion-item-sliding>\\n                        \\n                          </ion-card>\\n                          \\n                          \\n                        </form >\\n                        \\n                        </ion-list>\\n                        <ion-button  (click)=\\\"Add()\\\" size = \\\"small\\\" class = \\\"center\\\" color=\\\"primary\\\">Add Card </ion-button>\\n                        \\n                        <ion-list>\\n                          <ion-item>\\n                            <ion-label class = \\\"label\\\">Others CHO Sum</ion-label>\\n                            <ion-input  class = \\\"right\\\" placeholder={{sum13}} ></ion-input>\\n                          </ion-item>\\n                          </ion-list>\\n                \\n                   \\n              \\n                        <ion-list>\\n                          <ion-item>\\n                            <ion-label class = \\\"label\\\">Others Fat Sum</ion-label>\\n                            <ion-input  class = \\\"right\\\" placeholder={{sum14}} ></ion-input>\\n                          </ion-item>\\n                          </ion-list>\\n              \\n                            \\n                      <ion-list>\\n                        <ion-item>\\n                          <ion-label class = \\\"label\\\">Daily CHO Sum</ion-label>\\n                          <ion-input  class = \\\"right\\\" placeholder=\\\"Enter\\\" ></ion-input>\\n                        </ion-item>\\n                        </ion-list>\\n              \\n                        <ion-list>\\n                          <ion-item>\\n                            <ion-label class = \\\"label\\\">Daily Fat Sum</ion-label>\\n                            <ion-input  class = \\\"right\\\" placeholder=\\\"Enter\\\" ></ion-input>\\n                          </ion-item>\\n                        </ion-list>\\n                \\n                        \\n                          </div> -->\\n                        \\n                     \\n                    \\n\\n\\n\\n\\n\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomePage} from './home.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class HomePageRoutingModule {}\n","import { IonicModule } from '@ionic/angular';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { HomePage } from './home.page';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { ExploreContainerComponentModule } from '../explore-container/explore-container.module';\n\nimport { HomePageRoutingModule } from './home-routing.module';\nimport { FoodCardComponent } from '../foodcard/foodcard.component';\nimport { CardComponent } from '../card/card.component';\n\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    ExploreContainerComponentModule,\n    HomePageRoutingModule,\n    ReactiveFormsModule\n  ],\n  declarations: [HomePage,\n  FoodCardComponent,\n  CardComponent\n  ]\n})\nexport class HomePageModule {}\n","export default \"ion-segment-button {\\n  min-width: 115px;\\n}\\n\\n.label {\\n  font-weight: bold;\\n  position: relative;\\n}\\n\\n.unique {\\n  font-weight: bold;\\n  text-align: right;\\n  padding-left: 7px;\\n}\\n\\n.left1 {\\n  text-align: right;\\n  right: 17px;\\n}\\n\\n.left2 {\\n  text-align: right;\\n  right: 24px;\\n}\\n\\n.right {\\n  text-align: right;\\n}\\n\\n.center {\\n  margin-left: auto;\\n  margin-right: auto;\\n  width: 300px;\\n  margin-top: 27px;\\n  display: block !important;\\n}\\n\\n.add {\\n  margin-left: auto;\\n  margin-right: auto;\\n  margin-top: 10px;\\n  height: 30px;\\n  width: 200px;\\n}\\n\\n.time {\\n  margin-left: -15px;\\n  margin-right: auto;\\n  font-weight: bold;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvSG9tZS9ob21lLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGdCQUFnQjtBQUNwQjs7QUFFQTtFQUFPLGlCQUFnQjtFQUNyQixrQkFBa0I7QUFFcEI7O0FBR0E7RUFDRSxpQkFBZ0I7RUFDaEIsaUJBQWlCO0VBQ2pCLGlCQUFpQjtBQUFuQjs7QUFLQTtFQUNJLGlCQUFpQjtFQUNqQixXQUFXO0FBRmY7O0FBS0E7RUFDRSxpQkFBaUI7RUFDakIsV0FBVztBQUZiOztBQU1BO0VBQ0ksaUJBQWlCO0FBSHJCOztBQU9BO0VBQ0UsaUJBQWlCO0VBQ2pCLGtCQUFrQjtFQUNsQixZQUFZO0VBQ1osZ0JBQWdCO0VBQ2hCLHlCQUF5QjtBQUozQjs7QUFPQTtFQUNFLGlCQUFpQjtFQUNqQixrQkFBa0I7RUFDbEIsZ0JBQWdCO0VBQ2hCLFlBQVk7RUFDWixZQUFZO0FBSmQ7O0FBT0E7RUFDRSxrQkFBa0I7RUFDbEIsa0JBQWtCO0VBQ2xCLGlCQUdGO0FBUEEiLCJmaWxlIjoic3JjL2FwcC9Ib21lL2hvbWUucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLXNlZ21lbnQtYnV0dG9ue1xuICAgIG1pbi13aWR0aDogMTE1cHg7XG59XG5cbi5sYWJlbHtmb250LXdlaWdodDpib2xkO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgXG59XG5cbi51bmlxdWUge1xuICBmb250LXdlaWdodDpib2xkO1xuICB0ZXh0LWFsaWduOiByaWdodDtcbiAgcGFkZGluZy1sZWZ0OiA3cHg7XG5cbn1cblxuXG4ubGVmdDEge1xuICAgIHRleHQtYWxpZ246IHJpZ2h0O1xuICAgIHJpZ2h0OiAxN3B4O1xufVxuXG4ubGVmdDIge1xuICB0ZXh0LWFsaWduOiByaWdodDtcbiAgcmlnaHQ6IDI0cHg7XG59XG5cblxuLnJpZ2h0IHtcbiAgICB0ZXh0LWFsaWduOiByaWdodDtcbiAgICBcbn1cblxuLmNlbnRlcntcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gIG1hcmdpbi1yaWdodDogYXV0bztcbiAgd2lkdGg6IDMwMHB4O1xuICBtYXJnaW4tdG9wOiAyN3B4O1xuICBkaXNwbGF5OiBibG9jayAhaW1wb3J0YW50O1xufVxuXG4uYWRke1xuICBtYXJnaW4tbGVmdDogYXV0bztcbiAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xuICBtYXJnaW4tdG9wOiAxMHB4O1xuICBoZWlnaHQ6IDMwcHg7XG4gIHdpZHRoOiAyMDBweDtcbn1cblxuLnRpbWV7XG4gIG1hcmdpbi1sZWZ0OiAtMTVweDtcbiAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xuICBmb250LXdlaWdodDpib2xkXG4gIFxuXG59Il19 */\";","import { Component, Input, OnInit, ViewChild} from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { FormGroup, FormBuilder, FormControl } from \"@angular/forms\";\nimport { Dailyfoodservice } from './../services/dailyfood.service';\nimport { ToastController } from '@ionic/angular';\nimport { Router } from \"@angular/router\";\nimport { RecordService } from '../services/record.service';\nimport { DatabaseService } from '../services/database.service';\nimport { Record } from '../services/food';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: 'home.page.html',\n  styleUrls: ['home.page.scss']\n})\n\nexport class HomePage { \n\n\n  @ViewChild(\"choinput\") choinput;\n  mainForm: FormGroup;\n  Data: any[] = []\n  public curChoBreakfast=0;\n  public curFatBreakfast=0;\n  public curChoLunch=0;\n  public curFatLunch=0;\n  public curChoDinner=0;\n  public curFatDinner=0;\n  public curChoSnack1=0;\n  public curFatSnack1=0;\n  public curChoSnack2=0;\n  public curFatSnack2=0;\n  public curChoSnack3=0;\n  public curFatSnack3=0;\n  public curChoOthers=0;\n  public curFatOthers=0;\n  public curChoTotal=0;\n  public curFatTotal=0;\n\n\n  public anArrayBreakfast:any=[];\n  public anArrayLunch:any=[];\n  public anArrayDinner:any=[];\n  public anArraySnack1:any=[];\n  public anArraySnack2:any=[];\n  public anArraySnack3:any=[];\n  public anArrayOthers:any=[];\n\n   myDate = new Date().toISOString().split('T')[0];\n   type: string\n\n  jsonData:any=[];\n \n\n\n  foodCardForm = new FormGroup({\n  food_name: new FormControl(''),\n  category: new FormControl(''),\n  unit: new FormControl(''),\n  qty: new FormControl(''),\n  cho: new FormControl(''),\n  fat: new FormControl(''),\n});\n\n\n\n\npublic map:  Map<string, FormGroup> = new Map();\n  constructor(\n    \n    private dbservice: DatabaseService, \n    private http: HttpClient,\n    private db: Dailyfoodservice,\n    private dailyrecorddb: RecordService,\n    public formBuilder: FormBuilder,\n    private toast: ToastController,\n    private router: Router,    \n\n    )\n   { \n    //this.initializeJsonData();\n    this.type = 'breakfast';\n\n  }\n\n\n  initializeJsonData()\n  {\n     this.jsonData = [\n        {\n            name: \"apple\",\n            cho: \"1001\"\n        },\n        {\n          name: \"banana\",\n          cho: \"1003\"\n        },\n       {\n        name: \"waffle\",\n        cho: \"1002\"\n       },\n     ]\n  }\n\n  \n\n  filterJsonData(ev:any){\n    //filt out json food methed with user input.\n    this.initializeJsonData();\n    document.getElementById(\"choinput\").focus();\n    const val = ev.target.value;\n    if(val && val.trim() != ''){\n      this.jsonData = this.jsonData.filter((object) => {\n        return (object.name.toLowerCase().indexOf(val.toLowerCase())>-1);\n      })\n    }\n\n  }\n\n  selectVal(){\n   console.log(\"check\")\n  }\n\n  onclickJson(){\n    // after choosing one food, auto complete other field cho/fat.\n    // let cho = 9;\n    // let fat = 10;\n    // document.getElementById(\"choinput\").setAttribute('value', \"\" + cho);\n    // document.getElementById(\"fatinput\").innerText = \"\" + fat;\n  }\n\n\n\n\n\n  // segmentc change method\n  segmentChanged(ev: any) {}\n\n   // section for remove and delete \n\n   removeItemBreakfast(i){\n    for(let j = 0; j < this.anArrayBreakfast.length; j++) {\n\n      if(j == i){\n        let j_uuid = this.myDate + \"_Breakfast_\" + (String)(this.anArrayBreakfast[j].food_name).toLowerCase().replace(/\\-/g, \" \").replace( /\\s+/g, \"\") //remove spaces;\n        this.anArrayBreakfast.splice(j, 1);\n        this.dbdeleteFood(j_uuid);\n      }\n    }\n    this.analyzeChoAndFatBreakfast();\n    this.analyzeChoAndFatTotal()\n  }\n\n  removeItemLunch(i){\n   for(let j = 0; j < this.anArrayLunch.length; j++) {\n     if(j == i){\n      let j_uuid = this.myDate + \"_Lunch_\" + (String)(this.anArrayLunch[j].food_name).toLowerCase().replace(/\\-/g, \" \").replace( /\\s+/g, \"\") //remove spaces;\n      this.anArrayLunch.splice(j, 1);\n      this.dbdeleteFood(j_uuid);\n    \n     }\n   }\n   this.analyzeChoAndFatLunch();\n   this.analyzeChoAndFatTotal()\n }\n\n removeItemDinner(i){\n for(let j = 0; j < this.anArrayDinner.length; j++) {\n    if(j == i){\n    let j_uuid = this.myDate + \"_Dinner_\" + (String)(this.anArrayDinner[j].food_name).toLowerCase().replace(/\\-/g, \" \").replace( /\\s+/g, \"\") //remove spaces;\n    this.anArrayDinner.splice(j, 1);\n    this.dbdeleteFood(j_uuid);\n   }\n }\n this.analyzeChoAndFatDinner();\n this.analyzeChoAndFatTotal()\n}\n\nremoveItemSnack1(i){\n for(let j = 0; j < this.anArraySnack1.length; j++) {\n  if(j == i){\n    let j_uuid = this.myDate + \"_Snack1_\" + (String)(this.anArraySnack1[j].food_name).toLowerCase().replace(/\\-/g, \" \").replace( /\\s+/g, \"\") //remove spaces;\n    this.anArraySnack1.splice(j, 1);\n    this.dbdeleteFood(j_uuid);\n   }\n }\n this.analyzeChoAndFatSnack1();\n this.analyzeChoAndFatTotal()\n}\n\nremoveItemSnack2(i){\n for(let j = 0; j < this.anArraySnack2.length; j++) {\n  if(j == i){\n    let j_uuid = this.myDate + \"_Snack2_\" + (String)(this.anArraySnack2[j].food_name).toLowerCase().replace(/\\-/g, \" \").replace( /\\s+/g, \"\") //remove spaces;\n    this.anArraySnack2.splice(j, 1);\n    this.dbdeleteFood(j_uuid);\n   }\n   \n }\n this.analyzeChoAndFatSnack2();\n this.analyzeChoAndFatTotal()\n}\n\nremoveItemSnack3(i){\n for(let j = 0; j < this.anArraySnack3.length; j++) {\n  if(j == i){\n    let j_uuid = this.myDate + \"_Snack3_\" + (String)(this.anArraySnack3[j].food_name).toLowerCase().replace(/\\-/g, \" \").replace( /\\s+/g, \"\") //remove spaces;\n    this.anArraySnack3.splice(j, 1);\n    this.dbdeleteFood(j_uuid);\n   }\n }\n this.analyzeChoAndFatSnack3();\n this.analyzeChoAndFatTotal()\n}\n\nremoveItemOthers(i){\n for(let j = 0; j < this.anArrayOthers.length; j++) {\n  if(j == i){\n    let j_uuid = this.myDate + \"_Others_\" + (String)(this.anArrayOthers[j].food_name).toLowerCase().replace(/\\-/g, \" \").replace( /\\s+/g, \"\") //remove spaces;\n    this.anArrayOthers.splice(j, 1);\n    this.dbdeleteFood(j_uuid);\n   }\n }\n this.analyzeChoAndFatOthers();\n this.analyzeChoAndFatTotal()\n}\n\n\n  dbdeleteFood(uuid){\n    this.db.deleteFood(uuid).then(async(res) => {\n      let toast = await this.toast.create({\n        message: 'Food deleted',\n        duration: 2500\n      });\n      toast.present();      \n    })\n  }\n  \n\n\n\n   // section for saving and adding\n    onSaveBreakfast(){\n      this.analyzeChoAndFatBreakfast();\n      this.analyzeChoAndFatTotal()\n      this.map[this.foodCardForm.controls['food_name'].value] = this.foodCardForm.value;\n  \n    }\n\n   onSaveLunch(){\n   this.analyzeChoAndFatLunch();\n   this.analyzeChoAndFatTotal()\n   this.map[this.foodCardForm.controls['food_name'].value] = this.foodCardForm.value;\n\n  }\n   onSaveDinner(){\n   this.analyzeChoAndFatDinner();\n   this.analyzeChoAndFatTotal()\n   this.map[this.foodCardForm.controls['food_name'].value] = this.foodCardForm.value;\n\n  }\n\n     onSaveSnack1(){\n     this.analyzeChoAndFatSnack1();\n     this.analyzeChoAndFatTotal()\n     this.map[this.foodCardForm.controls['food_name'].value] = this.foodCardForm.value;\n\n    }\n\n\n    onSaveSnack2(){\n      this.analyzeChoAndFatSnack2();\n      this.analyzeChoAndFatTotal()\n      this.map[this.foodCardForm.controls['food_name'].value] = this.foodCardForm.value;\n\n     }\n\n  \n\n\n    onSaveSnack3(){\n      this.analyzeChoAndFatSnack3();\n      this.analyzeChoAndFatTotal()\n      this.map[this.foodCardForm.controls['food_name'].value] = this.foodCardForm.value;\n     }\n\n\n\n    onSaveOthers(){\n      this.analyzeChoAndFatOthers();\n      this.analyzeChoAndFatTotal()\n      this.map[this.foodCardForm.controls['food_name'].value] = this.foodCardForm.value;\n     }\n\n\n  AddBreakfast(){\n    let number = this.anArrayBreakfast.length + 1\n    let currentFood = {\n      food_name: this.foodCardForm.controls['food_name'].value,\n      category:this.foodCardForm.controls['category'].value,\n      unit: this.foodCardForm.controls['unit'].value,\n      qty: this.foodCardForm.controls['qty'].value,\n      cho: this.foodCardForm.controls['cho'].value,\n      fat: this.foodCardForm.controls['fat'].value,\n    }\n\n    this.anArrayBreakfast.push(currentFood);\n    this.analyzeChoAndFatBreakfast();\n    this.analyzeChoAndFatTotal()\n    this.ResetBreakfast();\n  }\n\n  AddLunch(){\n\n    let number = this.anArrayLunch.length + 1\n    let currentFood = {\n      food_name: this.foodCardForm.controls['food_name'].value,\n      category:this.foodCardForm.controls['category'].value,\n      unit: this.foodCardForm.controls['unit'].value,\n      qty: this.foodCardForm.controls['qty'].value,\n      cho: this.foodCardForm.controls['cho'].value,\n      fat: this.foodCardForm.controls['fat'].value,\n    }\n    this.anArrayLunch.push(currentFood);\n    this.analyzeChoAndFatLunch();\n    this.analyzeChoAndFatTotal()\n    this.ResetLunch();\n  }\n  \n  AddDinner(){\n    let number = this.anArrayDinner.length + 1\n    let currentFood = {\n      food_name: this.foodCardForm.controls['food_name'].value,\n      category:this.foodCardForm.controls['category'].value,\n      unit: this.foodCardForm.controls['unit'].value,\n      qty: this.foodCardForm.controls['qty'].value,\n      cho: this.foodCardForm.controls['cho'].value,\n      fat: this.foodCardForm.controls['fat'].value,\n    }\n    this.anArrayDinner.push(currentFood);\n    this.analyzeChoAndFatDinner();\n    this.analyzeChoAndFatTotal()\n    this.ResetDinner();\n  }\n\n  AddSnack1(){\n    let number = this.anArraySnack1.length + 1\n    let currentFood = {\n      food_name: this.foodCardForm.controls['food_name'].value,\n      category:this.foodCardForm.controls['category'].value,\n      unit: this.foodCardForm.controls['unit'].value,\n      qty: this.foodCardForm.controls['qty'].value,\n      cho: this.foodCardForm.controls['cho'].value,\n      fat: this.foodCardForm.controls['fat'].value,\n    }\n    this.anArraySnack1.push(currentFood);\n    this.analyzeChoAndFatSnack1();\n    this.analyzeChoAndFatTotal()\n    this.ResetSnack1();\n  }\n  \n\n  AddSnack2(){\n    let number = this.anArraySnack2.length + 1\n    let currentFood = {\n      food_name: this.foodCardForm.controls['food_name'].value,\n      category:this.foodCardForm.controls['category'].value,\n      unit: this.foodCardForm.controls['unit'].value,\n      qty: this.foodCardForm.controls['qty'].value,\n      cho: this.foodCardForm.controls['cho'].value,\n      fat: this.foodCardForm.controls['fat'].value,\n    }\n    this.anArraySnack2.push(currentFood);\n    this.analyzeChoAndFatSnack2();\n    this.analyzeChoAndFatTotal()\n    this.ResetSnack2();\n  }\n\n\n  AddSnack3(){\n    let number = this.anArraySnack3.length + 1\n    let currentFood = {\n      food_name: this.foodCardForm.controls['food_name'].value,\n      category:this.foodCardForm.controls['category'].value,\n      unit: this.foodCardForm.controls['unit'].value,\n      qty: this.foodCardForm.controls['qty'].value,\n      cho: this.foodCardForm.controls['cho'].value,\n      fat: this.foodCardForm.controls['fat'].value,\n    }\n    this.anArraySnack3.push(currentFood);\n    this.analyzeChoAndFatSnack3();\n    this.analyzeChoAndFatTotal()\n    this.ResetSnack3();\n  }\n\n  AddOthers(){\n    let number = this.anArrayOthers.length + 1\n    let currentFood = {\n      food_name: this.foodCardForm.controls['food_name'].value,\n      category:this.foodCardForm.controls['category'].value,\n      unit: this.foodCardForm.controls['unit'].value,\n      qty: this.foodCardForm.controls['qty'].value,\n      cho: this.foodCardForm.controls['cho'].value,\n      fat: this.foodCardForm.controls['fat'].value,\n    }\n    this.anArrayOthers.push(currentFood);\n    this.analyzeChoAndFatOthers();\n    this.analyzeChoAndFatTotal()\n    this.ResetOthers();\n  }\n\n   ResetBreakfast(){\n    this.foodCardForm = new FormGroup({\n      food_name: new FormControl(''),\n      category: new FormControl(''),\n      unit: new FormControl(''),\n      qty: new FormControl(''),\n      cho: new FormControl(''),\n      fat: new FormControl(''),\n    });\n    this.mainForm = this.formBuilder.group({\n      food_name: [''],\n      category:[''],\n      unit: [''],\n      qty: [''],\n      cho: [''],\n      fat: [''],\n    })\n   }\n\n\n   ResetLunch(){\n    this.foodCardForm = new FormGroup({\n      food_name: new FormControl(''),\n      category: new FormControl(''),\n      unit: new FormControl(''),\n      qty: new FormControl(''),\n      cho: new FormControl(''),\n      fat: new FormControl(''),\n    });\n    this.mainForm = this.formBuilder.group({\n      food_name: [''],\n      category:[''],\n      unit: [''],\n      qty: [''],\n      cho: [''],\n      fat: [''],\n    })\n   }\n\n   ResetDinner(){\n    this.foodCardForm = new FormGroup({\n      food_name: new FormControl(''),\n      category: new FormControl(''),\n      unit: new FormControl(''),\n      qty: new FormControl(''),\n      cho: new FormControl(''),\n      fat: new FormControl(''),\n    });\n    this.mainForm = this.formBuilder.group({\n      food_name: [''],\n      category:[''],\n      unit: [''],\n      qty: [''],\n      cho: [''],\n      fat: [''],\n    })\n   }\n\n\n   ResetSnack1(){\n    this.foodCardForm = new FormGroup({\n      food_name: new FormControl(''),\n      category: new FormControl(''),\n      unit: new FormControl(''),\n      qty: new FormControl(''),\n      cho: new FormControl(''),\n      fat: new FormControl(''),\n    });\n    this.mainForm = this.formBuilder.group({\n      food_name: [''],\n      category:[''],\n      unit: [''],\n      qty: [''],\n      cho: [''],\n      fat: [''],\n    })\n   }\n\n   ResetSnack2(){\n    this.foodCardForm = new FormGroup({\n      food_name: new FormControl(''),\n      category: new FormControl(''),\n      unit: new FormControl(''),\n      qty: new FormControl(''),\n      cho: new FormControl(''),\n      fat: new FormControl(''),\n    });\n    this.mainForm = this.formBuilder.group({\n      food_name: [''],\n      category:[''],\n      unit: [''],\n      qty: [''],\n      cho: [''],\n      fat: [''],\n    })\n   }\n\n   ResetSnack3(){\n    this.foodCardForm = new FormGroup({\n      food_name: new FormControl(''),\n      category: new FormControl(''),\n      unit: new FormControl(''),\n      qty: new FormControl(''),\n      cho: new FormControl(''),\n      fat: new FormControl(''),\n    });\n    this.mainForm = this.formBuilder.group({\n      food_name: [''],\n      category:[''],\n      unit: [''],\n      qty: [''],\n      cho: [''],\n      fat: [''],\n    })\n   }\n\n   ResetOthers(){\n    this.foodCardForm = new FormGroup({\n      food_name: new FormControl(''),\n      category: new FormControl(''),\n      unit: new FormControl(''),\n      qty: new FormControl(''),\n      cho: new FormControl(''),\n      fat: new FormControl(''),\n    });\n    this.mainForm = this.formBuilder.group({\n      food_name: [''],\n      category:[''],\n      unit: [''],\n      qty: [''],\n      cho: [''],\n      fat: [''],\n    })\n   }\n\n\n    storeToDatabase(){\n\n      for (var val of this.anArrayBreakfast) {\n        let uniqueKey = this.myDate + \"_Breakfast_\" + (String)(val.food_name).toLowerCase().replace(/\\-/g, \" \").replace( /\\s+/g, \"\") //remove spaces;\n        //this uniqueKey is generated with date, category and food type(all remove space and camelcase), which will be unique in sql as key.\n        this.db.addFood(\n          uniqueKey,\n          this.myDate,\n           \"BreakFast\",\n           val.food_name,\n           val.unit,\n           val.qty,\n           val.cho,\n           val.fat\n        ).then((res) => {\n    \n        })\n      }\n\n      for (var val of this.anArrayLunch) {\n        let uniqueKey = this.myDate + \"_Lunch_\" + (String)(val.food_name).toLowerCase().replace(/\\-/g, \" \").replace( /\\s+/g, \"\") //remove spaces;\n        //this uniqueKey is generated with date, category and food type(all remove space and camelcase), which will be unique in sql as key.\n        this.db.addFood(\n          uniqueKey,\n          this.myDate,\n           \"Lunch\",\n           val.food_name,\n           val.unit,\n           val.qty,\n           val.cho,\n           val.fat\n        ).then((res) => {\n    \n        })\n      }\n\n      for (var val of this.anArrayDinner) {\n        let uniqueKey = this.myDate + \"_Dinner_\" + (String)(val.food_name).toLowerCase().replace(/\\-/g, \" \").replace( /\\s+/g, \"\") //remove spaces;\n        //this uniqueKey is generated with date, category and food type(all remove space and camelcase), which will be unique in sql as key.\n        this.db.addFood(\n          uniqueKey,\n          this.myDate,\n           \"Dinner\",\n           val.food_name,\n           val.unit,\n           val.qty,\n           val.cho,\n           val.fat\n        ).then((res) => {\n    \n        })\n      }\n\n      for (var val of this.anArraySnack1) {\n        let uniqueKey = this.myDate + \"_Snack1_\" + (String)(val.food_name).toLowerCase().replace(/\\-/g, \" \").replace( /\\s+/g, \"\") //remove spaces;\n        //this uniqueKey is generated with date, category and food type(all remove space and camelcase), which will be unique in sql as key.\n        this.db.addFood(\n          uniqueKey,\n          this.myDate,\n           \"Snack1\",\n           val.food_name,\n           val.unit,\n           val.qty,\n           val.cho,\n           val.fat\n        ).then((res) => {\n    \n        })\n      }\n\n\n      for (var val of this.anArraySnack2) {\n        let uniqueKey = this.myDate + \"_Snack2_\" + (String)(val.food_name).toLowerCase().replace(/\\-/g, \" \").replace( /\\s+/g, \"\") //remove spaces;\n        //this uniqueKey is generated with date, category and food type(all remove space and camelcase), which will be unique in sql as key.\n        this.db.addFood(\n          uniqueKey,\n          this.myDate,\n           \"Snack2\",\n           val.food_name,\n           val.unit,\n           val.qty,\n           val.cho,\n           val.fat\n        ).then((res) => {\n    \n        })\n      }\n\n\n      for (var val of this.anArraySnack3) {\n        let uniqueKey = this.myDate + \"_Snack3_\" + (String)(val.food_name).toLowerCase().replace(/\\-/g, \" \").replace( /\\s+/g, \"\") //remove spaces;\n        //this uniqueKey is generated with date, category and food type(all remove space and camelcase), which will be unique in sql as key.\n        this.db.addFood(\n          uniqueKey,\n          this.myDate,\n           \"Snack3\",\n           val.food_name,\n           val.unit,\n           val.qty,\n           val.cho,\n           val.fat\n        ).then((res) => {\n    \n        })\n      }\n\n      for (var val of this.anArrayOthers) {\n        let uniqueKey = this.myDate + \"_Others_\" + (String)(val.food_name).toLowerCase().replace(/\\-/g, \" \").replace( /\\s+/g, \"\") //remove spaces;\n        //this uniqueKey is generated with date, category and food type(all remove space and camelcase), which will be unique in sql as key.\n        this.db.addFood(\n          uniqueKey,\n          this.myDate,\n           \"Others\",\n           val.food_name,\n           val.unit,\n           val.qty,\n           val.cho,\n           val.fat\n        ).then((res) => {\n    \n        })\n      }\n\n\n     this.dailyrecorddb.addRecord( this.myDate ,this.curChoTotal,this.curFatTotal);\n\n \n        this.dailyrecorddb.fetchRecords().subscribe(item => {\n          this.Data = item\n          for (let i =0; i <= item.length; i++) \n          {console.log('james itemp2：' + item[i].id);}\n          \n        });\n    \n  }\n    \n\n    \n\n    // analyzing part:\n    analyzeChoAndFatBreakfast(){\n      this.curChoBreakfast = 0;\n      this.curFatBreakfast = 0;\n        this.anArrayBreakfast.forEach(element => {\n          this.curChoBreakfast = this.curChoBreakfast + Number(element.cho);\n          this.curFatBreakfast = this.curFatBreakfast + Number(element.fat);\n        });\n        }\n\n        analyzeChoAndFatLunch(){\n          this.curChoLunch = 0;\n          this.curFatLunch = 0;\n            this.anArrayLunch.forEach(element => {\n              this.curChoLunch = this.curChoLunch + Number(element.cho);\n              this.curFatLunch = this.curFatLunch + Number(element.fat);\n            });\n            }\n\n        analyzeChoAndFatDinner(){\n      this.curChoDinner = 0;\n      this.curFatDinner = 0;\n        this.anArrayDinner.forEach(element => {\n          this.curChoDinner = this.curChoDinner + Number(element.cho);\n          this.curFatDinner = this.curFatDinner + Number(element.fat);\n        });\n        }\n\n        analyzeChoAndFatSnack1(){\n      this.curChoSnack1 = 0;\n      this.curFatSnack1 = 0;\n        this.anArraySnack1.forEach(element => {\n          this.curChoSnack1 = this.curChoSnack1 + Number(element.cho);\n          this.curFatSnack1 = this.curFatSnack1 + Number(element.fat);\n        });\n        }\n\n      \n        analyzeChoAndFatSnack2(){\n          this.curChoSnack2 = 0;\n          this.curFatSnack2 = 0;\n            this.anArraySnack2.forEach(element => {\n              this.curChoSnack2 = this.curChoSnack2 + Number(element.cho);\n              this.curFatSnack2 = this.curFatSnack2 + Number(element.fat);\n            });\n            }\n\n        analyzeChoAndFatSnack3(){\n          this.curChoSnack3 = 0;\n          this.curFatSnack3 = 0;\n            this.anArraySnack3.forEach(element => {\n              this.curChoSnack3 = this.curChoSnack3 + Number(element.cho);\n              this.curFatSnack3 = this.curFatSnack3 + Number(element.fat);\n            });\n            }\n    \n        analyzeChoAndFatOthers(){\n          this.curChoOthers = 0;\n          this.curFatOthers = 0;\n            this.anArrayOthers.forEach(element => {\n              this.curChoOthers = this.curChoOthers + Number(element.cho);\n              this.curFatOthers = this.curFatOthers + Number(element.fat);\n            });\n            }\n        \n\n\n        analyzeChoAndFatTotal(){\n          this.curChoTotal = 0;\n          this.curFatTotal = 0;\n          this.curChoTotal=this.curChoBreakfast+this.curChoLunch+this.curChoDinner+this.curChoSnack1+this.curChoSnack2+this.curChoSnack3+this.curChoOthers;\n          this.curFatTotal=this.curFatBreakfast+this.curFatLunch+this.curFatDinner+this.curFatSnack1+this.curFatSnack2+this.curFatSnack3+this.curFatOthers;\n        \n        }\n\n\n  }\n  \n  \n  \n  \n\n\n\n\n\n// pod useful command: 🍓\n// https://github.com/ionic-team/capacitor/issues/1676\n// https://github.com/ionic-team/capacitor/issues/1755\n// sudo npm install -g cordova ionic\n// /Users/kaiyanliu/Desktop/diet-application/ios/App\n// kaiyanliu@Kaiyans-iMac App % ls\n// App\t\tApp.xcodeproj\tApp.xcworkspace\tPodfile\t\tPodfile.lock\tPods\t\tpublic\n// kaiyanliu@Kaiyans-iMac App % \n\n\n\n  // section for database\n\n\n    // storeData() {\n      // this.db.addFood(\n      //   this.myDate,\n      //   this.mainForm.value.category,\n      //   this.mainForm.value.food_name,\n      //   this.mainForm.value.unit,\n      //   this.mainForm.value.qty,\n      //   this.mainForm.value.cho,\n      //   this.mainForm.value.fat\n      // ).then((res) => {\n  \n      // })\n\n\n      // console.log(\"this.db.food????   \" + this.db.getFoods());\n      // this.db.addFood(\n      //   08022029,\n      //   \"this.mainForm.value.category\",\n      //   \"this.mainForm.value.food_name\",\n      //   \"this.mainForm.value.unit\",\n      //   \"this.mainForm.value.qty\",\n      //   \"this.mainForm.value.cho\",\n      //   \"this.mainForm.value.fat\"\n      // ).then((res) => {\n  \n      // })\n\n    // }\n\n\n  \n  \n  \n\n\n\n\n\n\n\n\n","import { Injectable } from '@angular/core';\nimport { Food } from './food';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { SQLitePorter } from '@ionic-native/sqlite-porter/ngx';\nimport { DatabaseService } from '../services/database.service';\n\n@Injectable({\n  providedIn: 'root'    \n})\n\nexport class Dailyfoodservice {\n  foodsList = new BehaviorSubject([]);\n \n\n  constructor( \n    private dbservice: DatabaseService, \n    private httpClient: HttpClient,\n    private sqlPorter: SQLitePorter\n   \n  ) {}\n\n\n \n  fetchFoods(): Observable<Food[]> {\n    return this.foodsList.asObservable();\n  }\n\n\n\n  // Render data\n  getData() {\n    this.httpClient.get(\n      'assets/data.sql', \n      {responseType: 'text'}\n    ).subscribe(data => {\n      this.sqlPorter.importSqlToDb(this.dbservice.getdb(), data)\n        .then(_ => {\n          this.getFoods();\n          this.dbservice.getDbReady().next(true);\n        })\n        .catch(error => console.error(error));\n    });\n  }\n\n  // Get list\n  getFoods(){\n    return this.dbservice.getdb().executeSql('SELECT * FROM dailyfoodtable', []).then(res => {\n      let items: Food[] = [];\n      if (res.rows.length > 0) {\n        for (var i = 0; i < res.rows.length; i++) { \n          items.push({ \n            id: res.rows.item(i).id,\n            uuid: res.rows.item(i).uuid,\n            timeframe: res.rows.item(i).timeframe,  \n            category: res.rows.item(i).category,\n            food_name: res.rows.item(i).food_name,  \n            unit: res.rows.item(i).unit,  \n            qty: res.rows.item(i).qty, \n            cho: res.rows.item(i).cho, \n            fat: res.rows.item(i).fat\n           });\n        }\n      }\n      this.foodsList.next(items);\n    });\n  }\n\n  // Add\n  addFood(uuid, timeframe, category, food_name, unit,qty,cho,fat) {\n    let data = [ uuid, timeframe, category, food_name, unit,qty,cho,fat];\n    console.log('lol2' + data)\n  \n    return this.dbservice.getdb().executeSql('INSERT INTO dailyfoodtable (uuid, timeframe, category, food_name, unit,qty,cho,fat) VALUES (?, ?, ?, ?, ?, ?, ?,?)', data)\n    .then(res => {\n      this.getFoods();\n    });\n\n  }\n \n  // Get single object\n  getFood(id): Promise<Food> {\n    return this.dbservice.getdb().executeSql('SELECT * FROM dailyfoodtable WHERE id = ?', [id]).then(res => { \n      return {\n        id: res.rows.item(0).id,\n        uuid: res.rows.item(0).uuid,\n        timeframe: res.rows.item(0).timeframe,\n        category: res.rows.item(0).category,\n        food_name: res.rows.item(0).food_name,  \n        unit: res.rows.item(0).unit,  \n        qty: res.rows.item(0).qty, \n        cho: res.rows.item(0).cho, \n        fat: res.rows.item(0).fat\n      }\n    });\n  }\n\n\n  // Delete\n  deleteFood(uuid) {\n    var q =  \"DELETE FROM dailyfoodtable WHERE uuid = \" +'\"' + uuid + '\"';\n    return this.dbservice.getdb().executeSql(q)\n    .then(_ => {\n      this.getFoods();\n    });\n  }\n\n\n}\n\n    // Update\n  // updateFood(id, food: Food) {\n  //   let data = [food.timeframe, food.category, food.food_name, food.unit,food.qty,food.cho,food.fat ];\n  //   return this.storage.executeSql(`UPDATE dailyfoodtable SET, timeframe=?, food_name = ?, unit = ? qty = ?, cho=?, fat=? WHERE id = ${id}`, data)\n  //   .then(data => {\n  //     this.getFoods();\n  //   })\n  // }\n"],"sourceRoot":"webpack:///"}