{"version":3,"sources":["webpack:///src/app/Home/home.page.html","webpack:///src/app/Home/home-routing.module.ts","webpack:///src/app/Home/home.module.ts","webpack:///src/app/Home/home.page.scss","webpack:///src/app/Home/home.page.ts","webpack:///src/app/services/dailyfood.service.ts"],"names":["routes","path","component","HomePageRoutingModule","imports","forChild","exports","HomePageModule","declarations","HomePage","dbservice","http","db","dailyrecorddb","formBuilder","toast","router","Data","curChoBreakfast","curFatBreakfast","curChoLunch","curFatLunch","curChoDinner","curFatDinner","curChoSnack1","curFatSnack1","curChoSnack2","curFatSnack2","curChoSnack3","curFatSnack3","curChoOthers","curFatOthers","curChoTotal","curFatTotal","anArrayBreakfast","anArrayLunch","anArrayDinner","anArraySnack1","anArraySnack2","anArraySnack3","anArrayOthers","myDate","Date","toISOString","split","jsonData","foodCardForm","food_name","category","unit","qty","cho","fat","map","Map","type","name","ev","initializeJsonData","document","getElementById","focus","val","target","value","trim","filter","object","toLowerCase","indexOf","console","log","i","j","length","j_uuid","String","replace","splice","dbdeleteFood","analyzeChoAndFatBreakfast","analyzeChoAndFatTotal","analyzeChoAndFatLunch","analyzeChoAndFatDinner","analyzeChoAndFatSnack1","analyzeChoAndFatSnack2","analyzeChoAndFatSnack3","analyzeChoAndFatOthers","uuid","deleteFood","then","res","create","message","duration","present","controls","number","currentFood","push","ResetBreakfast","ResetLunch","ResetDinner","ResetSnack1","ResetSnack2","ResetSnack3","ResetOthers","mainForm","group","uniqueKey","addFood","addRecord","fetchRecords","subscribe","item","id","forEach","element","Number","selector","template","Dailyfoodservice","httpClient","sqlPorter","foodsList","asObservable","get","responseType","data","importSqlToDb","getdb","_","getFoods","getDbReady","next","error","executeSql","items","rows","timeframe","q","providedIn"],"mappings":"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","file":"Home-home-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>\\n      Diet Tracking\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"ion-padding\\\">\\n  <ion-item lines=\\\"none\\\">\\n    <ion-datetime  [(ngModel)]=\\\"myDate\\\" class=time displayFormat=\\\"DD-MM-YYYY\\\" placeholderdate=\\\"Today\\\"></ion-datetime>\\n\\n</ion-item>\\n  <ion-segment color=\\\"primary\\\" [(ngModel)]=\\\"type\\\" (ionChange)=\\\"segmentChanged($event)\\\" scrollable>\\n    <ion-segment-button value=\\\"breakfast\\\" checked>\\n        <ion-label>Breakfast</ion-label>\\n      \\n      </ion-segment-button>\\n      <ion-segment-button value=\\\"lunch\\\">\\n        <ion-label>Lunch</ion-label>\\n      \\n      </ion-segment-button>\\n      <ion-segment-button value=\\\"eveningmeal\\\">\\n        <ion-label>Evening Meal</ion-label>\\n   \\n      </ion-segment-button>\\n      <ion-segment-button value=\\\"snack1\\\">\\n        <ion-label>Snack 1</ion-label>\\n      \\n      </ion-segment-button>\\n      <ion-segment-button value=\\\"snack2\\\">\\n        <ion-label>Snack 2</ion-label>\\n     \\n      </ion-segment-button>\\n      <ion-segment-button value=\\\"snack3\\\">\\n        <ion-label>Snack 3</ion-label>\\n\\n      </ion-segment-button>\\n      <ion-segment-button value=\\\"others\\\">\\n        <ion-label>Others</ion-label>\\n\\n      </ion-segment-button>\\n      \\n    </ion-segment>\\n\\n\\n\\n\\n    \\n  <!-- section of Breakfast start -->\\n <div [hidden]=\\\"type !='breakfast'\\\">\\n\\n\\n\\n<!-- <app-card> </app-card> -->\\n\\n\\n  <ion-list>\\n    \\n\\n    <!-- loop and print out what has already in the list -->\\n    <ion-card *ngFor=\\\"let att of anArrayBreakfast; let i=index\\\" >  \\n      <ion-item-sliding >\\n        <ion-item-options  side=\\\"end\\\">\\n        <ion-button color = \\\"danger\\\" (click)=\\\"removeItemBreakfast(i)\\\"><ion-icon name=\\\"trash\\\"></ion-icon> Delete</ion-button>\\n      </ion-item-options>\\n        <ion-item  lines=\\\"none\\\">\\n        <ion-label class=\\\"label\\\"> Food Name</ion-label>\\n        <ion-input  formControlName = \\\"food_name\\\" type=\\\"text\\\" required class = \\\"right\\\" placeholder={{att.food_name}} ></ion-input> \\n\\n      </ion-item>\\n    \\n      <ion-item lines=\\\"none\\\">\\n        <ion-label class=\\\"label\\\">Unit</ion-label>\\n        <!-- <ion-select value=\\\"gram\\\" okText=\\\"Okay\\\" cancelText=\\\"Dismiss\\\">\\n          <ion-select-option formControlName = \\\"unit\\\" type=\\\"text\\\" required class = \\\"left1\\\" >Gram</ion-select-option>\\n          <ion-select-option formControlName = \\\"unit\\\" type=\\\"text\\\" required class = \\\"left1\\\">Tbsl</ion-select-option>\\n        </ion-select> -->\\n        <ion-input  formControlName = \\\"unit\\\" type=\\\"text\\\" required class = \\\"left1\\\" placeholder=\\\"{{att.unit}}\\\" ></ion-input>\\n        <ion-label class=\\\"unique\\\">Qty</ion-label>\\n        <ion-input  formControlName = \\\"qty\\\"  type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\"{{att.qty}}\\\"></ion-input>\\n       \\n      </ion-item>\\n      <ion-item lines=\\\"none\\\" >\\n        \\n        <ion-label class=\\\"label\\\">CHO</ion-label>\\n        <ion-input formControlName = \\\"cho\\\"  type=\\\"text\\\" required class = \\\"left2\\\" placeholder=\\\"{{att.cho}}\\\"></ion-input>\\n        <ion-label class=\\\"label\\\">Fat</ion-label>\\n        <ion-input formControlName = \\\"fat\\\" type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\"{{att.fat}}\\\"></ion-input>\\n      </ion-item>\\n    </ion-item-sliding>\\n  \\n    </ion-card>\\n</ion-list>\\n\\n  \\n<!-- take in what user eat -->\\n<ion-list>\\n  <form [formGroup]=\\\"foodCardForm\\\" (ngSubmit)=\\\"onSaveBreakfast()\\\">\\n  <ion-card >  \\n    <ion-item-sliding >\\n      <ion-item-options  side=\\\"end\\\">\\n    </ion-item-options>\\n\\n\\n    \\n    \\n \\n        <ion-searchbar (ionInput) = \\\"filterJsonData($event)\\\"></ion-searchbar> \\n\\n\\n        <!-- <ion-item>\\n          <ion-label>Users</ion-label>\\n          <ion-select [compareWith]=\\\"compareWith\\\">\\n            <ion-select-option *ngFor=\\\"let user of jsonData\\\">{{user.first + ' ' + user.last}}</ion-select-option>\\n          </ion-select>\\n        </ion-item> -->\\n\\n\\n      \\n      \\n        <!-- <ion-select [(ngModel)]=\\\"food\\\" >\\n          <ion-select-option *ngFor=\\\"let food of jsonData\\\" [value]=\\\"food\\\"></ion-select-option>\\n        </ion-select> -->\\n\\n      \\n       \\n         <ion-list >\\n      <ion-item (click) = \\\"selectVal(object.name)\\\" *ngFor = \\\"let object of jsonData\\\"> \\n        {{object.name}}\\n      </ion-item>\\n    </ion-list>  \\n\\n    <ion-item lines=\\\"none\\\">\\n      <ion-label class=\\\"label\\\"> Food Name</ion-label>\\n \\n      <ion-input  formControlName = \\\"food_name\\\" type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\" Enter\\\" ></ion-input>\\n    </ion-item>\\n    <ion-item lines=\\\"none\\\">\\n      <ion-label class=\\\"label\\\">Unit</ion-label>\\n      <ion-input  formControlName = \\\"unit\\\" type=\\\"text\\\" required class = \\\"left1\\\" placeholder=\\\"Enter\\\" ></ion-input>\\n\\n      <ion-label class=\\\"unique\\\">Qty</ion-label>\\n      <ion-input  formControlName = \\\"qty\\\"  type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\"Enter\\\" ></ion-input>\\n    </ion-item>\\n\\n\\n    <ion-item lines=\\\"none\\\" >\\n      \\n      <ion-label class=\\\"label\\\">CHO</ion-label>\\n      <ion-input #choiput value = \\\"custom\\\" formControlName = \\\"cho\\\"  type=\\\"text\\\" required class = \\\"left2\\\" placeholder=\\\"Enter\\\"></ion-input>\\n      <ion-label class=\\\"label\\\">Fat</ion-label>\\n      <ion-input id = \\\"fatinput\\\" formControlName = \\\"fat\\\" type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\"Enter\\\"></ion-input>\\n    </ion-item>\\n\\n  </ion-item-sliding>\\n\\n  </ion-card>\\n  \\n  \\n</form >\\n\\n</ion-list>\\n\\n\\n<ion-button  (click)=\\\"AddBreakfast()\\\" size = \\\"small\\\" class = \\\"center\\\" color=\\\"primary\\\">Add Food</ion-button>\\n<ion-button  (click)=\\\"storeToDatabase()\\\" size = \\\"small\\\" class = \\\"center\\\" color=\\\"primary\\\">Store to Database</ion-button>\\n\\n\\n<ion-list>\\n  <ion-item>\\n    <ion-label class = \\\"label\\\">Breakfast CHO Sum</ion-label>\\n    <ion-input  class = \\\"right\\\" placeholder={{curChoBreakfast}} ></ion-input>\\n  </ion-item>\\n</ion-list>\\n  <ion-list>\\n    <ion-item>\\n      <ion-label class = \\\"label\\\">Breakfast Fat Sum</ion-label>\\n      <ion-input   class = \\\"right\\\" placeholder={{curFatBreakfast}}></ion-input>\\n    </ion-item>\\n    </ion-list>  \\n<ion-list>\\n  <ion-item>\\n    <ion-label class = \\\"label\\\">Daily CHO Sum</ion-label>\\n    <ion-input  class = \\\"right\\\" placeholder={{curChoTotal}} ></ion-input>\\n  </ion-item>\\n  </ion-list>\\n  <ion-list>\\n    <ion-item>\\n      <ion-label class = \\\"label\\\">Daily Fat Sum</ion-label>\\n      <ion-input  class = \\\"right\\\" placeholder={{curFatTotal}} ></ion-input>\\n    </ion-item>\\n    </ion-list>\\n  </div>\\n\\n\\n\\n<!-- \\n  <ion-card>\\n    <ion-item lines=\\\"inset\\\" *ngFor=\\\"let data of Data\\\">\\n      <ion-label>\\n        <h5 >Date:{{myDate}}</h5>\\n        <h5>CHO:{{data.cho}}</h5>\\n        <h5>Fat:{{data.fat}}</h5>\\n      </ion-label>\\n      <div class=\\\"item-note\\\" item-end>     \\n        <ion-icon name=\\\"trash\\\" style=\\\"zoom:2.0\\\" (click)=\\\"deleteFood(data.id)\\\"></ion-icon>\\n      </div>\\n    </ion-item>\\n  </ion-card>   -->\\n\\n\\n\\n  <!-- section of Breakfast end -->\\n\\n\\n\\n\\n\\n\\n  \\n  <!-- section of lunch start -->\\n  <div [hidden]=\\\"type !='lunch'\\\">\\n\\n\\n    <!-- <app-card> </app-card> -->\\n    \\n    \\n      <ion-list>\\n       \\n        <ion-card *ngFor=\\\"let att of anArrayLunch; let i=index\\\" >  \\n          <ion-item-sliding >\\n            <ion-item-options  side=\\\"end\\\">\\n            <ion-button color = \\\"danger\\\" (click)=\\\"removeItemLunch(i)\\\"><ion-icon name=\\\"trash\\\"></ion-icon> Delete</ion-button>\\n          </ion-item-options>\\n          \\n            <ion-item  lines=\\\"none\\\">\\n            <ion-label class=\\\"label\\\"> Food Name</ion-label>\\n            <ion-input  formControlName = \\\"food_name\\\" type=\\\"text\\\" required class = \\\"right\\\" placeholder={{att.food_name}} ></ion-input> \\n    \\n          </ion-item>\\n        \\n          <ion-item lines=\\\"none\\\">\\n            <ion-label class=\\\"label\\\">Unit</ion-label>\\n            <ion-input  formControlName = \\\"unit\\\" type=\\\"text\\\" required class = \\\"left1\\\" placeholder=\\\"{{att.unit}}\\\" ></ion-input>\\n            \\n            <ion-label class=\\\"unique\\\">Qty</ion-label>\\n            <ion-input  formControlName = \\\"qty\\\"  type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\"{{att.qty}}\\\"></ion-input>\\n           \\n          </ion-item>\\n          <ion-item lines=\\\"none\\\" >\\n            \\n            <ion-label class=\\\"label\\\">CHO</ion-label>\\n            <ion-input formControlName = \\\"cho\\\"  type=\\\"text\\\" required class = \\\"left2\\\" placeholder=\\\"{{att.cho}}\\\"></ion-input>\\n            <ion-label class=\\\"label\\\">Fat</ion-label>\\n            <ion-input formControlName = \\\"fat\\\" type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\"{{att.fat}}\\\"></ion-input>\\n          </ion-item>\\n        </ion-item-sliding>\\n      \\n        </ion-card>\\n  \\n    </ion-list>\\n    \\n      \\n    <ion-list>\\n      <form [formGroup]=\\\"foodCardForm\\\" (ngSubmit)=\\\"onSaveLunch()\\\">\\n        <ion-card >  \\n          <ion-item-sliding >\\n            <ion-item-options  side=\\\"end\\\">\\n          </ion-item-options>\\n            <ion-item  lines=\\\"none\\\">\\n            <ion-label class=\\\"label\\\"> Food Name</ion-label>\\n       \\n            <ion-input  formControlName = \\\"food_name\\\" type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\" Enter\\\" ></ion-input>\\n          </ion-item>\\n          <ion-item lines=\\\"none\\\">\\n            <ion-label class=\\\"label\\\">Unit</ion-label>\\n            <ion-input  formControlName = \\\"unit\\\" type=\\\"text\\\" required class = \\\"left1\\\" placeholder=\\\"Enter\\\" ></ion-input>\\n      \\n            <ion-label class=\\\"unique\\\">Qty</ion-label>\\n            <ion-input  formControlName = \\\"qty\\\"  type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\"Enter\\\" ></ion-input>\\n          </ion-item>\\n      \\n      \\n          <ion-item lines=\\\"none\\\" >\\n            \\n            <ion-label class=\\\"label\\\">CHO</ion-label>\\n            <ion-input formControlName = \\\"cho\\\"  type=\\\"text\\\" required class = \\\"left2\\\" placeholder=\\\"Enter\\\"></ion-input>\\n            <ion-label class=\\\"label\\\">Fat</ion-label>\\n            <ion-input formControlName = \\\"fat\\\" type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\"Enter\\\"></ion-input>\\n          </ion-item>\\n      \\n        </ion-item-sliding>\\n      \\n        </ion-card>\\n    </form >\\n    \\n    </ion-list>\\n    \\n    \\n    <ion-button  (click)=\\\"AddLunch()\\\" size = \\\"small\\\" class = \\\"center\\\" color=\\\"primary\\\">Add Food</ion-button>\\n    <ion-button  (click)=\\\"storeToDatabase()\\\" type=\\\"submit\\\" size = \\\"small\\\" class = \\\"center\\\" color=\\\"primary\\\">Store to Database</ion-button>\\n    \\n    \\n\\n    <ion-list>\\n      <ion-item>\\n        <ion-label class = \\\"label\\\">Lunch CHO Sum</ion-label>\\n        <ion-input  class = \\\"right\\\" placeholder={{curChoLunch}} ></ion-input>\\n      </ion-item>\\n    </ion-list>\\n      <ion-list>\\n        <ion-item>\\n          <ion-label class = \\\"label\\\">Lunch Fat Sum</ion-label>\\n          <ion-input   class = \\\"right\\\" placeholder={{curFatLunch}}></ion-input>\\n        </ion-item>\\n        </ion-list>  \\n    <ion-list>\\n      <ion-item>\\n        <ion-label class = \\\"label\\\">Daily CHO Sum</ion-label>\\n        <ion-input  class = \\\"right\\\" placeholder={{curChoTotal}} ></ion-input>\\n      </ion-item>\\n      </ion-list>\\n      <ion-list>\\n        <ion-item>\\n          <ion-label class = \\\"label\\\">Daily Fat Sum</ion-label>\\n          <ion-input  class = \\\"right\\\" placeholder={{curFatTotal}} ></ion-input>\\n        </ion-item>\\n        </ion-list>\\n      </div>\\n    \\n  \\n    \\n    \\n      <!-- section of lunch end -->\\n    \\n\\n\\n <!-- section of dinner start -->\\n <div [hidden]=\\\"type !='eveningmeal'\\\">\\n\\n\\n  <!-- <app-card> </app-card> -->\\n  \\n  \\n    <ion-list>\\n\\n      <ion-card *ngFor=\\\"let att of anArrayDinner; let i=index\\\" >  \\n        <ion-item-sliding >\\n          <ion-item-options  side=\\\"end\\\">\\n          <ion-button color = \\\"danger\\\" (click)=\\\"removeItemDinner(i)\\\"><ion-icon name=\\\"trash\\\"></ion-icon> Delete</ion-button>\\n        </ion-item-options>\\n    \\n          <ion-item  lines=\\\"none\\\">\\n          <ion-label class=\\\"label\\\"> Food Name</ion-label>\\n          <ion-input  formControlName = \\\"food_name\\\" type=\\\"text\\\" required class = \\\"right\\\" placeholder={{att.food_name}} ></ion-input> \\n  \\n        </ion-item>\\n      \\n        <ion-item lines=\\\"none\\\">\\n          <ion-label class=\\\"label\\\">Unit</ion-label>\\n          <ion-input  formControlName = \\\"unit\\\" type=\\\"text\\\" required class = \\\"left1\\\" placeholder=\\\"{{att.unit}}\\\" ></ion-input>\\n          \\n          <ion-label class=\\\"unique\\\">Qty</ion-label>\\n          <ion-input  formControlName = \\\"qty\\\"  type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\"{{att.qty}}\\\"></ion-input>\\n         \\n        </ion-item>\\n        <ion-item lines=\\\"none\\\" >\\n          \\n          <ion-label class=\\\"label\\\">CHO</ion-label>\\n          <ion-input formControlName = \\\"cho\\\"  type=\\\"text\\\" required class = \\\"left2\\\" placeholder=\\\"{{att.cho}}\\\"></ion-input>\\n          <ion-label class=\\\"label\\\">Fat</ion-label>\\n          <ion-input formControlName = \\\"fat\\\" type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\"{{att.fat}}\\\"></ion-input>\\n        </ion-item>\\n      </ion-item-sliding>\\n    \\n      </ion-card>\\n  \\n  </ion-list>\\n  \\n    \\n  <ion-list>\\n    <form [formGroup]=\\\"foodCardForm\\\" (ngSubmit)=\\\"onSaveDinner()\\\">\\n      <ion-card >  \\n        <ion-item-sliding >\\n          <ion-item-options  side=\\\"end\\\">\\n        </ion-item-options>\\n          <ion-item  lines=\\\"none\\\">\\n          <ion-label class=\\\"label\\\"> Food Name</ion-label>\\n     \\n          <ion-input  formControlName = \\\"food_name\\\" type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\" Enter\\\" ></ion-input>\\n        </ion-item>\\n        <ion-item lines=\\\"none\\\">\\n          <ion-label class=\\\"label\\\">Unit</ion-label>\\n          <ion-input  formControlName = \\\"unit\\\" type=\\\"text\\\" required class = \\\"left1\\\" placeholder=\\\"Enter\\\" ></ion-input>\\n    \\n          <ion-label class=\\\"unique\\\">Qty</ion-label>\\n          <ion-input  formControlName = \\\"qty\\\"  type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\"Enter\\\" ></ion-input>\\n        </ion-item>\\n    \\n    \\n        <ion-item lines=\\\"none\\\" >\\n          \\n          <ion-label class=\\\"label\\\">CHO</ion-label>\\n          <ion-input formControlName = \\\"cho\\\"  type=\\\"text\\\" required class = \\\"left2\\\" placeholder=\\\"Enter\\\"></ion-input>\\n          <ion-label class=\\\"label\\\">Fat</ion-label>\\n          <ion-input formControlName = \\\"fat\\\" type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\"Enter\\\"></ion-input>\\n        </ion-item>\\n    \\n      </ion-item-sliding>\\n    \\n      </ion-card>\\n    \\n    \\n  </form >\\n  \\n  </ion-list>\\n  \\n  \\n  <ion-button  (click)=\\\"AddDinner()\\\" size = \\\"small\\\" class = \\\"center\\\" color=\\\"primary\\\">Add Food</ion-button>\\n  <ion-button  (click)=\\\"storeToDatabase()\\\" size = \\\"small\\\" class = \\\"center\\\" color=\\\"primary\\\">Store to Database</ion-button>\\n  \\n  \\n  <ion-list>\\n    <ion-item>\\n      <ion-label class = \\\"label\\\">Dinner CHO Sum</ion-label>\\n      <ion-input  class = \\\"right\\\" placeholder={{curChoDinner}} ></ion-input>\\n    </ion-item>\\n  </ion-list>\\n    <ion-list>\\n      <ion-item>\\n        <ion-label class = \\\"label\\\">Dinner Fat Sum</ion-label>\\n        <ion-input   class = \\\"right\\\" placeholder={{curFatDinner}}></ion-input>\\n      </ion-item>\\n      </ion-list>  \\n  <ion-list>\\n    <ion-item>\\n      <ion-label class = \\\"label\\\">Daily CHO Sum</ion-label>\\n      <ion-input  class = \\\"right\\\" placeholder={{curChoTotal}} ></ion-input>\\n    </ion-item>\\n    </ion-list>\\n    <ion-list>\\n      <ion-item>\\n        <ion-label class = \\\"label\\\">Daily Fat Sum</ion-label>\\n        <ion-input  class = \\\"right\\\" placeholder={{curFatTotal}} ></ion-input>\\n      </ion-item>\\n      </ion-list>\\n    </div>\\n  \\n  \\n    <!-- <ion-card>\\n      <ion-item lines=\\\"inset\\\" *ngFor=\\\"let data of Data\\\">\\n        <ion-label>\\n          <h5 >Date:{{myDate}}</h5>\\n          <h5>CHO:{{data.cho}}</h5>\\n          <h5>Fat:{{data.fat}}</h5>\\n        </ion-label>\\n        <div class=\\\"item-note\\\" item-end>     \\n          <ion-icon name=\\\"trash\\\" style=\\\"zoom:2.0\\\" (click)=\\\"deleteFood(data.id)\\\"></ion-icon>\\n        </div>\\n      </ion-item>\\n    </ion-card>   -->\\n  \\n  \\n    <!-- section of dinner end -->\\n  \\n  \\n\\n    \\n  <!-- section of Snack1 start -->\\n  <div [hidden]=\\\"type !='snack1'\\\">\\n\\n\\n    <!-- <app-card> </app-card> -->\\n    \\n    \\n      <ion-list>\\n       \\n        <ion-card *ngFor=\\\"let att of anArraySnack1; let i=index\\\" >  \\n          <ion-item-sliding >\\n            <ion-item-options  side=\\\"end\\\">\\n            <ion-button color = \\\"danger\\\" (click)=\\\"removeItemSnack1(i)\\\"><ion-icon name=\\\"trash\\\"></ion-icon> Delete</ion-button>\\n          </ion-item-options>\\n            \\n            <ion-item  lines=\\\"none\\\">\\n            <ion-label class=\\\"label\\\"> Food Name</ion-label>\\n            <ion-input  formControlName = \\\"food_name\\\" type=\\\"text\\\" required class = \\\"right\\\" placeholder={{att.food_name}} ></ion-input> \\n    \\n          </ion-item>\\n        \\n          <ion-item lines=\\\"none\\\">\\n            <ion-label class=\\\"label\\\">Unit</ion-label>\\n            <ion-input  formControlName = \\\"unit\\\" type=\\\"text\\\" required class = \\\"left1\\\" placeholder=\\\"{{att.unit}}\\\" ></ion-input>\\n            \\n            <ion-label class=\\\"unique\\\">Qty</ion-label>\\n            <ion-input  formControlName = \\\"qty\\\"  type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\"{{att.qty}}\\\"></ion-input>\\n           \\n          </ion-item>\\n          <ion-item lines=\\\"none\\\" >\\n            \\n            <ion-label class=\\\"label\\\">CHO</ion-label>\\n            <ion-input formControlName = \\\"cho\\\"  type=\\\"text\\\" required class = \\\"left2\\\" placeholder=\\\"{{att.cho}}\\\"></ion-input>\\n            <ion-label class=\\\"label\\\">Fat</ion-label>\\n            <ion-input formControlName = \\\"fat\\\" type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\"{{att.fat}}\\\"></ion-input>\\n          </ion-item>\\n        </ion-item-sliding>\\n      \\n        </ion-card>\\n   \\n    </ion-list>\\n    \\n      \\n    <ion-list>\\n      <form [formGroup]=\\\"foodCardForm\\\" (ngSubmit)=\\\"onSaveSnack1()\\\">\\n        <ion-card >  \\n          <ion-item-sliding >\\n            <ion-item-options  side=\\\"end\\\">\\n          </ion-item-options>\\n            <ion-item  lines=\\\"none\\\">\\n            <ion-label class=\\\"label\\\"> Food Name</ion-label>\\n       \\n            <ion-input  formControlName = \\\"food_name\\\" type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\" Enter\\\" ></ion-input>\\n          </ion-item>\\n          <ion-item lines=\\\"none\\\">\\n            <ion-label class=\\\"label\\\">Unit</ion-label>\\n            <ion-input  formControlName = \\\"unit\\\" type=\\\"text\\\" required class = \\\"left1\\\" placeholder=\\\"Enter\\\" ></ion-input>\\n      \\n            <ion-label class=\\\"unique\\\">Qty</ion-label>\\n            <ion-input  formControlName = \\\"qty\\\"  type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\"Enter\\\" ></ion-input>\\n          </ion-item>\\n      \\n      \\n          <ion-item lines=\\\"none\\\" >\\n            \\n            <ion-label class=\\\"label\\\">CHO</ion-label>\\n            <ion-input formControlName = \\\"cho\\\"  type=\\\"text\\\" required class = \\\"left2\\\" placeholder=\\\"Enter\\\"></ion-input>\\n            <ion-label class=\\\"label\\\">Fat</ion-label>\\n            <ion-input formControlName = \\\"fat\\\" type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\"Enter\\\"></ion-input>\\n          </ion-item>\\n      \\n        </ion-item-sliding>\\n      \\n        </ion-card>\\n      \\n      \\n    </form >\\n    \\n    </ion-list>\\n    \\n    \\n    <ion-button  (click)=\\\"AddSnack1()\\\" size = \\\"small\\\" class = \\\"center\\\" color=\\\"primary\\\">Add Food </ion-button>\\n    <ion-button  (click)=\\\"storeToDatabase()\\\" size = \\\"small\\\" class = \\\"center\\\" color=\\\"primary\\\">Store to Database</ion-button>\\n    \\n    \\n    <ion-list>\\n      <ion-item>\\n        <ion-label class = \\\"label\\\">Snack 1 CHO Sum</ion-label>\\n        <ion-input  class = \\\"right\\\" placeholder={{curChoSnack1}} ></ion-input>\\n      </ion-item>\\n    </ion-list>\\n      <ion-list>\\n        <ion-item>\\n          <ion-label class = \\\"label\\\">Snack 1 Fat Sum</ion-label>\\n          <ion-input   class = \\\"right\\\" placeholder={{curFatSnack1}}></ion-input>\\n        </ion-item>\\n        </ion-list>  \\n    <ion-list>\\n      <ion-item>\\n        <ion-label class = \\\"label\\\">Daily CHO Sum</ion-label>\\n        <ion-input  class = \\\"right\\\" placeholder={{curChoTotal}} ></ion-input>\\n      </ion-item>\\n      </ion-list>\\n      <ion-list>\\n        <ion-item>\\n          <ion-label class = \\\"label\\\">Daily Fat Sum</ion-label>\\n          <ion-input  class = \\\"right\\\" placeholder={{curFatTotal}} ></ion-input>\\n        </ion-item>\\n        </ion-list>\\n      </div>\\n\\n\\n\\n\\n <!-- section of Snack2 start -->\\n <div [hidden]=\\\"type !='snack2'\\\">\\n\\n\\n  <!-- <app-card> </app-card> -->\\n  \\n  \\n    <ion-list>\\n      \\n      <ion-card *ngFor=\\\"let att of anArraySnack2; let i=index\\\" >  \\n        <ion-item-sliding >\\n          <ion-item-options  side=\\\"end\\\">\\n          <ion-button color = \\\"danger\\\" (click)=\\\"removeItemSnack2(i)\\\"><ion-icon name=\\\"trash\\\"></ion-icon> Delete</ion-button>\\n        </ion-item-options>\\n          <!-- <ion-button class = \\\"savebutton\\\" type=\\\"submit\\\" color=\\\"tertiary\\\"  shape=\\\"block\\\" expand=\\\"block\\\">Save</ion-button> -->\\n          <ion-item  lines=\\\"none\\\">\\n          <ion-label class=\\\"label\\\"> Food Name</ion-label>\\n          <ion-input  formControlName = \\\"food_name\\\" type=\\\"text\\\" required class = \\\"right\\\" placeholder={{att.food_name}} ></ion-input> \\n  \\n        </ion-item>\\n      \\n        <ion-item lines=\\\"none\\\">\\n          <ion-label class=\\\"label\\\">Unit</ion-label>\\n          <ion-input  formControlName = \\\"unit\\\" type=\\\"text\\\" required class = \\\"left1\\\" placeholder=\\\"{{att.unit}}\\\" ></ion-input>\\n          \\n          <ion-label class=\\\"unique\\\">Qty</ion-label>\\n          <ion-input  formControlName = \\\"qty\\\"  type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\"{{att.qty}}\\\"></ion-input>\\n         \\n        </ion-item>\\n        <ion-item lines=\\\"none\\\" >\\n          \\n          <ion-label class=\\\"label\\\">CHO</ion-label>\\n          <ion-input formControlName = \\\"cho\\\"  type=\\\"text\\\" required class = \\\"left2\\\" placeholder=\\\"{{att.cho}}\\\"></ion-input>\\n          <ion-label class=\\\"label\\\">Fat</ion-label>\\n          <ion-input formControlName = \\\"fat\\\" type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\"{{att.fat}}\\\"></ion-input>\\n        </ion-item>\\n      </ion-item-sliding>\\n    \\n      </ion-card>\\n \\n  </ion-list>\\n  \\n    \\n  <ion-list>\\n    <form [formGroup]=\\\"foodCardForm\\\" (ngSubmit)=\\\"onSaveSnack2()\\\">\\n      <ion-card >  \\n        <ion-item-sliding >\\n          <ion-item-options  side=\\\"end\\\">\\n        </ion-item-options>\\n          <ion-item  lines=\\\"none\\\">\\n          <ion-label class=\\\"label\\\"> Food Name</ion-label>\\n     \\n          <ion-input  formControlName = \\\"food_name\\\" type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\" Enter\\\" ></ion-input>\\n        </ion-item>\\n        <ion-item lines=\\\"none\\\">\\n          <ion-label class=\\\"label\\\">Unit</ion-label>\\n          <ion-input  formControlName = \\\"unit\\\" type=\\\"text\\\" required class = \\\"left1\\\" placeholder=\\\"Enter\\\" ></ion-input>\\n    \\n          <ion-label class=\\\"unique\\\">Qty</ion-label>\\n          <ion-input  formControlName = \\\"qty\\\"  type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\"Enter\\\" ></ion-input>\\n        </ion-item>\\n    \\n    \\n        <ion-item lines=\\\"none\\\" >\\n          \\n          <ion-label class=\\\"label\\\">CHO</ion-label>\\n          <ion-input formControlName = \\\"cho\\\"  type=\\\"text\\\" required class = \\\"left2\\\" placeholder=\\\"Enter\\\"></ion-input>\\n          <ion-label class=\\\"label\\\">Fat</ion-label>\\n          <ion-input formControlName = \\\"fat\\\" type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\"Enter\\\"></ion-input>\\n        </ion-item>\\n    \\n      </ion-item-sliding>\\n    \\n      </ion-card>\\n      \\n    \\n    \\n  </form >\\n  \\n  </ion-list>\\n  \\n  \\n  <ion-button  (click)=\\\"AddSnack2()\\\" size = \\\"small\\\" class = \\\"center\\\" color=\\\"primary\\\">Add Food </ion-button>\\n  <ion-button  (click)=\\\"storeToDatabase()\\\" size = \\\"small\\\" class = \\\"center\\\" color=\\\"primary\\\">Store to Database</ion-button>\\n  \\n  \\n  <ion-list>\\n    <ion-item>\\n      <ion-label class = \\\"label\\\">Snack 2 CHO Sum</ion-label>\\n      <ion-input  class = \\\"right\\\" placeholder={{curChoSnack2}} ></ion-input>\\n    </ion-item>\\n  </ion-list>\\n    <ion-list>\\n      <ion-item>\\n        <ion-label class = \\\"label\\\">Snack 2 Fat Sum</ion-label>\\n        <ion-input   class = \\\"right\\\" placeholder={{curFatSnack2}}></ion-input>\\n      </ion-item>\\n      </ion-list>  \\n  <ion-list>\\n    <ion-item>\\n      <ion-label class = \\\"label\\\">Daily CHO Sum</ion-label>\\n      <ion-input  class = \\\"right\\\" placeholder={{curChoTotal}} ></ion-input>\\n    </ion-item>\\n    </ion-list>\\n    <ion-list>\\n      <ion-item>\\n        <ion-label class = \\\"label\\\">Daily Fat Sum</ion-label>\\n        <ion-input  class = \\\"right\\\" placeholder={{curFatTotal}} ></ion-input>\\n      </ion-item>\\n      </ion-list>\\n    </div>\\n\\n <!-- section of Snack3 start -->\\n <div [hidden]=\\\"type !='snack3'\\\">\\n\\n\\n  <!-- <app-card> </app-card> -->\\n  \\n  \\n    <ion-list>\\n     \\n      <ion-card *ngFor=\\\"let att of anArraySnack3; let i=index\\\" >  \\n        <ion-item-sliding >\\n          <ion-item-options  side=\\\"end\\\">\\n          <ion-button color = \\\"danger\\\" (click)=\\\"removeItemSnack3(i)\\\"><ion-icon name=\\\"trash\\\"></ion-icon> Delete</ion-button>\\n        </ion-item-options>\\n          <!-- <ion-button class = \\\"savebutton\\\" type=\\\"submit\\\" color=\\\"tertiary\\\"  shape=\\\"block\\\" expand=\\\"block\\\">Save</ion-button> -->\\n          <ion-item  lines=\\\"none\\\">\\n          <ion-label class=\\\"label\\\"> Food Name</ion-label>\\n          <ion-input  formControlName = \\\"food_name\\\" type=\\\"text\\\" required class = \\\"right\\\" placeholder={{att.food_name}} ></ion-input> \\n  \\n        </ion-item>\\n      \\n        <ion-item lines=\\\"none\\\">\\n          <ion-label class=\\\"label\\\">Unit</ion-label>\\n          <ion-input  formControlName = \\\"unit\\\" type=\\\"text\\\" required class = \\\"left1\\\" placeholder=\\\"{{att.unit}}\\\" ></ion-input>\\n          \\n          <ion-label class=\\\"unique\\\">Qty</ion-label>\\n          <ion-input  formControlName = \\\"qty\\\"  type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\"{{att.qty}}\\\"></ion-input>\\n         \\n        </ion-item>\\n        <ion-item lines=\\\"none\\\" >\\n          \\n          <ion-label class=\\\"label\\\">CHO</ion-label>\\n          <ion-input formControlName = \\\"cho\\\"  type=\\\"text\\\" required class = \\\"left2\\\" placeholder=\\\"{{att.cho}}\\\"></ion-input>\\n          <ion-label class=\\\"label\\\">Fat</ion-label>\\n          <ion-input formControlName = \\\"fat\\\" type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\"{{att.fat}}\\\"></ion-input>\\n        </ion-item>\\n      </ion-item-sliding>\\n    \\n      </ion-card>\\n\\n  </ion-list>\\n  \\n    \\n  <ion-list>\\n    <form [formGroup]=\\\"foodCardForm\\\" (ngSubmit)=\\\"onSaveSnack3()\\\">\\n      <ion-card >  \\n        <ion-item-sliding >\\n          <ion-item-options  side=\\\"end\\\">\\n        </ion-item-options>\\n          <ion-item  lines=\\\"none\\\">\\n          <ion-label class=\\\"label\\\"> Food Name</ion-label>\\n     \\n          <ion-input  formControlName = \\\"food_name\\\" type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\" Enter\\\" ></ion-input>\\n        </ion-item>\\n        <ion-item lines=\\\"none\\\">\\n          <ion-label class=\\\"label\\\">Unit</ion-label>\\n          <ion-input  formControlName = \\\"unit\\\" type=\\\"text\\\" required class = \\\"left1\\\" placeholder=\\\"Enter\\\" ></ion-input>\\n    \\n          <ion-label class=\\\"unique\\\">Qty</ion-label>\\n          <ion-input  formControlName = \\\"qty\\\"  type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\"Enter\\\" ></ion-input>\\n        </ion-item>\\n    \\n    \\n        <ion-item lines=\\\"none\\\" >\\n          \\n          <ion-label class=\\\"label\\\">CHO</ion-label>\\n          <ion-input formControlName = \\\"cho\\\"  type=\\\"text\\\" required class = \\\"left2\\\" placeholder=\\\"Enter\\\"></ion-input>\\n          <ion-label class=\\\"label\\\">Fat</ion-label>\\n          <ion-input formControlName = \\\"fat\\\" type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\"Enter\\\"></ion-input>\\n        </ion-item>\\n    \\n      </ion-item-sliding>\\n    \\n      </ion-card>\\n      \\n    \\n    \\n  </form >\\n  \\n  </ion-list>\\n  \\n  \\n  <ion-button  (click)=\\\"AddSnack3()\\\" size = \\\"small\\\" class = \\\"center\\\" color=\\\"primary\\\">Add Food</ion-button>\\n  <ion-button  (click)=\\\"storeToDatabase()\\\" size = \\\"small\\\" class = \\\"center\\\" color=\\\"primary\\\">Store to Database</ion-button>\\n  \\n  \\n  <ion-list>\\n    <ion-item>\\n      <ion-label class = \\\"label\\\">Snack 3 CHO Sum</ion-label>\\n      <ion-input  class = \\\"right\\\" placeholder={{curChoSnack3}} ></ion-input>\\n    </ion-item>\\n  </ion-list>\\n    <ion-list>\\n      <ion-item>\\n        <ion-label class = \\\"label\\\">Snack 3 Fat Sum</ion-label>\\n        <ion-input   class = \\\"right\\\" placeholder={{curFatSnack3}}></ion-input>\\n      </ion-item>\\n      </ion-list>  \\n  <ion-list>\\n    <ion-item>\\n      <ion-label class = \\\"label\\\">Daily CHO Sum</ion-label>\\n      <ion-input  class = \\\"right\\\" placeholder={{curChoTotal}} ></ion-input>\\n    </ion-item>\\n    </ion-list>\\n    <ion-list>\\n      <ion-item>\\n        <ion-label class = \\\"label\\\">Daily Fat Sum</ion-label>\\n        <ion-input  class = \\\"right\\\" placeholder={{curFatTotal}} ></ion-input>\\n      </ion-item>\\n      </ion-list>\\n    </div>\\n\\n\\n     <!-- section of Others start -->\\n <div [hidden]=\\\"type !='others'\\\">\\n\\n\\n  <!-- <app-card> </app-card> -->\\n  \\n  \\n    <ion-list>\\n     \\n      <ion-card *ngFor=\\\"let att of anArrayOthers; let i=index\\\" >  \\n        <ion-item-sliding >\\n          <ion-item-options  side=\\\"end\\\">\\n          <ion-button color = \\\"danger\\\" (click)=\\\"removeItemOthers(i)\\\"><ion-icon name=\\\"trash\\\"></ion-icon> Delete</ion-button>\\n        </ion-item-options>\\n          <!-- <ion-button class = \\\"savebutton\\\" type=\\\"submit\\\" color=\\\"tertiary\\\"  shape=\\\"block\\\" expand=\\\"block\\\">Save</ion-button> -->\\n          <ion-item  lines=\\\"none\\\">\\n          <ion-label class=\\\"label\\\"> Food Name</ion-label>\\n          <ion-input  formControlName = \\\"food_name\\\" type=\\\"text\\\" required class = \\\"right\\\" placeholder={{att.food_name}} ></ion-input> \\n  \\n        </ion-item>\\n      \\n        <ion-item lines=\\\"none\\\">\\n          <ion-label class=\\\"label\\\">Unit</ion-label>\\n          <ion-input  formControlName = \\\"unit\\\" type=\\\"text\\\" required class = \\\"left1\\\" placeholder=\\\"{{att.unit}}\\\" ></ion-input>\\n          \\n          <ion-label class=\\\"unique\\\">Qty</ion-label>\\n          <ion-input  formControlName = \\\"qty\\\"  type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\"{{att.qty}}\\\"></ion-input>\\n         \\n        </ion-item>\\n        <ion-item lines=\\\"none\\\" >\\n          \\n          <ion-label class=\\\"label\\\">CHO</ion-label>\\n          <ion-input formControlName = \\\"cho\\\"  type=\\\"text\\\" required class = \\\"left2\\\" placeholder=\\\"{{att.cho}}\\\"></ion-input>\\n          <ion-label class=\\\"label\\\">Fat</ion-label>\\n          <ion-input formControlName = \\\"fat\\\" type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\"{{att.fat}}\\\"></ion-input>\\n        </ion-item>\\n      </ion-item-sliding>\\n    \\n      </ion-card>\\n\\n  </ion-list>\\n  \\n    \\n  <ion-list>\\n    <form [formGroup]=\\\"foodCardForm\\\" (ngSubmit)=\\\"onSaveOthers()\\\">\\n      <ion-card >  \\n        <ion-item-sliding >\\n          <ion-item-options  side=\\\"end\\\">\\n        </ion-item-options>\\n          <ion-item  lines=\\\"none\\\">\\n          <ion-label class=\\\"label\\\"> Food Name</ion-label>\\n     \\n          <ion-input  formControlName = \\\"food_name\\\" type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\" Enter\\\" ></ion-input>\\n        </ion-item>\\n        <ion-item lines=\\\"none\\\">\\n          <ion-label class=\\\"label\\\">Unit</ion-label>\\n          <ion-input  formControlName = \\\"unit\\\" type=\\\"text\\\" required class = \\\"left1\\\" placeholder=\\\"Enter\\\" ></ion-input>\\n    \\n          <ion-label class=\\\"unique\\\">Qty</ion-label>\\n          <ion-input  formControlName = \\\"qty\\\"  type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\"Enter\\\" ></ion-input>\\n        </ion-item>\\n    \\n    \\n        <ion-item lines=\\\"none\\\" >\\n          \\n          <ion-label class=\\\"label\\\">CHO</ion-label>\\n          <ion-input formControlName = \\\"cho\\\"  type=\\\"text\\\" required class = \\\"left2\\\" placeholder=\\\"Enter\\\"></ion-input>\\n          <ion-label class=\\\"label\\\">Fat</ion-label>\\n          <ion-input formControlName = \\\"fat\\\" type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\"Enter\\\"></ion-input>\\n        </ion-item>\\n    \\n      </ion-item-sliding>\\n    \\n      </ion-card>\\n      \\n    \\n    \\n  </form >\\n  \\n  </ion-list>\\n  \\n  \\n  <ion-button  (click)=\\\"AddOthers()\\\" size = \\\"small\\\" class = \\\"center\\\" color=\\\"primary\\\">Add Food</ion-button>\\n  <ion-button  (click)=\\\"storeToDatabase()\\\" size = \\\"small\\\" class = \\\"center\\\" color=\\\"primary\\\">Store to database</ion-button>\\n  \\n  \\n  <ion-list>\\n    <ion-item>\\n      <ion-label class = \\\"label\\\">Others CHO Sum</ion-label>\\n      <ion-input  class = \\\"right\\\" placeholder={{curChoOthers}} ></ion-input>\\n    </ion-item>\\n  </ion-list>\\n    <ion-list>\\n      <ion-item>\\n        <ion-label class = \\\"label\\\">Others Fat Sum</ion-label>\\n        <ion-input   class = \\\"right\\\" placeholder={{curFatOthers}}></ion-input>\\n      </ion-item>\\n      </ion-list>  \\n  <ion-list>\\n    <ion-item>\\n      <ion-label class = \\\"label\\\">Daily CHO Sum</ion-label>\\n      <ion-input  class = \\\"right\\\" placeholder={{curChoTotal}} ></ion-input>\\n    </ion-item>\\n    </ion-list>\\n    <ion-list>\\n      <ion-item>\\n        <ion-label class = \\\"label\\\">Daily Fat Sum</ion-label>\\n        <ion-input  class = \\\"right\\\" placeholder={{curFatTotal}} ></ion-input>\\n      </ion-item>\\n      </ion-list>\\n    </div>\\n\\n\\n  </ion-content>\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n    \\n    \\n      <!-- <ion-card>\\n        <ion-item lines=\\\"inset\\\" *ngFor=\\\"let data of Data\\\">\\n          <ion-label>\\n            <h5 >Date:{{myDate}}</h5>\\n            <h5>CHO:{{data.cho}}</h5>\\n            <h5>Fat:{{data.fat}}</h5>\\n          </ion-label>\\n          <div class=\\\"item-note\\\" item-end>     \\n            <ion-icon name=\\\"trash\\\" style=\\\"zoom:2.0\\\" (click)=\\\"deleteFood(data.id)\\\"></ion-icon>\\n          </div>\\n        </ion-item>\\n      </ion-card>   -->\\n    \\n    \\n      <!-- section of snack end -->\\n\\n   \\n\\n\\n\\n\\n\\n\\n\\n    \\n    \\n<!--       \\n\\n\\n        <ion-list>\\n          <form [formGroup]=\\\"mainForm\\\" (ngSubmit)=\\\"storeData()\\\">\\n          <ion-card *ngFor=\\\"let att of anArray; let i=index\\\" >  \\n            <ion-item-sliding >\\n              <ion-item-options  side=\\\"end\\\">\\n              <ion-button color = \\\"danger\\\" (click)=\\\"removeItem(i)\\\"><ion-icon name=\\\"trash\\\"></ion-icon> Delete</ion-button>\\n            </ion-item-options>\\n              <ion-button class = \\\"savebutton\\\" type=\\\"submit\\\" color=\\\"tertiary\\\"  shape=\\\"block\\\" expand=\\\"block\\\">Save</ion-button>\\n              <ion-item  lines=\\\"none\\\">\\n              <ion-label class=\\\"label\\\"> Food Name</ion-label>\\n              <ion-input  formControlName = \\\"food_name\\\" type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\"Enter\\\" ></ion-input>\\n            </ion-item>\\n          \\n            <ion-item lines=\\\"none\\\">\\n              <ion-label class=\\\"label\\\">Unit</ion-label>\\n              <ion-input  formControlName = \\\"unit\\\" type=\\\"text\\\" required class = \\\"left1\\\" placeholder=\\\"Enter\\\" ></ion-input>\\n              \\n              <ion-label class=\\\"unique\\\">Qty</ion-label>\\n              <ion-input  formControlName = \\\"qty\\\"  type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\"Enter\\\"></ion-input>\\n             \\n            </ion-item>\\n            <ion-item lines=\\\"none\\\" >\\n              \\n              <ion-label class=\\\"label\\\">CHO</ion-label>\\n              <ion-input formControlName = \\\"cho\\\"  type=\\\"text\\\" required class = \\\"left2\\\" placeholder=\\\"Enter\\\"></ion-input>\\n              <ion-label class=\\\"label\\\">Fat</ion-label>\\n              <ion-input formControlName = \\\"fat\\\" type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\"Enter\\\"></ion-input>\\n            </ion-item>\\n          </ion-item-sliding>\\n        \\n          </ion-card>\\n          \\n          \\n        </form >\\n        \\n        </ion-list>\\n        <ion-button  (click)=\\\"Add()\\\" size = \\\"small\\\" class = \\\"center\\\" color=\\\"primary\\\">Add Card </ion-button>\\n        \\n        <ion-list>\\n          <ion-item>\\n            <ion-label class = \\\"label\\\">Evening Meal CHO Sum</ion-label>\\n            <ion-input  class = \\\"right\\\" placeholder={{sum5}} ></ion-input>\\n          </ion-item>\\n          </ion-list>\\n\\n          <ion-list>\\n            <ion-item>\\n              <ion-label class = \\\"label\\\">Evening Meal Fat Sum</ion-label>\\n              <ion-input  class = \\\"right\\\" placeholder={{sum6}} ></ion-input>\\n            </ion-item>\\n            </ion-list>\\n\\n              \\n        <ion-list>\\n          <ion-item>\\n            <ion-label class = \\\"label\\\">Daily CHO Sum</ion-label>\\n            <ion-input  class = \\\"right\\\" placeholder=\\\"Enter\\\" ></ion-input>\\n          </ion-item>\\n          </ion-list>\\n\\n          <ion-list>\\n            <ion-item>\\n              <ion-label class = \\\"label\\\">Daily Fat Sum</ion-label>\\n              <ion-input  class = \\\"right\\\" placeholder=\\\"Enter\\\" ></ion-input>\\n            </ion-item>\\n            </ion-list>\\n            \\n    \\n        \\n          </div> -->\\n        \\n          <!-- <div [hidden]=\\\"type !='snack1'\\\">\\n\\n\\n            <ion-list>\\n              <form [formGroup]=\\\"mainForm\\\" (ngSubmit)=\\\"storeData()\\\">\\n              <ion-card *ngFor=\\\"let att of anArray; let i=index\\\" >  \\n                <ion-item-sliding >\\n                  <ion-item-options  side=\\\"end\\\">\\n                  <ion-button color = \\\"danger\\\" (click)=\\\"removeItem(i)\\\"><ion-icon name=\\\"trash\\\"></ion-icon> Delete</ion-button>\\n                </ion-item-options>\\n                  <ion-button class = \\\"savebutton\\\" type=\\\"submit\\\" color=\\\"tertiary\\\"  shape=\\\"block\\\" expand=\\\"block\\\">Save</ion-button>\\n                  <ion-item  lines=\\\"none\\\">\\n                  <ion-label class=\\\"label\\\"> Food Name</ion-label>\\n                  <ion-input  formControlName = \\\"food_name\\\" type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\"Enter\\\" ></ion-input>\\n                </ion-item>\\n              \\n                <ion-item lines=\\\"none\\\">\\n                  <ion-label class=\\\"label\\\">Unit</ion-label>\\n                  <ion-input  formControlName = \\\"unit\\\" type=\\\"text\\\" required class = \\\"left1\\\" placeholder=\\\"Enter\\\" ></ion-input>\\n                  \\n                  <ion-label class=\\\"unique\\\">Qty</ion-label>\\n                  <ion-input  formControlName = \\\"qty\\\"  type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\"Enter\\\"></ion-input>\\n                 \\n                </ion-item>\\n                <ion-item lines=\\\"none\\\" >\\n                  \\n                  <ion-label class=\\\"label\\\">CHO</ion-label>\\n                  <ion-input formControlName = \\\"cho\\\"  type=\\\"text\\\" required class = \\\"left2\\\" placeholder=\\\"Enter\\\"></ion-input>\\n                  <ion-label class=\\\"label\\\">Fat</ion-label>\\n                  <ion-input formControlName = \\\"fat\\\" type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\"Enter\\\"></ion-input>\\n                </ion-item>\\n              </ion-item-sliding>\\n            \\n              </ion-card>\\n              \\n              \\n            </form >\\n            \\n            </ion-list>\\n            <ion-button  (click)=\\\"Add()\\\" size = \\\"small\\\" class = \\\"center\\\" color=\\\"primary\\\">Add Card </ion-button>\\n            \\n            <ion-list>\\n       \\n                <ion-item>\\n                  <ion-label class = \\\"label\\\">Snack 1 CHO Sum</ion-label>\\n                  <ion-input  class = \\\"right\\\" placeholder={{sum7}} ></ion-input>\\n                </ion-item>\\n                </ion-list>\\n      \\n         \\n    \\n              <ion-list>\\n                <ion-item>\\n                  <ion-label class = \\\"label\\\">Snack 1 Fat Sum</ion-label>\\n                  <ion-input  class = \\\"right\\\" placeholder={{sum8}} ></ion-input>\\n                </ion-item>\\n                </ion-list>\\n    \\n                  \\n            <ion-list>\\n              <ion-item>\\n                <ion-label class = \\\"label\\\">Daily CHO Sum</ion-label>\\n                <ion-input  class = \\\"right\\\" placeholder=\\\"Enter\\\" ></ion-input>\\n              </ion-item>\\n              </ion-list>\\n    \\n              <ion-list>\\n                <ion-item>\\n                  <ion-label class = \\\"label\\\">Daily Fat Sum</ion-label>\\n                  <ion-input  class = \\\"right\\\" placeholder=\\\"Enter\\\" ></ion-input>\\n                </ion-item>\\n              </ion-list>\\n              \\n              </div> -->\\n            \\n<!--             \\n              <div [hidden]=\\\"type !='snack2'\\\">\\n\\n\\n                <ion-list>\\n                  <form [formGroup]=\\\"mainForm\\\" (ngSubmit)=\\\"storeData()\\\">\\n                  <ion-card *ngFor=\\\"let att of anArray; let i=index\\\" >  \\n                    <ion-item-sliding >\\n                      <ion-item-options  side=\\\"end\\\">\\n                      <ion-button color = \\\"danger\\\" (click)=\\\"removeItem(i)\\\"><ion-icon name=\\\"trash\\\"></ion-icon> Delete</ion-button>\\n                    </ion-item-options>\\n                      <ion-button class = \\\"savebutton\\\" type=\\\"submit\\\" color=\\\"tertiary\\\"  shape=\\\"block\\\" expand=\\\"block\\\">Save</ion-button>\\n                      <ion-item  lines=\\\"none\\\">\\n                      <ion-label class=\\\"label\\\"> Food Name</ion-label>\\n                      <ion-input  formControlName = \\\"food_name\\\" type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\"Enter\\\" ></ion-input>\\n                    </ion-item>\\n                  \\n                    <ion-item lines=\\\"none\\\">\\n                      <ion-label class=\\\"label\\\">Unit</ion-label>\\n                      <ion-input  formControlName = \\\"unit\\\" type=\\\"text\\\" required class = \\\"left1\\\" placeholder=\\\"Enter\\\" ></ion-input>\\n                      \\n                      <ion-label class=\\\"unique\\\">Qty</ion-label>\\n                      <ion-input  formControlName = \\\"qty\\\"  type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\"Enter\\\"></ion-input>\\n                     \\n                    </ion-item>\\n                    <ion-item lines=\\\"none\\\" >\\n                      \\n                      <ion-label class=\\\"label\\\">CHO</ion-label>\\n                      <ion-input formControlName = \\\"cho\\\"  type=\\\"text\\\" required class = \\\"left2\\\" placeholder=\\\"Enter\\\"></ion-input>\\n                      <ion-label class=\\\"label\\\">Fat</ion-label>\\n                      <ion-input formControlName = \\\"fat\\\" type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\"Enter\\\"></ion-input>\\n                    </ion-item>\\n                  </ion-item-sliding>\\n                \\n                  </ion-card>\\n                  \\n                  \\n                </form >\\n                \\n                </ion-list>\\n                <ion-button  (click)=\\\"Add()\\\" size = \\\"small\\\" class = \\\"center\\\" color=\\\"primary\\\">Add Card </ion-button>\\n                \\n                <ion-list>\\n                  <ion-item>\\n                    <ion-label class = \\\"label\\\">Snack 2 CHO Sum</ion-label>\\n                    <ion-input  class = \\\"right\\\" placeholder={{sum9}} ></ion-input>\\n                  </ion-item>\\n                  </ion-list>\\n        \\n           \\n      \\n                <ion-list>\\n                  <ion-item>\\n                    <ion-label class = \\\"label\\\">Snack 2 Fat Sum</ion-label>\\n                    <ion-input  class = \\\"right\\\" placeholder={{sum10}} ></ion-input>\\n                  </ion-item>\\n                  </ion-list>\\n      \\n                    \\n              <ion-list>\\n                <ion-item>\\n                  <ion-label class = \\\"label\\\">Daily CHO Sum</ion-label>\\n                  <ion-input  class = \\\"right\\\" placeholder=\\\"Enter\\\" ></ion-input>\\n                </ion-item>\\n                </ion-list>\\n      \\n                <ion-list>\\n                  <ion-item>\\n                    <ion-label class = \\\"label\\\">Daily Fat Sum</ion-label>\\n                    <ion-input  class = \\\"right\\\" placeholder=\\\"Enter\\\" ></ion-input>\\n                  </ion-item>\\n                </ion-list>\\n        \\n                  </div> -->\\n                \\n                  <!-- <div [hidden]=\\\"type !='snack3'\\\">\\n\\n\\n                    <ion-list>\\n                      <form [formGroup]=\\\"mainForm\\\" (ngSubmit)=\\\"storeData()\\\">\\n                      <ion-card *ngFor=\\\"let att of anArray; let i=index\\\" >  \\n                        <ion-item-sliding >\\n                          <ion-item-options  side=\\\"end\\\">\\n                          <ion-button color = \\\"danger\\\" (click)=\\\"removeItem(i)\\\"><ion-icon name=\\\"trash\\\"></ion-icon> Delete</ion-button>\\n                        </ion-item-options>\\n                          <ion-button class = \\\"savebutton\\\" type=\\\"submit\\\" color=\\\"tertiary\\\"  shape=\\\"block\\\" expand=\\\"block\\\">Save</ion-button>\\n                          <ion-item  lines=\\\"none\\\">\\n                          <ion-label class=\\\"label\\\"> Food Name</ion-label>\\n                          <ion-input  formControlName = \\\"food_name\\\" type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\"Enter\\\" ></ion-input>\\n                        </ion-item>\\n                      \\n                        <ion-item lines=\\\"none\\\">\\n                          <ion-label class=\\\"label\\\">Unit</ion-label>\\n                          <ion-input  formControlName = \\\"unit\\\" type=\\\"text\\\" required class = \\\"left1\\\" placeholder=\\\"Enter\\\" ></ion-input>\\n                          \\n                          <ion-label class=\\\"unique\\\">Qty</ion-label>\\n                          <ion-input  formControlName = \\\"qty\\\"  type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\"Enter\\\"></ion-input>\\n                         \\n                        </ion-item>\\n                        <ion-item lines=\\\"none\\\" >\\n                          \\n                          <ion-label class=\\\"label\\\">CHO</ion-label>\\n                          <ion-input formControlName = \\\"cho\\\"  type=\\\"text\\\" required class = \\\"left2\\\" placeholder=\\\"Enter\\\"></ion-input>\\n                          <ion-label class=\\\"label\\\">Fat</ion-label>\\n                          <ion-input formControlName = \\\"fat\\\" type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\"Enter\\\"></ion-input>\\n                        </ion-item>\\n                      </ion-item-sliding>\\n                    \\n                      </ion-card>\\n                      \\n                      \\n                    </form >\\n                    \\n                    </ion-list>\\n                    <ion-button  (click)=\\\"Add()\\\" size = \\\"small\\\" class = \\\"center\\\" color=\\\"primary\\\">Add Card </ion-button>\\n                    \\n                    <ion-list>\\n                      <ion-item>\\n                        <ion-label class = \\\"label\\\">Snack 3 CHO Sum</ion-label>\\n                        <ion-input  class = \\\"right\\\" placeholder={{sum11}} ></ion-input>\\n                      </ion-item>\\n                      </ion-list>\\n            \\n               \\n          \\n                    <ion-list>\\n                      <ion-item>\\n                        <ion-label class = \\\"label\\\">Snack 3 Fat Sum</ion-label>\\n                        <ion-input  class = \\\"right\\\" placeholder={{sum12}} ></ion-input>\\n                      </ion-item>\\n                      </ion-list>\\n          \\n                        \\n                  <ion-list>\\n                    <ion-item>\\n                      <ion-label class = \\\"label\\\">Daily CHO Sum</ion-label>\\n                      <ion-input  class = \\\"right\\\" placeholder=\\\"Enter\\\" ></ion-input>\\n                    </ion-item>\\n                    </ion-list>\\n          \\n                    <ion-list>\\n                      <ion-item>\\n                        <ion-label class = \\\"label\\\">Daily Fat Sum</ion-label>\\n                        <ion-input  class = \\\"right\\\" placeholder=\\\"Enter\\\" ></ion-input>\\n                      </ion-item>\\n                    </ion-list>\\n              \\n            \\n                    \\n                      </div> -->\\n                    \\n\\n                      <!-- <div [hidden]=\\\"type !='others'\\\">\\n\\n\\n                        <ion-list>\\n                          <form [formGroup]=\\\"mainForm\\\" (ngSubmit)=\\\"storeData()\\\">\\n                          <ion-card *ngFor=\\\"let att of anArray; let i=index\\\" >  \\n                            <ion-item-sliding >\\n                              <ion-item-options  side=\\\"end\\\">\\n                              <ion-button color = \\\"danger\\\" (click)=\\\"removeItem(i)\\\"><ion-icon name=\\\"trash\\\"></ion-icon> Delete</ion-button>\\n                            </ion-item-options>\\n                              <ion-button class = \\\"savebutton\\\" type=\\\"submit\\\" color=\\\"tertiary\\\"  shape=\\\"block\\\" expand=\\\"block\\\">Save</ion-button>\\n                              <ion-item  lines=\\\"none\\\">\\n                              <ion-label class=\\\"label\\\"> Food Name</ion-label>\\n                              <ion-input  formControlName = \\\"food_name\\\" type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\"Enter\\\" ></ion-input>\\n                            </ion-item>\\n                          \\n                            <ion-item lines=\\\"none\\\">\\n                              <ion-label class=\\\"label\\\">Unit</ion-label>\\n                              <ion-input  formControlName = \\\"unit\\\" type=\\\"text\\\" required class = \\\"left1\\\" placeholder=\\\"Enter\\\" ></ion-input>\\n                              \\n                              <ion-label class=\\\"unique\\\">Qty</ion-label>\\n                              <ion-input  formControlName = \\\"qty\\\"  type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\"Enter\\\"></ion-input>\\n                             \\n                            </ion-item>\\n                            <ion-item lines=\\\"none\\\" >\\n                              \\n                              <ion-label class=\\\"label\\\">CHO</ion-label>\\n                              <ion-input formControlName = \\\"cho\\\"  type=\\\"text\\\" required class = \\\"left2\\\" placeholder=\\\"Enter\\\"></ion-input>\\n                              <ion-label class=\\\"label\\\">Fat</ion-label>\\n                              <ion-input formControlName = \\\"fat\\\" type=\\\"text\\\" required class = \\\"right\\\" placeholder=\\\"Enter\\\"></ion-input>\\n                            </ion-item>\\n                          </ion-item-sliding>\\n                        \\n                          </ion-card>\\n                          \\n                          \\n                        </form >\\n                        \\n                        </ion-list>\\n                        <ion-button  (click)=\\\"Add()\\\" size = \\\"small\\\" class = \\\"center\\\" color=\\\"primary\\\">Add Card </ion-button>\\n                        \\n                        <ion-list>\\n                          <ion-item>\\n                            <ion-label class = \\\"label\\\">Others CHO Sum</ion-label>\\n                            <ion-input  class = \\\"right\\\" placeholder={{sum13}} ></ion-input>\\n                          </ion-item>\\n                          </ion-list>\\n                \\n                   \\n              \\n                        <ion-list>\\n                          <ion-item>\\n                            <ion-label class = \\\"label\\\">Others Fat Sum</ion-label>\\n                            <ion-input  class = \\\"right\\\" placeholder={{sum14}} ></ion-input>\\n                          </ion-item>\\n                          </ion-list>\\n              \\n                            \\n                      <ion-list>\\n                        <ion-item>\\n                          <ion-label class = \\\"label\\\">Daily CHO Sum</ion-label>\\n                          <ion-input  class = \\\"right\\\" placeholder=\\\"Enter\\\" ></ion-input>\\n                        </ion-item>\\n                        </ion-list>\\n              \\n                        <ion-list>\\n                          <ion-item>\\n                            <ion-label class = \\\"label\\\">Daily Fat Sum</ion-label>\\n                            <ion-input  class = \\\"right\\\" placeholder=\\\"Enter\\\" ></ion-input>\\n                          </ion-item>\\n                        </ion-list>\\n                \\n                        \\n                          </div> -->\\n                        \\n                     \\n                    \\n\\n\\n\\n\\n\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomePage} from './home.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class HomePageRoutingModule {}\n","import { IonicModule } from '@ionic/angular';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { HomePage } from './home.page';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { ExploreContainerComponentModule } from '../explore-container/explore-container.module';\n\nimport { HomePageRoutingModule } from './home-routing.module';\nimport { FoodCardComponent } from '../foodcard/foodcard.component';\nimport { CardComponent } from '../card/card.component';\n\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    ExploreContainerComponentModule,\n    HomePageRoutingModule,\n    ReactiveFormsModule\n  ],\n  declarations: [HomePage,\n  FoodCardComponent,\n  CardComponent\n  ]\n})\nexport class HomePageModule {}\n","export default \"ion-segment-button {\\n  min-width: 115px;\\n}\\n\\n.label {\\n  font-weight: bold;\\n  position: relative;\\n}\\n\\n.unique {\\n  font-weight: bold;\\n  text-align: right;\\n  padding-left: 7px;\\n}\\n\\n.left1 {\\n  text-align: right;\\n  right: 17px;\\n}\\n\\n.left2 {\\n  text-align: right;\\n  right: 24px;\\n}\\n\\n.right {\\n  text-align: right;\\n}\\n\\n.center {\\n  margin-left: auto;\\n  margin-right: auto;\\n  width: 300px;\\n  margin-top: 27px;\\n  display: block !important;\\n}\\n\\n.add {\\n  margin-left: auto;\\n  margin-right: auto;\\n  margin-top: 10px;\\n  height: 30px;\\n  width: 200px;\\n}\\n\\n.time {\\n  margin-left: -15px;\\n  margin-right: auto;\\n  font-weight: bold;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvSG9tZS9ob21lLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGdCQUFnQjtBQUNwQjs7QUFFQTtFQUFPLGlCQUFnQjtFQUNyQixrQkFBa0I7QUFFcEI7O0FBR0E7RUFDRSxpQkFBZ0I7RUFDaEIsaUJBQWlCO0VBQ2pCLGlCQUFpQjtBQUFuQjs7QUFLQTtFQUNJLGlCQUFpQjtFQUNqQixXQUFXO0FBRmY7O0FBS0E7RUFDRSxpQkFBaUI7RUFDakIsV0FBVztBQUZiOztBQU1BO0VBQ0ksaUJBQWlCO0FBSHJCOztBQU9BO0VBQ0UsaUJBQWlCO0VBQ2pCLGtCQUFrQjtFQUNsQixZQUFZO0VBQ1osZ0JBQWdCO0VBQ2hCLHlCQUF5QjtBQUozQjs7QUFPQTtFQUNFLGlCQUFpQjtFQUNqQixrQkFBa0I7RUFDbEIsZ0JBQWdCO0VBQ2hCLFlBQVk7RUFDWixZQUFZO0FBSmQ7O0FBT0E7RUFDRSxrQkFBa0I7RUFDbEIsa0JBQWtCO0VBQ2xCLGlCQUdGO0FBUEEiLCJmaWxlIjoic3JjL2FwcC9Ib21lL2hvbWUucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLXNlZ21lbnQtYnV0dG9ue1xuICAgIG1pbi13aWR0aDogMTE1cHg7XG59XG5cbi5sYWJlbHtmb250LXdlaWdodDpib2xkO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgXG59XG5cbi51bmlxdWUge1xuICBmb250LXdlaWdodDpib2xkO1xuICB0ZXh0LWFsaWduOiByaWdodDtcbiAgcGFkZGluZy1sZWZ0OiA3cHg7XG5cbn1cblxuXG4ubGVmdDEge1xuICAgIHRleHQtYWxpZ246IHJpZ2h0O1xuICAgIHJpZ2h0OiAxN3B4O1xufVxuXG4ubGVmdDIge1xuICB0ZXh0LWFsaWduOiByaWdodDtcbiAgcmlnaHQ6IDI0cHg7XG59XG5cblxuLnJpZ2h0IHtcbiAgICB0ZXh0LWFsaWduOiByaWdodDtcbiAgICBcbn1cblxuLmNlbnRlcntcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gIG1hcmdpbi1yaWdodDogYXV0bztcbiAgd2lkdGg6IDMwMHB4O1xuICBtYXJnaW4tdG9wOiAyN3B4O1xuICBkaXNwbGF5OiBibG9jayAhaW1wb3J0YW50O1xufVxuXG4uYWRke1xuICBtYXJnaW4tbGVmdDogYXV0bztcbiAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xuICBtYXJnaW4tdG9wOiAxMHB4O1xuICBoZWlnaHQ6IDMwcHg7XG4gIHdpZHRoOiAyMDBweDtcbn1cblxuLnRpbWV7XG4gIG1hcmdpbi1sZWZ0OiAtMTVweDtcbiAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xuICBmb250LXdlaWdodDpib2xkXG4gIFxuXG59Il19 */\";","import { Component, Input, OnInit, ViewChild} from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { FormGroup, FormBuilder, FormControl } from \"@angular/forms\";\nimport { Dailyfoodservice } from './../services/dailyfood.service';\nimport { ToastController } from '@ionic/angular';\nimport { Router } from \"@angular/router\";\nimport { RecordService } from '../services/record.service';\nimport { DatabaseService } from '../services/database.service';\nimport { Record } from '../services/food';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: 'home.page.html',\n  styleUrls: ['home.page.scss']\n})\n\nexport class HomePage { \n\n\n  @ViewChild(\"choinput\") choinput;\n  mainForm: FormGroup;\n  Data: any[] = []\n  public curChoBreakfast=0;\n  public curFatBreakfast=0;\n  public curChoLunch=0;\n  public curFatLunch=0;\n  public curChoDinner=0;\n  public curFatDinner=0;\n  public curChoSnack1=0;\n  public curFatSnack1=0;\n  public curChoSnack2=0;\n  public curFatSnack2=0;\n  public curChoSnack3=0;\n  public curFatSnack3=0;\n  public curChoOthers=0;\n  public curFatOthers=0;\n  public curChoTotal=0;\n  public curFatTotal=0;\n\n\n  public anArrayBreakfast:any=[];\n  public anArrayLunch:any=[];\n  public anArrayDinner:any=[];\n  public anArraySnack1:any=[];\n  public anArraySnack2:any=[];\n  public anArraySnack3:any=[];\n  public anArrayOthers:any=[];\n\n   myDate = new Date().toISOString().split('T')[0];\n   type: string\n\n  jsonData:any=[];\n \n\n\n  foodCardForm = new FormGroup({\n  food_name: new FormControl(''),\n  category: new FormControl(''),\n  unit: new FormControl(''),\n  qty: new FormControl(''),\n  cho: new FormControl(''),\n  fat: new FormControl(''),\n});\n\n\n\n\npublic map:  Map<string, FormGroup> = new Map();\n  constructor(\n    \n    private dbservice: DatabaseService, \n    private http: HttpClient,\n    private db: Dailyfoodservice,\n    private dailyrecorddb: RecordService,\n    public formBuilder: FormBuilder,\n    private toast: ToastController,\n    private router: Router,    \n\n    )\n   { \n    //this.initializeJsonData();\n    this.type = 'breakfast';\n\n  }\n\n\n  initializeJsonData()\n  {\n     this.jsonData = [\n        {\n            name: \"apple\",\n            cho: \"1001\"\n        },\n        {\n          name: \"banana\",\n          cho: \"1003\"\n        },\n       {\n        name: \"waffle\",\n        cho: \"1002\"\n       },\n     ]\n  }\n\n  \n\n  filterJsonData(ev:any){\n    //filt out json food methed with user input.\n    this.initializeJsonData();\n    document.getElementById(\"choinput\").focus();\n    const val = ev.target.value;\n    if(val && val.trim() != ''){\n      this.jsonData = this.jsonData.filter((object) => {\n        return (object.name.toLowerCase().indexOf(val.toLowerCase())>-1);\n      })\n    }\n\n  }\n\n  selectVal(){\n   console.log(\"check\")\n  }\n\n  onclickJson(){\n    // after choosing one food, auto complete other field cho/fat.\n    // let cho = 9;\n    // let fat = 10;\n    // document.getElementById(\"choinput\").setAttribute('value', \"\" + cho);\n    // document.getElementById(\"fatinput\").innerText = \"\" + fat;\n  }\n\n\n\n\n\n  // segmentc change method\n  segmentChanged(ev: any) {}\n\n   // section for remove and delete \n\n   removeItemBreakfast(i){\n    for(let j = 0; j < this.anArrayBreakfast.length; j++) {\n\n      if(j == i){\n        let j_uuid = this.myDate + \"_Breakfast_\" + (String)(this.anArrayBreakfast[j].food_name).toLowerCase().replace(/\\-/g, \" \").replace( /\\s+/g, \"\") //remove spaces;\n        this.anArrayBreakfast.splice(j, 1);\n        this.dbdeleteFood(j_uuid);\n      }\n    }\n    this.analyzeChoAndFatBreakfast();\n    this.analyzeChoAndFatTotal()\n  }\n\n  removeItemLunch(i){\n   for(let j = 0; j < this.anArrayLunch.length; j++) {\n     if(j == i){\n      let j_uuid = this.myDate + \"_Lunch_\" + (String)(this.anArrayLunch[j].food_name).toLowerCase().replace(/\\-/g, \" \").replace( /\\s+/g, \"\") //remove spaces;\n      this.anArrayLunch.splice(j, 1);\n      this.dbdeleteFood(j_uuid);\n    \n     }\n   }\n   this.analyzeChoAndFatLunch();\n   this.analyzeChoAndFatTotal()\n }\n\n removeItemDinner(i){\n for(let j = 0; j < this.anArrayDinner.length; j++) {\n    if(j == i){\n    let j_uuid = this.myDate + \"_Dinner_\" + (String)(this.anArrayDinner[j].food_name).toLowerCase().replace(/\\-/g, \" \").replace( /\\s+/g, \"\") //remove spaces;\n    this.anArrayDinner.splice(j, 1);\n    this.dbdeleteFood(j_uuid);\n   }\n }\n this.analyzeChoAndFatDinner();\n this.analyzeChoAndFatTotal()\n}\n\nremoveItemSnack1(i){\n for(let j = 0; j < this.anArraySnack1.length; j++) {\n  if(j == i){\n    let j_uuid = this.myDate + \"_Snack1_\" + (String)(this.anArraySnack1[j].food_name).toLowerCase().replace(/\\-/g, \" \").replace( /\\s+/g, \"\") //remove spaces;\n    this.anArraySnack1.splice(j, 1);\n    this.dbdeleteFood(j_uuid);\n   }\n }\n this.analyzeChoAndFatSnack1();\n this.analyzeChoAndFatTotal()\n}\n\nremoveItemSnack2(i){\n for(let j = 0; j < this.anArraySnack2.length; j++) {\n  if(j == i){\n    let j_uuid = this.myDate + \"_Snack2_\" + (String)(this.anArraySnack2[j].food_name).toLowerCase().replace(/\\-/g, \" \").replace( /\\s+/g, \"\") //remove spaces;\n    this.anArraySnack2.splice(j, 1);\n    this.dbdeleteFood(j_uuid);\n   }\n   \n }\n this.analyzeChoAndFatSnack2();\n this.analyzeChoAndFatTotal()\n}\n\nremoveItemSnack3(i){\n for(let j = 0; j < this.anArraySnack3.length; j++) {\n  if(j == i){\n    let j_uuid = this.myDate + \"_Snack3_\" + (String)(this.anArraySnack3[j].food_name).toLowerCase().replace(/\\-/g, \" \").replace( /\\s+/g, \"\") //remove spaces;\n    this.anArraySnack3.splice(j, 1);\n    this.dbdeleteFood(j_uuid);\n   }\n }\n this.analyzeChoAndFatSnack3();\n this.analyzeChoAndFatTotal()\n}\n\nremoveItemOthers(i){\n for(let j = 0; j < this.anArrayOthers.length; j++) {\n  if(j == i){\n    let j_uuid = this.myDate + \"_Others_\" + (String)(this.anArrayOthers[j].food_name).toLowerCase().replace(/\\-/g, \" \").replace( /\\s+/g, \"\") //remove spaces;\n    this.anArrayOthers.splice(j, 1);\n    this.dbdeleteFood(j_uuid);\n   }\n }\n this.analyzeChoAndFatOthers();\n this.analyzeChoAndFatTotal()\n}\n\n\n  dbdeleteFood(uuid){\n    this.db.deleteFood(uuid).then(async(res) => {\n      let toast = await this.toast.create({\n        message: 'Food deleted',\n        duration: 2500\n      });\n      toast.present();      \n    })\n  }\n  \n\n\n\n   // section for saving and adding\n    onSaveBreakfast(){\n      this.analyzeChoAndFatBreakfast();\n      this.analyzeChoAndFatTotal()\n      this.map[this.foodCardForm.controls['food_name'].value] = this.foodCardForm.value;\n  \n    }\n\n   onSaveLunch(){\n   this.analyzeChoAndFatLunch();\n   this.analyzeChoAndFatTotal()\n   this.map[this.foodCardForm.controls['food_name'].value] = this.foodCardForm.value;\n\n  }\n   onSaveDinner(){\n   this.analyzeChoAndFatDinner();\n   this.analyzeChoAndFatTotal()\n   this.map[this.foodCardForm.controls['food_name'].value] = this.foodCardForm.value;\n\n  }\n\n     onSaveSnack1(){\n     this.analyzeChoAndFatSnack1();\n     this.analyzeChoAndFatTotal()\n     this.map[this.foodCardForm.controls['food_name'].value] = this.foodCardForm.value;\n\n    }\n\n\n    onSaveSnack2(){\n      this.analyzeChoAndFatSnack2();\n      this.analyzeChoAndFatTotal()\n      this.map[this.foodCardForm.controls['food_name'].value] = this.foodCardForm.value;\n\n     }\n\n  \n\n\n    onSaveSnack3(){\n      this.analyzeChoAndFatSnack3();\n      this.analyzeChoAndFatTotal()\n      this.map[this.foodCardForm.controls['food_name'].value] = this.foodCardForm.value;\n     }\n\n\n\n    onSaveOthers(){\n      this.analyzeChoAndFatOthers();\n      this.analyzeChoAndFatTotal()\n      this.map[this.foodCardForm.controls['food_name'].value] = this.foodCardForm.value;\n     }\n\n\n  AddBreakfast(){\n    let number = this.anArrayBreakfast.length + 1\n    let currentFood = {\n      food_name: this.foodCardForm.controls['food_name'].value,\n      category:this.foodCardForm.controls['category'].value,\n      unit: this.foodCardForm.controls['unit'].value,\n      qty: this.foodCardForm.controls['qty'].value,\n      cho: this.foodCardForm.controls['cho'].value,\n      fat: this.foodCardForm.controls['fat'].value,\n    }\n\n    this.anArrayBreakfast.push(currentFood);\n    this.analyzeChoAndFatBreakfast();\n    this.analyzeChoAndFatTotal()\n    this.ResetBreakfast();\n  }\n\n  AddLunch(){\n\n    let number = this.anArrayLunch.length + 1\n    let currentFood = {\n      food_name: this.foodCardForm.controls['food_name'].value,\n      category:this.foodCardForm.controls['category'].value,\n      unit: this.foodCardForm.controls['unit'].value,\n      qty: this.foodCardForm.controls['qty'].value,\n      cho: this.foodCardForm.controls['cho'].value,\n      fat: this.foodCardForm.controls['fat'].value,\n    }\n    this.anArrayLunch.push(currentFood);\n    this.analyzeChoAndFatLunch();\n    this.analyzeChoAndFatTotal()\n    this.ResetLunch();\n  }\n  \n  AddDinner(){\n    let number = this.anArrayDinner.length + 1\n    let currentFood = {\n      food_name: this.foodCardForm.controls['food_name'].value,\n      category:this.foodCardForm.controls['category'].value,\n      unit: this.foodCardForm.controls['unit'].value,\n      qty: this.foodCardForm.controls['qty'].value,\n      cho: this.foodCardForm.controls['cho'].value,\n      fat: this.foodCardForm.controls['fat'].value,\n    }\n    this.anArrayDinner.push(currentFood);\n    this.analyzeChoAndFatDinner();\n    this.analyzeChoAndFatTotal()\n    this.ResetDinner();\n  }\n\n  AddSnack1(){\n    let number = this.anArraySnack1.length + 1\n    let currentFood = {\n      food_name: this.foodCardForm.controls['food_name'].value,\n      category:this.foodCardForm.controls['category'].value,\n      unit: this.foodCardForm.controls['unit'].value,\n      qty: this.foodCardForm.controls['qty'].value,\n      cho: this.foodCardForm.controls['cho'].value,\n      fat: this.foodCardForm.controls['fat'].value,\n    }\n    this.anArraySnack1.push(currentFood);\n    this.analyzeChoAndFatSnack1();\n    this.analyzeChoAndFatTotal()\n    this.ResetSnack1();\n  }\n  \n\n  AddSnack2(){\n    let number = this.anArraySnack2.length + 1\n    let currentFood = {\n      food_name: this.foodCardForm.controls['food_name'].value,\n      category:this.foodCardForm.controls['category'].value,\n      unit: this.foodCardForm.controls['unit'].value,\n      qty: this.foodCardForm.controls['qty'].value,\n      cho: this.foodCardForm.controls['cho'].value,\n      fat: this.foodCardForm.controls['fat'].value,\n    }\n    this.anArraySnack2.push(currentFood);\n    this.analyzeChoAndFatSnack2();\n    this.analyzeChoAndFatTotal()\n    this.ResetSnack2();\n  }\n\n\n  AddSnack3(){\n    let number = this.anArraySnack3.length + 1\n    let currentFood = {\n      food_name: this.foodCardForm.controls['food_name'].value,\n      category:this.foodCardForm.controls['category'].value,\n      unit: this.foodCardForm.controls['unit'].value,\n      qty: this.foodCardForm.controls['qty'].value,\n      cho: this.foodCardForm.controls['cho'].value,\n      fat: this.foodCardForm.controls['fat'].value,\n    }\n    this.anArraySnack3.push(currentFood);\n    this.analyzeChoAndFatSnack3();\n    this.analyzeChoAndFatTotal()\n    this.ResetSnack3();\n  }\n\n  AddOthers(){\n    let number = this.anArrayOthers.length + 1\n    let currentFood = {\n      food_name: this.foodCardForm.controls['food_name'].value,\n      category:this.foodCardForm.controls['category'].value,\n      unit: this.foodCardForm.controls['unit'].value,\n      qty: this.foodCardForm.controls['qty'].value,\n      cho: this.foodCardForm.controls['cho'].value,\n      fat: this.foodCardForm.controls['fat'].value,\n    }\n    this.anArrayOthers.push(currentFood);\n    this.analyzeChoAndFatOthers();\n    this.analyzeChoAndFatTotal()\n    this.ResetOthers();\n  }\n\n   ResetBreakfast(){\n    this.foodCardForm = new FormGroup({\n      food_name: new FormControl(''),\n      category: new FormControl(''),\n      unit: new FormControl(''),\n      qty: new FormControl(''),\n      cho: new FormControl(''),\n      fat: new FormControl(''),\n    });\n    this.mainForm = this.formBuilder.group({\n      food_name: [''],\n      category:[''],\n      unit: [''],\n      qty: [''],\n      cho: [''],\n      fat: [''],\n    })\n   }\n\n\n   ResetLunch(){\n    this.foodCardForm = new FormGroup({\n      food_name: new FormControl(''),\n      category: new FormControl(''),\n      unit: new FormControl(''),\n      qty: new FormControl(''),\n      cho: new FormControl(''),\n      fat: new FormControl(''),\n    });\n    this.mainForm = this.formBuilder.group({\n      food_name: [''],\n      category:[''],\n      unit: [''],\n      qty: [''],\n      cho: [''],\n      fat: [''],\n    })\n   }\n\n   ResetDinner(){\n    this.foodCardForm = new FormGroup({\n      food_name: new FormControl(''),\n      category: new FormControl(''),\n      unit: new FormControl(''),\n      qty: new FormControl(''),\n      cho: new FormControl(''),\n      fat: new FormControl(''),\n    });\n    this.mainForm = this.formBuilder.group({\n      food_name: [''],\n      category:[''],\n      unit: [''],\n      qty: [''],\n      cho: [''],\n      fat: [''],\n    })\n   }\n\n\n   ResetSnack1(){\n    this.foodCardForm = new FormGroup({\n      food_name: new FormControl(''),\n      category: new FormControl(''),\n      unit: new FormControl(''),\n      qty: new FormControl(''),\n      cho: new FormControl(''),\n      fat: new FormControl(''),\n    });\n    this.mainForm = this.formBuilder.group({\n      food_name: [''],\n      category:[''],\n      unit: [''],\n      qty: [''],\n      cho: [''],\n      fat: [''],\n    })\n   }\n\n   ResetSnack2(){\n    this.foodCardForm = new FormGroup({\n      food_name: new FormControl(''),\n      category: new FormControl(''),\n      unit: new FormControl(''),\n      qty: new FormControl(''),\n      cho: new FormControl(''),\n      fat: new FormControl(''),\n    });\n    this.mainForm = this.formBuilder.group({\n      food_name: [''],\n      category:[''],\n      unit: [''],\n      qty: [''],\n      cho: [''],\n      fat: [''],\n    })\n   }\n\n   ResetSnack3(){\n    this.foodCardForm = new FormGroup({\n      food_name: new FormControl(''),\n      category: new FormControl(''),\n      unit: new FormControl(''),\n      qty: new FormControl(''),\n      cho: new FormControl(''),\n      fat: new FormControl(''),\n    });\n    this.mainForm = this.formBuilder.group({\n      food_name: [''],\n      category:[''],\n      unit: [''],\n      qty: [''],\n      cho: [''],\n      fat: [''],\n    })\n   }\n\n   ResetOthers(){\n    this.foodCardForm = new FormGroup({\n      food_name: new FormControl(''),\n      category: new FormControl(''),\n      unit: new FormControl(''),\n      qty: new FormControl(''),\n      cho: new FormControl(''),\n      fat: new FormControl(''),\n    });\n    this.mainForm = this.formBuilder.group({\n      food_name: [''],\n      category:[''],\n      unit: [''],\n      qty: [''],\n      cho: [''],\n      fat: [''],\n    })\n   }\n\n\n    storeToDatabase(){\n\n      for (var val of this.anArrayBreakfast) {\n        let uniqueKey = this.myDate + \"_Breakfast_\" + (String)(val.food_name).toLowerCase().replace(/\\-/g, \" \").replace( /\\s+/g, \"\") //remove spaces;\n        //this uniqueKey is generated with date, category and food type(all remove space and camelcase), which will be unique in sql as key.\n        this.db.addFood(\n          uniqueKey,\n          this.myDate,\n           \"BreakFast\",\n           val.food_name,\n           val.unit,\n           val.qty,\n           val.cho,\n           val.fat\n        ).then((res) => {\n    \n        })\n      }\n\n      for (var val of this.anArrayLunch) {\n        let uniqueKey = this.myDate + \"_Lunch_\" + (String)(val.food_name).toLowerCase().replace(/\\-/g, \" \").replace( /\\s+/g, \"\") //remove spaces;\n        //this uniqueKey is generated with date, category and food type(all remove space and camelcase), which will be unique in sql as key.\n        this.db.addFood(\n          uniqueKey,\n          this.myDate,\n           \"Lunch\",\n           val.food_name,\n           val.unit,\n           val.qty,\n           val.cho,\n           val.fat\n        ).then((res) => {\n    \n        })\n      }\n\n      for (var val of this.anArrayDinner) {\n        let uniqueKey = this.myDate + \"_Dinner_\" + (String)(val.food_name).toLowerCase().replace(/\\-/g, \" \").replace( /\\s+/g, \"\") //remove spaces;\n        //this uniqueKey is generated with date, category and food type(all remove space and camelcase), which will be unique in sql as key.\n        this.db.addFood(\n          uniqueKey,\n          this.myDate,\n           \"Dinner\",\n           val.food_name,\n           val.unit,\n           val.qty,\n           val.cho,\n           val.fat\n        ).then((res) => {\n    \n        })\n      }\n\n      for (var val of this.anArraySnack1) {\n        let uniqueKey = this.myDate + \"_Snack1_\" + (String)(val.food_name).toLowerCase().replace(/\\-/g, \" \").replace( /\\s+/g, \"\") //remove spaces;\n        //this uniqueKey is generated with date, category and food type(all remove space and camelcase), which will be unique in sql as key.\n        this.db.addFood(\n          uniqueKey,\n          this.myDate,\n           \"Snack1\",\n           val.food_name,\n           val.unit,\n           val.qty,\n           val.cho,\n           val.fat\n        ).then((res) => {\n    \n        })\n      }\n\n\n      for (var val of this.anArraySnack2) {\n        let uniqueKey = this.myDate + \"_Snack2_\" + (String)(val.food_name).toLowerCase().replace(/\\-/g, \" \").replace( /\\s+/g, \"\") //remove spaces;\n        //this uniqueKey is generated with date, category and food type(all remove space and camelcase), which will be unique in sql as key.\n        this.db.addFood(\n          uniqueKey,\n          this.myDate,\n           \"Snack2\",\n           val.food_name,\n           val.unit,\n           val.qty,\n           val.cho,\n           val.fat\n        ).then((res) => {\n    \n        })\n      }\n\n\n      for (var val of this.anArraySnack3) {\n        let uniqueKey = this.myDate + \"_Snack3_\" + (String)(val.food_name).toLowerCase().replace(/\\-/g, \" \").replace( /\\s+/g, \"\") //remove spaces;\n        //this uniqueKey is generated with date, category and food type(all remove space and camelcase), which will be unique in sql as key.\n        this.db.addFood(\n          uniqueKey,\n          this.myDate,\n           \"Snack3\",\n           val.food_name,\n           val.unit,\n           val.qty,\n           val.cho,\n           val.fat\n        ).then((res) => {\n    \n        })\n      }\n\n      for (var val of this.anArrayOthers) {\n        let uniqueKey = this.myDate + \"_Others_\" + (String)(val.food_name).toLowerCase().replace(/\\-/g, \" \").replace( /\\s+/g, \"\") //remove spaces;\n        //this uniqueKey is generated with date, category and food type(all remove space and camelcase), which will be unique in sql as key.\n        this.db.addFood(\n          uniqueKey,\n          this.myDate,\n           \"Others\",\n           val.food_name,\n           val.unit,\n           val.qty,\n           val.cho,\n           val.fat\n        ).then((res) => {\n    \n        })\n      }\n\n\n     this.dailyrecorddb.addRecord( this.myDate ,this.curChoTotal,this.curFatTotal);\n\n \n        this.dailyrecorddb.fetchRecords().subscribe(item => {\n          this.Data = item\n          for (let i =0; i <= item.length; i++) \n          {console.log('james itemp2：' + item[i].id);}\n          \n        });\n    \n  }\n    \n\n    \n\n    // analyzing part:\n    analyzeChoAndFatBreakfast(){\n      this.curChoBreakfast = 0;\n      this.curFatBreakfast = 0;\n        this.anArrayBreakfast.forEach(element => {\n          this.curChoBreakfast = this.curChoBreakfast + Number(element.cho);\n          this.curFatBreakfast = this.curFatBreakfast + Number(element.fat);\n        });\n        }\n\n        analyzeChoAndFatLunch(){\n          this.curChoLunch = 0;\n          this.curFatLunch = 0;\n            this.anArrayLunch.forEach(element => {\n              this.curChoLunch = this.curChoLunch + Number(element.cho);\n              this.curFatLunch = this.curFatLunch + Number(element.fat);\n            });\n            }\n\n        analyzeChoAndFatDinner(){\n      this.curChoDinner = 0;\n      this.curFatDinner = 0;\n        this.anArrayDinner.forEach(element => {\n          this.curChoDinner = this.curChoDinner + Number(element.cho);\n          this.curFatDinner = this.curFatDinner + Number(element.fat);\n        });\n        }\n\n        analyzeChoAndFatSnack1(){\n      this.curChoSnack1 = 0;\n      this.curFatSnack1 = 0;\n        this.anArraySnack1.forEach(element => {\n          this.curChoSnack1 = this.curChoSnack1 + Number(element.cho);\n          this.curFatSnack1 = this.curFatSnack1 + Number(element.fat);\n        });\n        }\n\n      \n        analyzeChoAndFatSnack2(){\n          this.curChoSnack2 = 0;\n          this.curFatSnack2 = 0;\n            this.anArraySnack2.forEach(element => {\n              this.curChoSnack2 = this.curChoSnack2 + Number(element.cho);\n              this.curFatSnack2 = this.curFatSnack2 + Number(element.fat);\n            });\n            }\n\n        analyzeChoAndFatSnack3(){\n          this.curChoSnack3 = 0;\n          this.curFatSnack3 = 0;\n            this.anArraySnack3.forEach(element => {\n              this.curChoSnack3 = this.curChoSnack3 + Number(element.cho);\n              this.curFatSnack3 = this.curFatSnack3 + Number(element.fat);\n            });\n            }\n    \n        analyzeChoAndFatOthers(){\n          this.curChoOthers = 0;\n          this.curFatOthers = 0;\n            this.anArrayOthers.forEach(element => {\n              this.curChoOthers = this.curChoOthers + Number(element.cho);\n              this.curFatOthers = this.curFatOthers + Number(element.fat);\n            });\n            }\n        \n\n\n        analyzeChoAndFatTotal(){\n          this.curChoTotal = 0;\n          this.curFatTotal = 0;\n          this.curChoTotal=this.curChoBreakfast+this.curChoLunch+this.curChoDinner+this.curChoSnack1+this.curChoSnack2+this.curChoSnack3+this.curChoOthers;\n          this.curFatTotal=this.curFatBreakfast+this.curFatLunch+this.curFatDinner+this.curFatSnack1+this.curFatSnack2+this.curFatSnack3+this.curFatOthers;\n        \n        }\n\n\n  }\n  \n  \n  \n  \n\n\n\n\n\n// pod useful command: 🍓\n// https://github.com/ionic-team/capacitor/issues/1676\n// https://github.com/ionic-team/capacitor/issues/1755\n// sudo npm install -g cordova ionic\n// /Users/kaiyanliu/Desktop/diet-application/ios/App\n// kaiyanliu@Kaiyans-iMac App % ls\n// App\t\tApp.xcodeproj\tApp.xcworkspace\tPodfile\t\tPodfile.lock\tPods\t\tpublic\n// kaiyanliu@Kaiyans-iMac App % \n\n\n\n  // section for database\n\n\n    // storeData() {\n      // this.db.addFood(\n      //   this.myDate,\n      //   this.mainForm.value.category,\n      //   this.mainForm.value.food_name,\n      //   this.mainForm.value.unit,\n      //   this.mainForm.value.qty,\n      //   this.mainForm.value.cho,\n      //   this.mainForm.value.fat\n      // ).then((res) => {\n  \n      // })\n\n\n      // console.log(\"this.db.food????   \" + this.db.getFoods());\n      // this.db.addFood(\n      //   08022029,\n      //   \"this.mainForm.value.category\",\n      //   \"this.mainForm.value.food_name\",\n      //   \"this.mainForm.value.unit\",\n      //   \"this.mainForm.value.qty\",\n      //   \"this.mainForm.value.cho\",\n      //   \"this.mainForm.value.fat\"\n      // ).then((res) => {\n  \n      // })\n\n    // }\n\n\n  \n  \n  \n\n\n\n\n\n\n\n\n","import { Injectable } from '@angular/core';\nimport { Food } from './food';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { SQLitePorter } from '@ionic-native/sqlite-porter/ngx';\nimport { DatabaseService } from '../services/database.service';\n\n@Injectable({\n  providedIn: 'root'    \n})\n\nexport class Dailyfoodservice {\n  foodsList = new BehaviorSubject([]);\n \n\n  constructor( \n    private dbservice: DatabaseService, \n    private httpClient: HttpClient,\n    private sqlPorter: SQLitePorter\n   \n  ) {}\n\n\n \n  fetchFoods(): Observable<Food[]> {\n    return this.foodsList.asObservable();\n  }\n\n\n\n  // Render data\n  getData() {\n    this.httpClient.get(\n      'assets/data.sql', \n      {responseType: 'text'}\n    ).subscribe(data => {\n      this.sqlPorter.importSqlToDb(this.dbservice.getdb(), data)\n        .then(_ => {\n          this.getFoods();\n          this.dbservice.getDbReady().next(true);\n        })\n        .catch(error => console.error(error));\n    });\n  }\n\n  // Get list\n  getFoods(){\n    return this.dbservice.getdb().executeSql('SELECT * FROM dailyfoodtable', []).then(res => {\n      let items: Food[] = [];\n      if (res.rows.length > 0) {\n        for (var i = 0; i < res.rows.length; i++) { \n          items.push({ \n            id: res.rows.item(i).id,\n            uuid: res.rows.item(i).uuid,\n            timeframe: res.rows.item(i).timeframe,  \n            category: res.rows.item(i).category,\n            food_name: res.rows.item(i).food_name,  \n            unit: res.rows.item(i).unit,  \n            qty: res.rows.item(i).qty, \n            cho: res.rows.item(i).cho, \n            fat: res.rows.item(i).fat\n           });\n        }\n      }\n      this.foodsList.next(items);\n    });\n  }\n\n  // Add\n  addFood(uuid, timeframe, category, food_name, unit,qty,cho,fat) {\n    let data = [ uuid, timeframe, category, food_name, unit,qty,cho,fat];\n    console.log('lol2' + data)\n  \n    return this.dbservice.getdb().executeSql('INSERT INTO dailyfoodtable (uuid, timeframe, category, food_name, unit,qty,cho,fat) VALUES (?, ?, ?, ?, ?, ?, ?,?)', data)\n    .then(res => {\n      this.getFoods();\n    });\n\n  }\n \n  // Get single object\n  getFood(id): Promise<Food> {\n    return this.dbservice.getdb().executeSql('SELECT * FROM dailyfoodtable WHERE id = ?', [id]).then(res => { \n      return {\n        id: res.rows.item(0).id,\n        uuid: res.rows.item(0).uuid,\n        timeframe: res.rows.item(0).timeframe,\n        category: res.rows.item(0).category,\n        food_name: res.rows.item(0).food_name,  \n        unit: res.rows.item(0).unit,  \n        qty: res.rows.item(0).qty, \n        cho: res.rows.item(0).cho, \n        fat: res.rows.item(0).fat\n      }\n    });\n  }\n\n\n  // Delete\n  deleteFood(uuid) {\n    var q =  \"DELETE FROM dailyfoodtable WHERE uuid = \" +'\"' + uuid + '\"';\n    return this.dbservice.getdb().executeSql(q)\n    .then(_ => {\n      this.getFoods();\n    });\n  }\n\n\n}\n\n    // Update\n  // updateFood(id, food: Food) {\n  //   let data = [food.timeframe, food.category, food.food_name, food.unit,food.qty,food.cho,food.fat ];\n  //   return this.storage.executeSql(`UPDATE dailyfoodtable SET, timeframe=?, food_name = ?, unit = ? qty = ?, cho=?, fat=? WHERE id = ${id}`, data)\n  //   .then(data => {\n  //     this.getFoods();\n  //   })\n  // }\n"]}