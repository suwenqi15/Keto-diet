{"version":3,"sources":["./src/app/Record/record.page.html","./src/app/Record/record-routing.module.ts","./src/app/Record/record.module.ts","./src/app/Record/record.page.scss","./src/app/Record/record.page.ts"],"names":[],"mappings":"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","file":"Record-record-module-es2015.js","sourcesContent":["export default \"\\n\\n   <ion-header [translucent]=\\\"true\\\">\\n    <ion-toolbar>\\n      <ion-title>\\n        Diet Record\\n      </ion-title>\\n    </ion-toolbar>\\n  </ion-header>\\n\\n <ion-content>\\n  <ion-segment [(ngModel)]=\\\"selectTabs\\\" color=\\\"primary\\\" >\\n   <ion-segment-button value=\\\"table view\\\">\\n     <ion-label>Table View</ion-label>\\n     <ion-icon name=\\\"calendar-outline\\\"></ion-icon>\\n   </ion-segment-button>\\n   <ion-segment-button value=\\\"chart\\\">\\n     <ion-label>Chart</ion-label>\\n     <ion-icon name=\\\"bar-chart-outline\\\"></ion-icon>\\n   </ion-segment-button>\\n   <ion-segment-button value=\\\"export\\\">\\n     <ion-label>Export</ion-label>\\n     <ion-icon name=\\\"exit-outline\\\"></ion-icon>\\n   </ion-segment-button>\\n </ion-segment>\\n <div [hidden]=\\\"selectTabs != 'table view'\\\">\\n\\n\\n  <!-- pagination -->\\n\\n  <!-- <ion-button  (click)=\\\"loaddb()\\\" size = \\\"small\\\" class = \\\"center\\\" color=\\\"primary\\\">Load From Database</ion-button> -->\\n\\n  <ion-grid>\\n  <ion-row class=\\\"header-row\\\">\\n   \\n  \\n    <ion-col size=\\\"4\\\" class =\\\"label\\\">\\n      Date\\n    </ion-col>\\n    <ion-col size=\\\"4\\\" class =\\\"label\\\">\\n     Daily CHO\\n    </ion-col>\\n    <ion-col size=\\\"4\\\" class =\\\"label\\\">\\n     Daily Fat\\n    </ion-col>\\n  </ion-row>\\n\\n\\n\\n\\n\\n\\n  <ion-row *ngFor=\\\"let item of Data; let i = index;\\\" class=\\\"data-row\\\" >\\n    \\n    <ion-col size=\\\"4\\\" class =\\\"textlabel\\\">\\n      {{ item.timeframe }}\\n    </ion-col>\\n    <ion-col size=\\\"4\\\" class =\\\"textlabel\\\" >\\n      {{ item.dailycho  }}\\n    </ion-col>\\n    <ion-col size=\\\"4\\\" class =\\\"textlabel\\\">\\n      {{ item.dailyfat}}\\n    </ion-col>\\n    \\n  </ion-row>\\n\\n  <ion-row>\\n    <ion-col size=\\\"12\\\" class=\\\"ion-text-center\\\">\\n      {{ page + 1 }} of {{ totalPages }}\\n    </ion-col>\\n  </ion-row>\\n  \\n\\n  \\n  <ion-row>\\n    <ion-col size=\\\"2\\\">\\n      <ion-button fill=\\\"clear\\\" (click)=\\\"goFirst()\\\">\\n        <ion-icon name=\\\"play-back\\\" slot=\\\"icon-only\\\"></ion-icon>\\n      </ion-button>\\n    </ion-col>\\n    <ion-col size=\\\"2\\\">\\n      <ion-button fill=\\\"clear\\\" (click)=\\\"prevPage()\\\">\\n        <ion-icon name=\\\"chevron-back\\\" slot=\\\"icon-only\\\"></ion-icon>\\n      </ion-button>\\n    </ion-col>\\n \\n    <ion-col size=\\\"4\\\" class=\\\"ion-text-center\\\">\\n      <ion-select interface=\\\"popover\\\" [(ngModel)]=\\\"resultsCount\\\" (ionChange)=\\\"loadtableData()\\\">\\n        <ion-select-option [value]=\\\"5\\\">5</ion-select-option>\\n        <ion-select-option [value]=\\\"10\\\">10</ion-select-option>\\n        <ion-select-option [value]=\\\"25\\\">25</ion-select-option>\\n        <ion-select-option [value]=\\\"50\\\">50</ion-select-option>\\n      </ion-select>\\n    </ion-col>\\n \\n    <ion-col size=\\\"2\\\">\\n      <ion-button fill=\\\"clear\\\" (click)=\\\"nextPage()\\\">\\n        <ion-icon name=\\\"chevron-forward\\\" slot=\\\"icon-only\\\"></ion-icon>\\n      </ion-button>\\n    </ion-col>\\n    <ion-col size=\\\"2\\\">\\n      <ion-button fill=\\\"clear\\\" (click)=\\\"goLast()\\\">\\n        <ion-icon name=\\\"play-forward\\\" slot=\\\"icon-only\\\"></ion-icon>\\n      </ion-button>\\n    </ion-col>\\n  </ion-row>\\n  \\n</ion-grid>\\n\\n<!--   \\n  <ion-grid>\\n    <ion-row>\\n      <ion-col class =\\\"label\\\">\\n        Date\\n      </ion-col>\\n      <ion-col class =\\\"label\\\">\\n        CHO\\n      </ion-col>\\n      <ion-col class =\\\"label\\\">\\n        Fat\\n      </ion-col>\\n      \\n    </ion-row>\\n    <ion-row>\\n      <ion-col class =\\\"textlabel\\\">\\n        13/08/2020\\n      </ion-col>\\n      <ion-col class =\\\"textlabel\\\">\\n        100\\n      </ion-col>\\n      <ion-col class =\\\"textlabel\\\">\\n        50\\n      </ion-col>\\n      \\n    </ion-row>\\n\\n    <ion-row>\\n      <ion-col class =\\\"textlabel\\\">\\n        14/08/2020\\n      </ion-col>\\n      <ion-col class =\\\"textlabel\\\">\\n        600\\n      </ion-col>\\n      <ion-col class =\\\"textlabel\\\">\\n        50\\n      </ion-col>\\n      \\n    </ion-row>\\n   \\n\\n    <ion-row>\\n      <ion-col class =\\\"textlabel\\\">\\n        17/08/2020\\n      </ion-col>\\n      <ion-col class =\\\"textlabel\\\">\\n        600\\n      </ion-col>\\n      <ion-col class =\\\"textlabel\\\">\\n        50\\n      </ion-col>\\n      \\n    </ion-row>\\n    </ion-grid> -->\\n    \\n    \\n\\n\\n</div>\\n\\n<div [hidden]=\\\"selectTabs != 'chart'\\\">\\n\\n  \\n\\n</div>\\n\\n\\n<div [hidden]=\\\"selectTabs != 'export'\\\">\\n<!-- \\n  <ion-buttons slot=\\\"start\\\">\\n    <ion-button (click)=\\\"exportCSV()\\\">\\n      Export\\n    </ion-button>\\n  </ion-buttons>  -->\\n\\n  <!-- <table border=\\\"1\\\" class=\\\"data-table\\\">\\n    <tr>\\n      <td *ngFor=\\\"let header of headerRow\\\" text-center><b>{{ header }}</b></td>\\n    </tr>\\n    <tr *ngFor=\\\"let row of csvData; let i = index\\\">\\n      <td *ngFor=\\\"let data of row; let j = index; trackBy: trackByFn\\\" class=\\\"data-col \\\">\\n        <ion-input type=\\\"text\\\" [(ngModel)]=\\\"csvData[i][j]\\\"></ion-input>\\n      </td>\\n    </tr>\\n  </table> -->\\n\\n  <ion-item lines=\\\"none\\\">\\n    <ion-label>Start Date</ion-label>\\n    <ion-datetime class=time displayFormat=\\\"MM-DD-YYYY\\\" placeholder=\\\"Today\\\"></ion-datetime>\\n</ion-item>\\n\\n\\n<ion-item lines=\\\"none\\\">\\n  <ion-label>End Date</ion-label>\\n  <ion-datetime class=time displayFormat=\\\"MM-DD-YYYY\\\" placeholder=\\\"Today\\\"></ion-datetime>\\n</ion-item>\\n\\n\\n\\n<!-- <ion-button  class = \\\"center\\\" (click)=\\\"sendEmail()\\\" size = \\\"small\\\" class = \\\"center\\\" color=\\\"primary\\\">Send Email </ion-button> -->\\n\\n\\n</div>\\n\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { RecordPage } from './record.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RecordPage,\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class RecordRoutingModule {}\n","import { IonicModule } from '@ionic/angular';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RecordPage } from './record.page';\nimport { ExploreContainerComponentModule } from '../explore-container/explore-container.module';\n\nimport { RecordRoutingModule } from './record-routing.module';\nimport { FoodCardComponent } from '../foodcard/foodcard.component';\nimport { CardComponent } from '../card/card.component';\nimport { ChartsModule } from 'ng2-charts';\n\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    ExploreContainerComponentModule,\n    RecordRoutingModule,\n    ReactiveFormsModule\n  ],\n  declarations: [RecordPage,\n  FoodCardComponent,\n  CardComponent\n  ]\n})\nexport class RecordModule {}\n","export default \".header-row {\\n  font-weight: 500;\\n  border-bottom: 2px solid #000;\\n}\\n\\n.data-row {\\n  border-bottom: 1px solid #000;\\n}\\n\\n.label {\\n  font-weight: bold;\\n  text-align: center;\\n}\\n\\n.textlabel {\\n  text-align: center;\\n}\\n\\n.center {\\n  margin-left: auto;\\n  margin-right: auto;\\n  width: 200px;\\n  margin-top: 27px;\\n  display: block !important;\\n}\\n\\n.data-table {\\n  min-width: 100px;\\n}\\n\\n.data-col {\\n  background: #f0f0f0;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvUmVjb3JkL3JlY29yZC5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBZ0I7RUFDaEIsNkJBQTZCO0FBQy9COztBQUdBO0VBQ0UsNkJBQTZCO0FBQS9COztBQU1BO0VBQVEsaUJBQWdCO0VBQ3BCLGtCQUFrQjtBQUZ0Qjs7QUFPQTtFQUNJLGtCQUFrQjtBQUp0Qjs7QUFXRTtFQUNFLGlCQUFpQjtFQUNqQixrQkFBa0I7RUFDbEIsWUFBWTtFQUNaLGdCQUFnQjtFQUNoQix5QkFBeUI7QUFSN0I7O0FBWUU7RUFDRSxnQkFBZ0I7QUFUcEI7O0FBYUU7RUFDRSxtQkFBbUI7QUFWdkIiLCJmaWxlIjoic3JjL2FwcC9SZWNvcmQvcmVjb3JkLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5oZWFkZXItcm93IHtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkICMwMDA7XG59XG5cblxuLmRhdGEtcm93IHtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICMwMDA7XG59XG5cblxuXG5cbi5sYWJlbCB7Zm9udC13ZWlnaHQ6Ym9sZDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgXG4gIH1cblxuXG4udGV4dGxhYmVsIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgXG4gIH1cblxuXG5cblxuICAuY2VudGVye1xuICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICAgIG1hcmdpbi1yaWdodDogYXV0bztcbiAgICB3aWR0aDogMjAwcHg7XG4gICAgbWFyZ2luLXRvcDogMjdweDtcbiAgICBkaXNwbGF5OiBibG9jayAhaW1wb3J0YW50O1xuICB9XG4gIFxuXG4gIC5kYXRhLXRhYmxlIHtcbiAgICBtaW4td2lkdGg6IDEwMHB4O1xuXG4gIH1cblxuICAuZGF0YS1jb2wge1xuICAgIGJhY2tncm91bmQ6ICNmMGYwZjA7XG5cbiAgfSJdfQ== */\";","import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ChartDataSets } from 'chart.js';\nimport { Color, Label } from 'ng2-charts';\nimport { RecordService } from '../services/record.service';\nimport { EmailValidator } from '@angular/forms';\nimport { DatabaseService } from '../services/database.service';\n\n\n\n\n@Component({\n  selector: 'app-record',\n  templateUrl: 'record.page.html',\n  styleUrls: ['record.page.scss']\n})\nexport class RecordPage {\n  \n\n  page = 0;\n  totalPages = 10;\n  resultsCount = 10;\n  data: any[] = []\n  Data: any[] = []\n  sortKey = null;\n  sortDirection = 0;\n\n  // Chart Data\n  chartData: ChartDataSets[] = [\n    { data: [], label: 'Daily CHO' },\n    { data: [], label: 'Daily Fat' },\n    { data: [], label: 'CHO Benchmark' },\n    { data: [], label: 'Fat Benchmark' }\n  ];\n  chartLabels: Label[];\n\n // Options\n chartOptions = {\n  responsive: true,\n  title: {\n    display: true,\n    text: 'Historic Stock price'\n  },\n  pan: {\n    enabled: true,\n    mode: 'xy'\n  },\n  zoom: {\n    enabled: true,\n    mode: 'xy'\n  }\n};\nchartColors: Color[] = [\n  {\n    borderColor: '#000000',\n    backgroundColor: '#ff00ff'\n  }\n];\nchartType = 'line';\nshowLegend = false;\n// For search\nstock = 'AAPL';\n\n\n  //default segment\n  selectTabs='table view'\n  constructor(\n    private dailyrecorddb: RecordService,\n    private http: HttpClient\n  \n    ) \n\n    {\n    this.loadtableData()\n    this.getchartData();\n  }\n\n\n  getchartData() {\n    this.http.get(`https://financialmodelingprep.com/api/v3/historical-price-full/${this.stock}?from=2018-03-12&to=2019-03-12`).subscribe(res => {\n    const history = res['historical'];\n\n    this.chartLabels = [];\n    this.chartData[0].data = [];\n\n    for (let entry of history) {\n      this.chartLabels.push(entry.date);\n      this.chartData[0].data.push(entry['close']);\n    }\n\n  });\n}\n\n\n\n\n\n\n  // loadtableData(){\n  //   this.dailyrecorddb.fetchRecords().subscribe(item => {\n  //     this.Data = item\n   \n  //   });\n\n  // }\n\n    loadtableData() {\n    this.http\n      .get(`https://randomuser.me/api/?page=${this.page}&results=${this.resultsCount}`)\n      .subscribe(res => {\n        this.data = res['results'];\n        \n      });\n     \n  }\n\n  \n  nextPage() {\n    this.page++;\n    this.loadtableData();\n  }\n \n  prevPage() {\n    this.page--;\n    this.loadtableData();\n  }\n \n  goFirst() {\n    this.page = 0;\n    this.loadtableData();\n  }\n \n  goLast() {\n    this.page = this.totalPages - 1;\n    this.loadtableData();\n  }\n}\n\n\n\n\n  "],"sourceRoot":"webpack:///"}